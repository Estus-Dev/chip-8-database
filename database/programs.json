[
  {
    "title": "15 PUZZLE",
    "file": "15 Puzzle [Roger Ivie].ch8",
    "description": "15 Puzzle, by Roger Ivie<br/><br/>Rearrange the tiles into the sequence 0-F. Moves tile by it associated key.",
    "sha1": "ea9af3c09b0d9e265fcd92bcc5d51a2939fdf27a",
    "platform": "chip8",
    "release": "19xx",
    "authors": ["Roger Ivie"]
  },
  {
    "title": "ADDITION PROBLEMS",
    "file": "Addition Problems [Paul C. Moews].ch8",
    "description": "Addition Problems, by Paul C. Moews<br/><br/>Do simple math.",
    "sha1": "feaa2b999737630a6402e990df4d0558f79ba43e",
    "platform": "chip8",
    "release": "1979",
    "authors": ["Paul C. Moews"]
  },
  {
    "title": "AIRPLANE",
    "file": "Airplane.ch8",
    "description": "Airplane - Blitz type of bombing game. Hit \"8\" to drop a bomb.",
    "sha1": "fca71182a8838b686573e69b22aff945d79fe1d0",
    "platform": "chip8",
    "release": "19xx"
  },
  {
    "title": "ANIMAL RACE",
    "file": "Animal Race [Brian Astle].ch8",
    "description": "Animal Race, by Brian Astle<br/><br/>Animal Race is a fun game for one person, with an element of luck - sure to put a smile on your face.  Five different animals race against one another and you have the chance to test your expertise at picking the winner.",
    "sha1": "a27dcf88a931f70c3ccf3c01a5410b263bac48bc",
    "platform": "chip8",
    "authors": ["Brian Astle"]
  },
  {
    "title": "ASTRO DODGE",
    "file": "Astro Dodge [Revival Studios, 2008].ch8",
    "options": {
      "loadStoreQuirks": true
    },
    "description": "Astro Dodge (2008), by Revival Studios<br/><br/>Your goal is to make your way through the asteroids field and dodge the asteroids, scoring points for each asteroid you are able to dodge. Button 2,4,6,8 will move your ship, button 5 will start the game.",
    "sha1": "ac621d9fcada302ba6965768229ef130630bc525"
  },
  {
    "title": "BIORHYTHM",
    "file": "Biorhythm [Jef Winsor].ch8",
    "description": "Biorhythm, by Jef Winsor<br/><br/>The theory of Biorhythm states that there are thre predominant cycles that can influence human behavior. These include a 23-day physical cycle, a 28-day emotional cycle and a 33-day intellectual cycle.  All three cycles start at birth and continue throughout life.<br/><br/>Each cycle consists of a positive and a negative period.  Physical, Emotional and Intellectual aspects are enhanced during positive periods.  Poor performance is indicated by the negative period of a cycle.<br/><br/>A critical day occurs on the crossover from the positive to the negative period or vice versa. A critical day indicates instability in a particular aspect. <br/><br/>How to Use Biorhythm: <br/><br/>1. Enter birthdate using 2-digit month, 2-digit day, and 4-digit year.<br/><br/>2. Enter start date using 2-digit month, 2-digit day, and 4-digit year. The start date indicates the first day of the 32-day Biorhythm chart the program will generate.<br/><br/>3. After a period of calculation proportional to the span of time involved, the three cycle curves will be shown for a 32-day period. Each horizontal bit position represents one day in the cycle. The start day, on the left, and every seventh day are indicated by week markers. The first day of a positive or negative period is a critical day.<br/><br/>4. To advance the start date, hold key F down until the desired date is reached. To decrement the start date, hold key B down. These functions allow changing the start date slightly without reentering all the dates and waiting for the calculations to be preformed.<br/><br/>5. Press Key 0 to clear the screen and enter a new set of dates.",
    "sha1": "3368d56efeb584c509bafb548f1ee5e71ac1bc70",
    "platform": "chip8",
    "authors": ["Jef Winsor"]
  },
  {
    "title": "BLINKY",
    "file": "Blinky [Hans Christian Egeberg, 1991].ch8",
    "options": {
      "loadStoreQuirks": true,
      "shiftQuirks": true
    },
    "description": "Blinky (1991), by Hans Christian Egeberg<br/><br/>Pacman clone.<br/>3, 6 - down/up. 7, 8 - left/right",
    "sha1": "d40abc54374e4343639f993e897e00904ddf85d9"
  },
  {
    "title": "BLITZ",
    "file": "Blitz [David Winter].ch8",
    "description": "Blitz, by David Winter<br/><br/>This game is a BOMBER clone. You are in a plane, and you must destroy the towers of a town. Your plane is flying left to right, and goes down. Use 5 to drop a bomb. The game ends when you crash yourself on a tower...",
    "sha1": "6f6509f38220e057a7e32ebb22dd353c1078e3e7"
  },
  {
    "title": "BMP VIEWER",
    "file": "BMP Viewer - Hello (C8 example) [Hap, 2005].ch8",
    "options": {
      "shiftQuirks": true
    },
    "description": "BMP Viewer (2005), by Hap<br/><br/>works with monochrome BMPs only, of course. Put the BMP data (headerless) at offset $30. change offset $0 (200) $00ff to $1202 for Chip-8.",
    "sha1": "72c2cbfea48000e25891dd4968ae9f1adef1e7e3"
  },
  {
    "title": "BOWLING",
    "file": "Bowling [Gooitzen van der Wal].ch8",
    "description": "Bowling, by Gooitzen van der Wal<br/><br/>Bowling is a great game for recreation and competion requiring skill and a little bit of luck.  This program simulates bowling closely with regular scoring and the option of using three different spins on the ball.",
    "sha1": "b3fed4ed1eb0ed693c9731dbe53b29a76236c781",
    "platform": "chip8",
    "authors": ["Gooitzen van der Wal"]
  },
  {
    "title": "BREAKOUT",
    "file": "Breakout (Brix hack) [David Winter, 1997].ch8",
    "description": "Breakout (Brix hack) 1997, by David Winter<br/><br/>This game is an \"arkanoid\" precursor. You have 5 lives, and your goal is the destruction of all the brixs. Use 4 and 6 to move your paddle. The game ends when all the brixs are destroyed. This game is the same than BRIX, but has graphics looking like the game on the Atari 2600 console.",
    "sha1": "237756a4014fb3aa82a29246a7cdd534f8dc2dbb",
    "platform": "chip8",
    "release": "1997",
    "authors": ["David Winter"]
  },
  {
    "title": "BRICK",
    "file": "Brick (Brix hack, 1990).ch8",
    "description": "BRICK (Brix hack), 1990<br/><br/>A modified version of BRIX, a CHIP-8 game. Original BRIX by Andreas Gustafsson. This one is a solid wall; no air between bricks! 4, 6 - left/right",
    "sha1": "91442577a6bbf8c3267f2df95fdfc50baebe176d",
    "platform": "chip8",
    "release": "1990"
  },
  {
    "title": "BRIX",
    "file": "Brix [Andreas Gustafsson, 1990].ch8",
    "description": "Brix (1999), by Andres Gustafsson<br/><br/>Arkanoid clone. 4, 6 - left/right",
    "sha1": "f13766c14aeb02ad8d4d103cb5eadd282d20cddc",
    "platform": "chip8",
    "release": "1990",
    "authors": ["Andreas Gustafsson"]
  },
  {
    "title": "CAVE",
    "file": "Cave.ch8",
    "description": "Cave (199x)<br/><br/>Guide the dot to end of the cave maze without bumping into a wall. Navigation: 4, 6, 2, 8.",
    "sha1": "5c82520906073287a3ef781746c67207ca084d93",
    "platform": "chip8",
    "release": "19xx"
  },
  {
    "title": "CHIP8 EMULATOR LOGO",
    "file": "Chip8 emulator Logo [Garstyciuks].ch8",
    "description": "Chip8 test program",
    "sha1": "d92c71b955b7634370571bd707715cf8bb0e2fb4",
    "platform": "chip8",
    "authors": ["Garstyciuks"]
  },
  {
    "title": "CHIP8 PICTURE",
    "file": "Chip8 Picture.ch8",
    "description": "Chip8 test program",
    "sha1": "a82ca5c53e1dcedfab4f65efef02229145771b7d",
    "platform": "chip8"
  },
  {
    "title": "CLOCK PROGRAM",
    "file": "Clock Program [Bill Fisher, 1981].ch8",
    "description": "Clock Program (1981), by Bill Fisher<br/><br/>This neat little clock program is the perfect program to run when someone asks: \"That's nice, but what can your computer DO?\" The program features \"reverse\" video numerals on the screen, which is a nice change from the usual white numbers on a black background. Instructions:<br/>- Type six digits on the hex keypad for the desired clock starting time, using 23 hour format (ex.173055)<br/>- Hit any hex key to start clock running at the above time setting.",
    "sha1": "016345d75eef34448840845a9590d41e6bfdf46a"
  },
  {
    "title": "COIN FLIPPING",
    "file": "Coin Flipping [Carmelo Cortez, 1978].ch8",
    "description": "Coin Flipping (1978), by Carmelo Cortez<br/><br/>The game is a Coin FlLpping program. Flip run up and the computer starts to flip a coin, and at the same tine shosing heads and tails on the screen, stopping at the value set in VC.",
    "sha1": "614a2b3d0bb5d62a16d963ac2d3a79eb3dd22742",
    "platform": "chip8",
    "release": "1978",
    "authors": ["Carmelo Cortez"]
  },
  {
    "title": "CONNECT 4",
    "file": "Connect 4 [David Winter].ch8",
    "description": "Connect 4, by David Winter<br/><br/>This game is for two players. The goal is to align 4 coins in the game area. Each player's coins are colored. When you drop a coin, it is paced on the latest dropped coin in the same column, or at the bottom if the column is empty. Once the column is full, you cannot place any more coins in it. To select a column, use 4 and 6.<br/><br/>To drop a coin, use 5. There is no winner detection yet. This will be soon avalaible (Hey! I don't spend my life on CHIP8 !).",
    "sha1": "2d10c07b532f4fa7c07a07324ba26ca39fe484fd"
  },
  {
    "title": "CRAPS",
    "file": "Craps [Camerlo Cortez, 1978].ch8",
    "description": "Craps (1978) by: Camerlo Cortez<br/><br/>To use the Craps program, press any key to roll dice. 7 or 11 wins, 12, 2 or 3 loses on first roll. The second roll must match the first to win, but if you roll a seven you lose. This program could be expanded to include on-the-screen scoring of bets.",
    "sha1": "35158696bd94ea22ef34e899fff1f15f7154d4fd",
    "platform": "chip8",
    "release": "1978",
    "authors": ["Camerlo Cortez"]
  },
  {
    "title": "DEFLECTION",
    "file": "Deflection [John Fort].ch8",
    "description": "Deflection, by John Fort<br/><br/>In the VIP Deflection game you position mirrors anywhere on the display screen. The object of the game is to deflect a ball of the mirrors a maximum number of times before hitting the target.<br/><br/>The number of deflections times the target number gives you deflection points. These are added to your previous point total. If you fail to hit the target you get no points. The winner of the game is the player who accumulates 257 or more deflected points.<br/><br/>To program the mirrors, select the proper mirror type. Key 1 will place a horizontal mirror on the board. Key 2 selects a vertical mirror, Key 3 a slant-left mirror, Key 4 a slant-right mirror.<br/><br/>After a mirror has been selected, you may position the mirror by using keys 1 through 4 and 6 through 9. Once a mirror has been selected and positioned, it may be fixed into position by pressing Key 5.<br/><br/>You may position up to 10 mirrors on the game board. After you have the maximum amount on the board you must press Key 0 to progress to the fire mode. If you wish to progress to the fire mode with less than 10 mirrors programmed, you may do so by pressing Key 0. You fire the ball in the direction you want by using Keys 1 through 4 and Keys 6 through 9.",
    "sha1": "8e5f19d8ae9f3346779613359610967a5ed95fa8",
    "platform": "chip8",
    "authors": ["John Fort"]
  },
  {
    "title": "DELAY TIMER TEST",
    "file": "Delay Timer Test [Matthew Mikolay, 2010].ch8",
    "description": "Delay Timer Test (2010), by Matthew Mikolay<br/><br/>Here's another little program I wrote to test out a feature in my game. This program allows the user to change the value of the V3 register using the 2 and 8 keys. When the 5 key is pressed, the delay timer starts counting down from the value the user placed into the V3 register, and the screen is updated as the value changes.",
    "sha1": "082c71b67e36e033c2e615ad89ba4ed5d55a56d0"
  },
  {
    "title": "DIVISION TEST",
    "file": "Division Test [Sergey Naydenov, 2010].ch8",
    "description": "Division Test (2010), by Sergey Naydenov",
    "sha1": "064492173cf4ccac3cce8fe307fc164b397013b9"
  },
  {
    "title": "FIGURES",
    "file": "Figures.ch8",
    "description": "Figures<br/><br/>Tetris like game with numbers.",
    "sha1": "3b2bf5dc7ffb5f3fbe168e802079f79730535ca8",
    "platform": "chip8"
  },
  {
    "title": "FILTER",
    "file": "Filter.ch8",
    "description": "Filter<br/><br/>Catch the drop coming from the pipe at the top of the screen with your paddle.",
    "sha1": "ae71a7b081a947f1760cdc147759803aea45e751",
    "platform": "chip8"
  },
  {
    "title": "FISHIE",
    "file": "Fishie [Hap, 2005].ch8",
    "description": "Fishie (2005), by Hap<br/><br/>used as internal rom for fish n chips",
    "sha1": "49c7234a1733db355560a13c57b26f055533c233",
    "platform": "chip8",
    "release": "2005",
    "authors": ["Hap"]
  },
  {
    "title": "FRAMED MK1",
    "file": "Framed MK1 [GV Samways, 1980].ch8",
    "description": "Framed Mk1 (1980), by G.V. Samways<br/><br/>This program displays a random movement of dots. You will notice a repetition in the pattern after a time.",
    "sha1": "ac7c8db7865beb22c9ec9001c9c0319e02f5d5c2",
    "platform": "chip8",
    "release": "1980",
    "authors": ["GV Samways"]
  },
  {
    "title": "FRAMED MK2",
    "file": "Framed MK2 [GV Samways, 1980].ch8",
    "description": "Framed Mk2 (1980), by G.V. Samways<br/><br/>This program displays a random movement of dots. You will notice a repetition in the pattern after a time.",
    "sha1": "eb72a25bd58e122e65a540807e7a1816abaa4f41",
    "platform": "chip8",
    "release": "1980",
    "authors": ["GV Samways"]
  },
  {
    "title": "GUESS",
    "file": "Guess [David Winter].ch8",
    "description": "Guess, by David Winter<br/><br/>Think to a number between 1 and 63. CHIP8 shows you several boards and you have to tell if you see your number in them. Press 5 if so, or another key if not. CHIP8 gives you the number...",
    "sha1": "137cb8397456f53fcab216124458238bc18c0965",
    "platform": "chip8",
    "authors": ["David Winter"]
  },
  {
    "title": "HIDDEN",
    "file": "Hidden [David Winter, 1996].ch8",
    "description": "Hidden (1996), by David Winter<br/><br/>HIDDEN is a \"memory\" game. It is very simple to play. The rules are as follow: your goal is to find all the identical cards in a minimum time. You are playing in a 4*4 card grid. You can see only two cards at the same time. Once this time passed, these two cards will remain shown if they are identical, otherwise they will be hidden again. When the game is finished, two scores are shown: SC is your score, corresponding to the number of tries HI is the best score (smallest number of tries made to finish) The keys are: [8] - Move DOWN, [4] - Move LEFT, [5] - Show card, [6] -  Move RIGHT, [2] - Move UP",
    "sha1": "050f07a54371da79f924dd0227b89d07b4f2aed0"
  },
  {
    "title": "HI-LO",
    "file": "Hi-Lo [Jef Winsor, 1978].ch8",
    "description": "Hi-Lo, by Jef Winsor<br/><br/>You have 10 chances to guess the value of a random number between 00 and 99 selected by the program. The number at the right of the screen shows the number of the guess you are using. Enter a two digit number and the computer tells you if you are high or low. Press any key to erase this number and then, try again. If you have failed after ten guesses, press any key and the number will be shown. If you are good you will never need more than seven guesses.",
    "sha1": "dbb52193db4063149c3d8768ab47dd740d90955c",
    "platform": "chip8",
    "authors": ["Jef Winsor"]
  },
  {
    "title": "IBM LOGO",
    "file": "IBM Logo.ch8",
    "description": "IBM logo",
    "sha1": "1ba58656810b67fd131eb9af3e3987863bf26c90",
    "platform": "chip8"
  },
  {
    "title": "JUMPING X AND O",
    "file": "Jumping X and O [Harry Kleinberg, 1977].ch8",
    "description": "Jumping X and O (1997), by Harry Kleinberg<br/><br/>Here is what the program is written to do. First, a solid 6×6spot block appears in the upper right quadrant of the tv display. A 5×5 \"X\" pattern appears in the center and jumps randomly to a new location every 1/5 second. When the X overlaps the 6×6 block, the X disappears, an \"0\" pattern appears in the center of the screen, and repeats the process, being replaced by the X when an overlap with the block occurs. The program continues until the machine IS stopped",
    "sha1": "5b29263763be401c31d805bc35a4cd211d552881",
    "platform": "chip8",
    "release": "2011",
    "authors": ["Martin Janiczek"]
  },
  {
    "title": "KALEIDOSCOPE",
    "file": "Kaleidoscope [Joseph Weisbecker, 1978].ch8",
    "description": "Kaleidoscope (1978), by Joseph Weisbecker<br/><br/>Four spots appear in a group at the center of the screen. Press keys 2, 4,  6, or 8 to create a pattern. Keep your pattern smaller than 138 key depressions. Push key 0 to terminate pattern entry. Pushing key 0 causes your pattern to be continuously repeated forming a fascinating, changing kaleidoscope display on the screen. A \"44444442220\" key sequence provides a very nice effect Experiment to find other nice patterns.",
    "sha1": "fc724ae0125f5f1ac94a79fe3afc6318b1f57556",
    "platform": "chip8",
    "authors": ["Joseph Weisbecker"]
  },
  {
    "title": "KEYPAD TEST",
    "file": "Keypad Test [Hap, 2006].ch8",
    "options": {
      "shiftQuirks": true
    },
    "description": "Keypad Test (2006), by Hap<br/><br/>press a chip8 key and the pressed char will light up if you want to do something funny, soft-reset the chip8/emulator over and over, and the sprite layout will become messed up ;p",
    "sha1": "0ebc4b92c6059d6193565644fb00108161d03d23"
  },
  {
    "title": "LANDING",
    "file": "Landing.ch8",
    "description": "Landing<br/><br/>Blitz type game.",
    "sha1": "72fb3e0a4572bdb81f484df7948a8bc736fe78d0",
    "platform": "chip8"
  },
  {
    "title": "LIFE",
    "file": "Life [GV Samways, 1980].ch8",
    "description": "Life (1980), by G.V. Samways<br/><br/>This is a display of cell growth, in accordance with the following rules:<br/>1. A cell is born if 3 cells are adjecent to an empty space.<br/>2. A cell lives if 2 or 3 cells are adjacent, and dies otherwise.<br/>3. All events take place simultaneously.<br/>To start the game, you make a pattern by entering the cell coordinates, first the \"Y\" from 0-7 downwards, then the \"X\" from 0-F across. F initialises the program, and the number of scans is entered plus one, so that 1 gives 0 scans to F giving 14, and 0 giving 255. The sit back and watch the colony live, or die.",
    "sha1": "efa6bc8f1f35baaa16700d68a83dc4919797e2fe",
    "platform": "chip8",
    "authors": ["GV Samways"]
  },
  {
    "title": "LUNAR LANDER",
    "file": "Lunar Lander (Udo Pernisz, 1979).ch8",
    "description": "Lunar Lander (1979), by Udo Pernisz<br/><br/>You are descending to the floor of a 250-foot crater. The right side of the TV display shows amount of fuel, feet from bottom and fall rate per cycle. Lenght of fall rate cycle changes from about 1/4 second to one second.  The fall rate increases by one foot per second/per cycle. The computer will update the display only at the end of each cycle.<br/><br/>The left side of the display shows the Lunar Lander descending from 250 feet. The Lander will first appear at one of sixteen locations. It will then slowly drop down the crater. The crater walls have rock formations protruding from them which must be avoided.  If either rocket motor should touch any part of the crater, the Lander will explode in a cloud of smoke and disintegrate. (Remember, these are atomic thrusters and react like miniature atomic bombs upon impact).<br/><br/>When you reach 32 feet, the display will change, and you will see the crater floor. You must now land between the rock formations on the floo and maintain a minimum fall rate.  As you drop your fall rate to zero, you soon discover that the Lander becomes more and more unstable just as any hovering object would. And now with perfect skill you guide the ship in for a perfect touch down, or?",
    "sha1": "72e8f3a10a32bd7fb91322ecab87249f95e81e57",
    "platform": "chip8"
  },
  {
    "title": "MASTERMIND",
    "file": "Mastermind FourRow (Robert Lindley, 1978).ch8",
    "description": "Mastermind FourRow (1978), by Robert Lindley<br/><br/>The game starts by displaying a series of dashes arranged in rows. As the game progresses, the player attempts to  deduce the hidden code by replacing the dashes with digits entered via the hex keyboard. Each tlme a hex key is used, the selected digit replaces a dash in  one vertical column. This vertical column is one guess of the ten allowed to deduce the hidden number. When the bottom dash in any column is replaced by a digit,  that try is imidiately scored. This score appears below the current column. If any digit in the column exactly matches the hidden number digit in the same row, a broken bar will appear. then four or five (one for each row in the game) appear, the hidden number has been deduced and it will be revealed at the right end of  the screen. If any digit in the column matches a hidden digit, but in an incorrect erorr, a white bar will appear. Note that the scoring is across all rows. For example, if there are two fives in a column and one of then is in the correct row and there is only one five in the hidden numbers, one broken bar will appear. When all allowed ten tries  have been used, the hidden number will be revealed. ",
    "sha1": "669e32b6f42f52da658e428f501aabcdfa37fb2e",
    "platform": "chip8",
    "authors": ["Robert Lindley"]
  },
  {
    "title": "MAZE DEMO",
    "file": "Maze [David Winter, 199x].ch8",
    "description": "Maze (199x), by David Winter<br/><br/>Drawing a random maze like this one consists in drawing random diagonal lines. There are two possibilities: right-to-left line, and left-to-right line. Each line is composed of a 4*4 bitmap. As the lines must form non-circular angles, the two bitmaps won't be \"/\" and \"\\\". The first one (right line) will be a little bit modified. See at the end of this source.<br/><br/>The maze is composed of 16 lines (as the bitmaps are 4 pixels high), each line consists of 32 bitmaps. Bitmaps are drawn in random mode. We choose a random value (0 or 1). If it is 1, we draw a left line bitmap. If it is 0, we draw a right one.",
    "sha1": "b9272ae1acdaaa79ab649f6b48b72088ca2b1d74",
    "platform": "chip8",
    "authors": ["David Winter"],
    "images": ["Maze_SCHIP__1.png"]
  },
  {
    "title": "MERLIN",
    "file": "Merlin [David Winter].ch8",
    "description": "Merlin, by David Winter<br/><br/>This is the SIMON game. The goal is to remember in which order the squares are lighted. The game begins by lighting 4 random squares, and then asks you to light the squares in the correct order. You win a level when you give the exact order, and each increasing level shows a additionnal square. The game ends when you light an incorrect square. Keys are 4 and 5 for the two upper squares, then 7 and 8 for the two other ones.",
    "sha1": "d979858bb9ffd07b48f52f92a8bcac0199f3623e",
    "platform": "chip8",
    "authors": ["David Winter"]
  },
  {
    "title": "MINIMAL GAME",
    "file": "Minimal game [Revival Studios, 2007].ch8",
    "description": "Minimal Game (2007), by Revival Studios",
    "sha1": "4a4123320d841ed04d8c1cd2ad6132a06b83dfa0",
    "platform": "chip8",
    "release": "2007",
    "authors": ["Revival Studios"]
  },
  {
    "title": "MISSILE",
    "file": "Missile [David Winter].ch8",
    "description": "Missile, by David Winter<br/><br/>Shoot the targets with the moving gun.",
    "sha1": "0d0cc129dad3c45ba672f85fec71a668232212cc",
    "platform": "chip8",
    "release": "19xx",
    "authors": ["David Winter"]
  },
  {
    "title": "MOST DANGEROUS GAME",
    "file": "Most Dangerous Game [Peter Maruhnic].ch8",
    "description": "Most Dangerous Game, by Peter Maruhnic<br/><br/>Most Dangerous Game pits a hunter against a hunted in a maze.  The hunter must shoot the hunted before either time runs out or the hunted escapes the maze. However, neither the hunted nor the hunter can see a wall in the maze until he runs into it.  There is always at least one path through the maze.",
    "sha1": "fa7c04f68d78e0faf6d136a3babe3943fc2e02f1",
    "platform": "chip8",
    "authors": ["Peter Maruhnic"]
  },
  {
    "title": "NIM",
    "file": "Nim [Carmelo Cortez, 1978].ch8",
    "description": "Nim (1978), by Carmelo Cortez<br/><br/>The Nim Game is a little less graphic than most games. The player may go first by pressing. \"F\" key, any other let the computer go first. You subtract 1, 2 or 3 fron the score. The one who ends up with the  last number loses!",
    "sha1": "4031dae5c7545a1adc160a661be36f19fc1d47b2",
    "platform": "chip8",
    "authors": ["Carmelo Cortez"]
  },
  {
    "title": "PADDLES",
    "file": "Paddles.ch8",
    "description": "Paddles<br/><br/>Simple pong game.",
    "sha1": "a18f1e3897416180b32e47ddc82cba9aca2c8d52",
    "platform": "chip8"
  },
  {
    "title": "PARTICLE DEMO",
    "file": "Particle Demo [zeroZshadow, 2008].ch8",
    "description": "Particle Demo (2008), by zeroZshadow<br/><br/>This is my particledemo for the Chip-8, SuperChip and MegaChip8. Works on real hardware as well as emulators. Enjoy!",
    "sha1": "507e7dc6783565071dfe4b72154af431d4466958",
    "platform": "chip8",
    "release": "2008",
    "authors": ["zeroZshadow"]
  },
  {
    "title": "PONG",
    "file": "Pong [Paul Vervalin, 1990].ch8",
    "description": "Pong (1990), by Paul Vervalin",
    "sha1": "b232ef880bd6060fb45fa6effed7edf0ae95670e",
    "platform": "chip8",
    "authors": ["Paul Vervalin"]
  },
  {
    "title": "PONG 2",
    "file": "Pong 2 (Pong hack) [David Winter, 1997].ch8",
    "description": "Pong 2 (Pong hack, 1997), by David Winter",
    "sha1": "1830eb401ba8789a477dfcf294873a5479ebcfe8",
    "platform": "chip8",
    "release": "1997",
    "authors": ["David Winter"]
  },
  {
    "title": "PONG (1 PLAYER)",
    "file": "Pong (1 player).ch8",
    "description": "Single player pong game",
    "sha1": "607c4f7f4e4dce9f99d96b3182bfe7e88bb090ee",
    "platform": "chip8",
    "authors": ["1 player"]
  },
  {
    "title": "PUZZLE",
    "file": "Puzzle.ch8",
    "description": "4x4 tile puzzle - rearrange them into the order 0-F.",
    "sha1": "1293db0ccccbe7dd3fc5a09a2abc5d7b175e18e0",
    "platform": "chip8",
    "release": "199x"
  },
  {
    "title": "RANDOM NUMBER TEST",
    "file": "Random Number Test [Matthew Mikolay, 2010].ch8",
    "description": "Random Number Test (2010), by Matthew Mikolay<br/><br/>I don't know if any of you will be interested in this, but I wrote this small program while coding my game to test out the random number generator. I wanted to see if there is a chance that zero will show up as the random number, and it turns out it can. Anyway, when you run the program, it brings a random number up on the screen. When you press any of the keys, it brings another random number up on the screen. This goes on until you quit the program. Address 0x202 holds the C0FF instruction, which commands the CHIP-8 interpreter to set V0 to a random number with the mask 0xFF. This yields 256 different possible numbers (0-255). If C0FF is changed to something like C00A, then the mask will change. This would yield 11 different possible numbers (0-10).",
    "sha1": "f1e036fb93b482b1ddfcb2bc1a4de43c8cf51def"
  },
  {
    "title": "REVERSI",
    "file": "Reversi [Philip Baltzer].ch8",
    "description": "Reversi, by Philip Baltzer<br/><br/>Reversi is a game over 100 years old, which has become popular recently under the name Othello.  The game is played on a 8x8 square, using two kinds of markers. In VIP Reversi one player has the open markers and the other player the solid markers. The score for either player at any time is the total number of his markers on the square.",
    "sha1": "ff639eceaf221ae66151a03779b41fae7118d2d8",
    "platform": "chip8"
  },
  {
    "title": "ROCKET",
    "file": "Rocket [Joseph Weisbecker, 1978].ch8",
    "description": "Rocket (1978), by Joseph Weisbecker<br/><br/>Launch your rocket and earn points.",
    "sha1": "3d1d029d6e31206d245c0ba881c0d1f003953bad",
    "platform": "chip8",
    "authors": ["Joseph Weisbecker"]
  },
  {
    "title": "ROCKET LAUNCHER",
    "file": "Rocket Launcher.ch8",
    "description": "Rocket Launcher game",
    "sha1": "e2005db6391f589534dd2d63a95b429338bd667c",
    "platform": "chip8"
  },
  {
    "title": "ROCKET LAUNCH",
    "file": "Rocket Launch [Jonas Lindstedt].ch8",
    "options": {
      "loadStoreQuirks": true
    },
    "description": "Another Rocket launcher game by Jonas Lindstedt.",
    "sha1": "5e70f91ca08e9b9e9de61670492e3db2d7f7d57a",
    "platform": "chip8",
    "release": "19xx",
    "authors": ["Jonas Lindstedt"]
  },
  {
    "title": "RUSH HOUR",
    "file": "Rush Hour [Hap, 2006].ch8",
    "description": "Rush Hour (2006), by Hap<br/><br/>The goal of the game is to slide the arrow block(s) out of the 6*6 grid. Completing 10 boards will be awarded with the inclusion of the next boardset(s) as seen from the connections on the boardset select screen, a password will be given so you don't have to complete the game in a single session.",
    "sha1": "4639f86beb0a203ae512b85d3b56d813b2dea7b4",
    "platform": "chip8",
    "authors": ["Hap"]
  },
  {
    "title": "RUSSIAN ROULETTE",
    "file": "Russian Roulette [Carmelo Cortez, 1978].ch8",
    "description": "Russian Roulette (1978), by Carmelo Cortez<br/><br/>This game is called Russian RouLette. Press any key to Spin and pull the Trigger. A \"Click\" or \"Bang\" will show, get ten \"clicks\" in a row and you win.",
    "sha1": "24960090b2afc9de2a4cb3ee7daf6a21456bb49b",
    "platform": "chip8",
    "authors": ["Carmelo Cortez"]
  },
  {
    "title": "SEQUENCE SHOOT",
    "file": "Sequence Shoot [Joyce Weisbecker].ch8",
    "description": "Sequence Shoot, by Joyce Weisbecker<br/><br/>You score points by having the sharp-shooter hit the targets in the proper sequence. Pressing the Key C causes the little man to shoot the top target, Key D shoots the one below it, Key E the next lower and Key F the bottom target.",
    "sha1": "448f9d30d2157ab42679b809d4fb0b43d145f74f",
    "platform": "chip8",
    "authors": ["Joyce Weisbecker"]
  },
  {
    "title": "SHOOTING STARS",
    "file": "Shooting Stars [Philip Baltzer, 1978].ch8",
    "description": "Shooting Stars (1978), by Philip Baltzer",
    "sha1": "443550abf646bc7f475ef0466f8e1232ec7474f3",
    "platform": "chip8"
  },
  {
    "title": "SIERPINSKI",
    "file": "Sierpinski [Sergey Naydenov, 2010].ch8",
    "description": "Sierpinski Carpet Demo (2010), by Sergey Naydenov",
    "sha1": "a0073e944d5ae9ca14324543fdf818907de80449",
    "platform": "chip8",
    "release": "2010",
    "authors": ["Sergey Naydenov"]
  },
  {
    "title": "SLIDE",
    "file": "Slide [Joyce Weisbecker].ch8",
    "description": "Slide, by Joyce Weisbecker<br/><br/>Slide is a two-person game. Each player tries to slide a \"puck\" over the high-scoring \"spots\" without hitting the back wall. The puck moves up and down randomly. Press \"0\" key to stop the puck. The puck will move towards the spots after you release the key. The longer you hold the key down, the further the puck travels (maximum time approximately 2.5 seconds).",
    "sha1": "7623fa0fa915979226566b24107360e7537735f4",
    "platform": "chip8",
    "authors": ["Joyce Weisbecker"]
  },
  {
    "title": "SOCCER",
    "file": "Soccer.ch8",
    "description": "Pong type of game",
    "sha1": "6df358d77961a0bf21e98876f9f616791cba31e3",
    "platform": "chip8",
    "release": "19xx"
  },
  {
    "title": "SPACE FLIGHT",
    "file": "Space Flight.ch8",
    "description": "Space flight game<br/></br>Fly through the asteroid field. Use 1 and 4 key to navigate space ship and E/F to start the game.",
    "sha1": "aa4f1a282bd64a2364102abf5737a4205365a2b4",
    "platform": "chip8",
    "release": "19xx"
  },
  {
    "title": "SPACEFIGHTERS",
    "file": "Programmable Spacefighters [Jef Winsor].ch8",
    "description": "Programmable Spacefighters, by Jef Winsor<br/><br/>Programmable Spacefighters is a combat game involving 2 to 8 spaceships competing for the domination of a contained field in space. The field of play is a two-dimensional representation of an oblong spheroid.",
    "sha1": "726cb39afa7e17725af7fab37d153277d86bff77",
    "platform": "chip8",
    "authors": ["Jef Winsor"]
  },
  {
    "title": "SPACE INTERCEPT",
    "file": "Space Intercept [Joseph Weisbecker, 1978].ch8",
    "description": "Space Intercept (1978), by Joseph Weisbecker<br/><br/>At startup, Press 1 to select the large UFO which counts 5 points when hit or 2 to select the small UFO which counts 15 points when hit. Launch your rocket by pressing key 4,5 or 6. You get 15 rockets as shown in the lower right corner of the screen. Your score is shown in the lower left corner of the screen.",
    "sha1": "ed829190e37815771e7a8c675ba0074996a2ddb0"
  },
  {
    "title": "SPACE INVADERS",
    "file": "Space Invaders [David Winter].ch8",
    "options": {
      "shiftQuirks": true
    },
    "description": "Space Invaders (1978), by David Winter<br/><br/>The well known game. Destroy the invaders with your ship. Shoot with 5, move with 4 and 6. Press 5 to begin a game.",
    "sha1": "5c28a5f85289c9d859f95fd5eadbdcb1c30bb08b",
    "platform": "chip8",
    "authors": ["David Winter"]
  },
  {
    "title": "SPOOKY SPOT",
    "file": "Spooky Spot [Joseph Weisbecker, 1978].ch8",
    "description": "Spooky Spot (1978), by Joseph Weisbecker<br/><br/>Now you can let the computer make your big decisions or predict the future just like governmentt or industry leaders do. You will see the words YES and NO at the right of the screen. Ask the computer any question that can be answered with YES or NO. Press KEY 0 and the spooky spot will show you the computer's answer. This program replaces your old fashioned mechanical OUIJA board.",
    "sha1": "1bd92042717c3bc4f7f34cab34be2887145a6704",
    "platform": "chip8",
    "authors": ["Joseph Weisbecker"]
  },
  {
    "title": "SQRT TEST PROGRAM",
    "file": "SQRT Test [Sergey Naydenov, 2010].ch8",
    "description": "SQRT Test Program (2010), by Sergey Naydenov",
    "sha1": "2dbb5b53121ec84cb2377fcb645e57cc8b5eaa09"
  },
  {
    "title": "SQUASH",
    "file": "Squash [David Winter].ch8",
    "description": "Squash, by David Winter<br/><br/>Bounce a ball around a squash court with your paddle",
    "sha1": "a58ec7cc63707f9e7274026de27c15ec1d9945bd",
    "platform": "chip8",
    "release": "19xx",
    "authors": ["David Winter"]
  },
  {
    "title": "STARS DEMO",
    "file": "Stars [Sergey Naydenov, 2010].ch8",
    "options": {
      "loadStoreQuirks": true
    },
    "description": "Stars Demo (2010), by Sergey Naydenov",
    "sha1": "0085dd8fce4f7ac2e39ba73cf67cc043f9ba4812",
    "platform": "chip8",
    "release": "2010",
    "authors": ["Sergey Naydenov"]
  },
  {
    "title": "SUBMARINE",
    "file": "Submarine [Carmelo Cortez, 1978].ch8",
    "description": "Submarine (1978), by Carmelo Cortez<br/><br/>The Sub Game is my favorite. Press \"5\" key to fire depth charges at the subs below. You score 15 points for a small sub and 5 points for the larger. You get 25 depth charges to start.",
    "sha1": "89aadf7c28bcd1c11e71ad9bd6eeaf0e7be474f3",
    "platform": "chip8",
    "authors": ["Carmelo Cortez"]
  },
  {
    "title": "SUM FUN",
    "file": "Sum Fun [Joyce Weisbecker].ch8",
    "description": "Sum Fun, by Joyce Weisbecker<br/><br/>The object of this game is to add up the three digits which appear in the middle of the screen and then hit the key representing the total as fast as you can.",
    "sha1": "83a2f9c8153be955c28e788bd803aa1d25131330",
    "platform": "chip8",
    "authors": ["Joyce Weisbecker"]
  },
  {
    "title": "SUPERWORM V4",
    "file": "Worm V4 [RB-Revival Studios, 2007].ch8",
    "description": "SuperWorm V4 (2007), by Revival Studios<br/><br/>SuperWorm V4 is an update of the SuperChip8 game: Worm3 by RB. The original game was only for SuperChip, so i've created a Chip-8 port. It also includes several speed fixes and a new control system.",
    "sha1": "a1c1e0e7b01004be3ee77c69030e6b536cb316e6",
    "platform": "chip8",
    "release": "2007",
    "authors": ["RB-Revival Studios"]
  },
  {
    "title": "SYZYGY",
    "file": "Syzygy [Roy Trevino, 1990].ch8",
    "description": "Syzygy (1990), by Roy Trevino<br/><br/>The object of the game is to seek out \"targets\". You do this with your syzygy. Initially small, the syzygy will grow by some amount each time a target is hit. Eventually, your syzygy will be so long as to make tougher and tougher to get any points (and easier and easier to get killed). Confused? Just try it. To play: 3 - up, 6 - down, 7 - left, 8 - right",
    "sha1": "1bdb4ddaa7049266fa3226851f28855a365cfd12",
    "platform": "chip8",
    "authors": ["Roy Trevino"]
  },
  {
    "title": "TANK",
    "file": "Tank.ch8",
    "description": "You are in a tank which has 25 bombs. Your goal is to hit 25 times a mobile target. The game ends when all your bombs are shot. If your tank hits the target, you lose 5 bombs. Use 2 4 6 and 8 to move. This game uses the original CHIP8 keyboard, so directions 2 and 8 are swapped.",
    "sha1": "18b9d15f4c159e1f0ed58c2d8ec1d89325d3a3b6",
    "platform": "chip8",
    "release": "197x"
  },
  {
    "title": "TAPEWORM",
    "file": "Tapeworm [JDR, 1999].ch8",
    "description": "Tapeworm (1999)<br/><br/>Tron clone; guide the snake around and around.",
    "sha1": "775e82a36c93f1b41b42eca94b55acbc4a48cebe",
    "platform": "chip8",
    "release": "1999",
    "authors": ["JDR"]
  },
  {
    "title": "TETRIS",
    "file": "Tetris [Fran Dachille, 1991].ch8",
    "description": "Tetris (1991), by Fran Dachille",
    "sha1": "5f518084744bf3cb8733f6e5454dfd1634320563",
    "platform": "chip8",
    "release": "1991",
    "authors": ["Fran Dachille"]
  },
  {
    "title": "TIC-TAC-TOE",
    "file": "Tic-Tac-Toe [David Winter].ch8",
    "description": "Tic-Tac-Toe, by David Winter<br/><br/>2-player noughts and crosses board.",
    "sha1": "429d455a4bc53167942bf6fd934d72b0f648dce3"
  },
  {
    "title": "TIMEBOMB",
    "file": "Timebomb.ch8",
    "description": "Reset the bomb.",
    "sha1": "67996195539c0ddcd98533a01dffeec6a53a6da1",
    "platform": "chip8",
    "release": "19xx"
  },
  {
    "title": "TRIP8 DEMO",
    "file": "Trip8 Demo (2008) [Revival Studios].ch8",
    "description": "Trip8 Demo (2008), by Revival Studios<br/><br/>The Trip8/SuperTrip8 demo are demo's for the Chip-8 and SuperChip8 systems. The demo consists of an intro, 3D vectorballs, and 4 randomized dot-effects.<br/><br/>Writing a demo for the original Chip-8 interpreter was a real pain, since your framerate basically drops in half for every sprite you need to draw. So even clearing and redrawing a few dots will cause the framerate to drop to near zero :) Originally the demo was going to be bigger and there were much more graphical effects programmed/prototyped, but a lot of these effects turned out to be too much for the original unoptimized Chip-8 interpreters to handle.",
    "sha1": "032408f1f1d8e6058ecf0f23f421783c87701b39",
    "platform": "chip8",
    "release": "2008",
    "authors": ["Revival Studios"]
  },
  {
    "title": "TRON",
    "file": "Tron.ch8",
    "description": "Tron",
    "sha1": "a6a6cb2351c20b8f904da07c0ce91bd8161e9317",
    "platform": "chip8",
    "release": "19xx"
  },
  {
    "title": "UFO",
    "file": "UFO [Lutz V, 1992].ch8",
    "description": "UFO (1992)<br/><br/>You have a stationary missle launcher at the bottom of the screen. You can shoot in three directions; left diagonal, straight up, and right diagonal.. using the keys 4, 5, and 6 respectively... You try to hit one of two objects flying by... at apparently varying speeds... Your score is displayed on your left, the number of missles you have left is displayed on your right.",
    "sha1": "bdb92475acfe11bc7814a2f5eade13fcd09b756a",
    "platform": "chip8",
    "release": "1978",
    "authors": ["Joseph Weisbecker"]
  },
  {
    "title": "VERS",
    "file": "Vers [JMN, 1991].ch8",
    "description": "Vers (1991), by JMN<br/><br/>Two-player Tron game.",
    "sha1": "ade839585ddeb0e3633177df03c1d91589e629eb",
    "platform": "chip8",
    "release": "1991",
    "authors": ["JMN"]
  },
  {
    "title": "VERTICAL BRIX",
    "file": "Vertical Brix [Paul Robson, 1996].ch8",
    "description": "Vertical Brix (1996), by Paul Robson<br/><br/>Vertical breakout type of game.",
    "sha1": "da710f631f8e35534d0b9170bcf892a60f49c43d",
    "platform": "chip8",
    "release": "1996",
    "authors": ["Paul Robson"]
  },
  {
    "title": "WALL",
    "file": "Wall [David Winter].ch8",
    "description": "Wall, by David Winter<br/><br/>Squash type game.",
    "sha1": "09ce01c54ddddda42ca5cd171f1ffcfd47355d12",
    "platform": "chip8",
    "release": "19xx",
    "authors": ["David Winte"]
  },
  {
    "title": "WIPE OFF",
    "file": "Wipe Off [Joseph Weisbecker].ch8",
    "description": "Wipe Off, by Joseph Weisbecker<br/><br/>Another Breakout variant. Your score is displayed when the game is over.",
    "sha1": "d666688a8fce468a7d88b536bc1ef5f35ba12031",
    "platform": "chip8",
    "release": "19xx",
    "authors": ["Joseph Weisbecker"]
  },
  {
    "title": "X-MIRROR",
    "file": "X-Mirror.ch8",
    "description": "Kaleidoscope type game.",
    "sha1": "bc158d819890f16f105b8a316eeeefe4a0bad875",
    "platform": "chip8"
  },
  {
    "title": "ZERO",
    "file": "Zero Demo [zeroZshadow, 2007].ch8",
    "description": "Zero Demo (2007), by zeroZshadow<br/><br/>simple demo with 4 bouncing sprites. Enjoy!",
    "sha1": "09f47bea104b86169b9aeb3bdee6e26315ed0a53",
    "platform": "chip8",
    "release": "2007",
    "authors": ["ZeroShadowZ"]
  },
  {
    "title": "ZERO PONG",
    "file": "ZeroPong [zeroZshadow, 2007].ch8",
    "description": "Zero Pong (2007), by zeroZshadow<br/><br/>Another pong game",
    "sha1": "f2e9c480af31a4039af02dd7a2b8d5d1f859704d",
    "platform": "chip8",
    "release": "2007",
    "authors": ["zeroZshadow"]
  },
  {
    "title": "Octojam 1 Title",
    "authors": ["JohnEarnest"],
    "images": ["octojam1title.gif"],
    "event": "Octojam1",
    "release": "2014-09-29",
    "platform": "chip8",
    "options": {
      "tickrate": 7,
      "fillColor": "#FFAA00",
      "backgroundColor": "#AA4400",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false
    },
    "sha1": "f26993a4afd5cda2fea19935773fd3db54866623",
    "file": "octojam1title.ch8",
    "description": "Greeting program for the Octo-ber 2014 Chip8 Game Jam."
  },
  {
    "title": "Octojam 2 Title",
    "authors": ["JohnEarnest"],
    "images": ["octojam2title.gif"],
    "event": "Octojam2",
    "release": "2015-09-21",
    "platform": "chip8",
    "options": {
      "tickrate": 7,
      "fillColor": "#FFAA00",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#AA4400",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": false
    },
    "sha1": "11c68038d64a09be549a6c1e50724808914d8991",
    "file": "octojam2title.ch8",
    "description": "This title card draws a nearly full screen 64x30 animation with very low flicker."
  },
  {
    "title": "Octojam 3 Title",
    "authors": ["JohnEarnest"],
    "images": ["octojam3title.gif"],
    "event": "Octojam3",
    "release": "2016-09-25",
    "platform": "chip8",
    "options": {
      "tickrate": 7,
      "fillColor": "#FFAA00",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#AA4400",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "493c76b9d9252e1d349d408d341daff5267f35fa",
    "file": "octojam3title.ch8",
    "description": "This title card disambiguates at runtime between a COSMAC VIP, SCHIP, and Octo."
  },
  {
    "title": "Octojam 4 Title",
    "authors": ["JohnEarnest"],
    "images": ["octojam4title.gif"],
    "event": "Octojam4",
    "release": "2017-09-23",
    "platform": "chip8",
    "options": {
      "tickrate": 30,
      "fillColor": "#FFAA00",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#AA4400",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "9f55f7abc8f2bc4b59a01515f1d887a6568a8ab4",
    "file": "octojam4title.ch8",
    "description": "This title card demonstrates the new :macro and :calc directives."
  },
  {
    "title": "Octojam 5 Title",
    "authors": ["JohnEarnest"],
    "images": ["octojam5title.gif"],
    "event": "Octojam5",
    "release": "2018-09-24",
    "platform": "chip8",
    "options": {
      "tickrate": 7,
      "fillColor": "navy",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "hotpink",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "d6d8efef811350e7fba6197024c4973b360749b8",
    "file": "octojam5title.ch8",
    "description": "Greeting program for the fifth annual 2018 Octojam."
  },
  {
    "title": "Octojam 6 Title",
    "authors": ["JohnEarnest"],
    "images": ["octojam6title.gif"],
    "event": "Octojam6",
    "release": "2019-09-07",
    "platform": "chip8",
    "options": {
      "tickrate": 7,
      "fillColor": "#330033",
      "fillColor2": "#00FFFF",
      "blendColor": "#FFFFFF",
      "backgroundColor": "#AAAAFF",
      "buzzColor": "#990099",
      "quietColor": "#330033",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "screenRotation": 0
    },
    "sha1": "18aef6d2d3b560681038d0dda2273d780dc1daa5",
    "file": "octojam6title.ch8",
    "description": "Greeting program for the sixth annual 2019 Octojam."
  },
  {
    "title": "Octojam 7 Title",
    "authors": ["JohnEarnest"],
    "images": ["octojam7title.gif"],
    "event": "Octojam7",
    "release": "2020-08-07",
    "platform": "chip8",
    "options": {
      "tickrate": 30,
      "fillColor": "#ff8c1f",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#662200",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "logicQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "none",
      "fontStyle": "octo"
    },
    "sha1": "9a9c341571ace516c9789b1eb92590833af13239",
    "file": "octojam7title.ch8",
    "description": "Greeting program for the seventh annual 2020 Octojam."
  },
  {
    "title": "Octojam 8 Title",
    "authors": ["JohnEarnest"],
    "images": ["octojam8title.gif"],
    "event": "Octojam8",
    "release": "2021-10-01",
    "platform": "chip8",
    "options": {
      "tickrate": 7,
      "fillColor": "#FFAA00",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#AA4400",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "logicQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "none",
      "fontStyle": "fish"
    },
    "sha1": "959ed7d6b61e667bb59d1b497401258463f88454",
    "file": "octojam8title.ch8",
    "description": "Greeting program for the eighth annual 2021 Octojam."
  },
  {
    "title": "Octojam 9 Title",
    "authors": ["JohnEarnest"],
    "images": ["octojam9title.gif"],
    "event": "Octojam9",
    "release": "2022-10-01",
    "platform": "chip8",
    "options": {
      "tickrate": 15,
      "fillColor": "#FFCC00",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#996600",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": true,
      "jumpQuirks": false,
      "logicQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "none",
      "fontStyle": "octo"
    },
    "sha1": "5a6366decb08df66da8bd685b497ccce0884c307",
    "file": "octojam9title.ch8",
    "description": "Greetings program for the ninth annual 2022 Octojam."
  },
  {
    "title": "Into The GarlicScape",
    "authors": ["JohnEarnest"],
    "images": ["recording.gif"],
    "event": "Octojam7",
    "release": "2020-08-01",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "lightcyan",
      "fillColor2": "aquamarine",
      "blendColor": "aquamarine",
      "backgroundColor": "#001000",
      "buzzColor": "#333333",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "none",
      "logicQuirks": false,
      "fontStyle": "octo"
    },
    "sha1": "b693e60f161e69c98b0bb2bc1761cf434f8fbb0e",
    "file": "garlicscape.ch8",
    "description": "Collect aliums, avoid moths, pet llamas. A template program for Octojam 7."
  },
  {
    "title": "Super NeatBoy",
    "authors": ["JohnEarnest"],
    "images": ["recording.gif"],
    "event": "Octojam7",
    "release": "2020-08-01",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "lavender",
      "fillColor2": "deeppink",
      "blendColor": "deeppink",
      "backgroundColor": "#100010",
      "buzzColor": "black",
      "quietColor": "black",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": true,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "none",
      "logicQuirks": false,
      "fontStyle": "octo"
    },
    "sha1": "440c5fbe9f5f840e76c308738fb0d37772d66674",
    "file": "superneatboy.ch8",
    "description": "Jump, fall, tidy up leaves. A template program for Octojam 7."
  },
  {
    "title": "Eaty The Alien",
    "authors": ["JohnEarnest"],
    "images": ["eaty.gif"],
    "event": "Octojam2",
    "release": "2015-10-31",
    "platform": "schip",
    "options": {
      "tickrate": 200,
      "fillColor": "#443300",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#aa7700",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": false
    },
    "sha1": "fcaa793332a83c93f4ed79f5ffbc8403c8b8aea0",
    "file": "eaty.ch8",
    "description": "An incredible intergalactic adventure."
  },
  {
    "title": "Fuse",
    "authors": ["JohnEarnest"],
    "images": ["fuse.gif"],
    "event": "Octojam3",
    "release": "2016-10-27",
    "platform": "chip8",
    "options": {
      "tickrate": 15,
      "fillColor": "#306230",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#8BAC0F",
      "buzzColor": "#333333",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "0cd895dc3d489d0e40656218900a04310e95f560",
    "file": "fuse.ch8",
    "description": "A minimalist reinterpretation of the classic Pipe Dream."
  },
  {
    "title": "Black Rainbow",
    "authors": ["JohnEarnest"],
    "images": ["blackrainbow.gif"],
    "event": "Octojam3",
    "release": "2016-11-01",
    "platform": "schip",
    "options": {
      "tickrate": 20,
      "fillColor": "lightgray",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "gray",
      "buzzColor": "white",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "e6af47843f0ecc3302027a3756dd7b389a15e437",
    "file": "blackrainbow.ch8",
    "description": "Plumb the depths of your subconscious and bring back the motherlode..."
  },
  {
    "title": "Slippery Slope",
    "authors": ["JohnEarnest"],
    "images": ["slipperyslope.gif"],
    "event": "Octojam5",
    "release": "2018-10-31",
    "platform": "chip8",
    "options": {
      "tickrate": 30,
      "fillColor": "navy",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "powderblue",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "9d834860f455aec7e95fb886984497e5be501610",
    "file": "slipperyslope.ch8",
    "description": "The ice we skate is getting pretty thin. The water's getting warm so you might as well swim."
  },
  {
    "title": "ChipWar",
    "authors": ["JohnEarnest"],
    "images": ["chipwar.gif"],
    "release": "2014-06-06",
    "platform": "chip8",
    "options": {
      "tickrate": 15,
      "backgroundColor": "#6699FF",
      "fillColor": "#000066",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000"
    },
    "sha1": "ab5cbf267d74c168e174041b9594ae856cbd671d",
    "file": "chipwar.ch8",
    "description": "A (loose) adaptation of the classic DiceWars."
  },
  {
    "title": "Cave Explorer",
    "authors": ["JohnEarnest"],
    "images": ["cave1.gif", "cave2.gif"],
    "release": "2014-06-22",
    "platform": "chip8",
    "options": {
      "tickrate": 20,
      "backgroundColor": "#996600",
      "fillColor": "#FFCC00",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000"
    },
    "sha1": "400dbd1aa2b79b9b8546bc615bfb735c1bd1d268",
    "file": "caveexplorer.ch8",
    "description": "Do you have what it takes to be a Cave Explorer?"
  },
  {
    "title": "Sw8 Copter",
    "authors": ["JohnEarnest"],
    "images": ["sweetcopter.gif"],
    "release": "2014-09-02",
    "platform": "schip",
    "options": {
      "tickrate": 100,
      "backgroundColor": "#117799",
      "fillColor": "white",
      "buzzColor": "#1166DD",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false
    },
    "sha1": "531c44e8204d8ab8c078bad36e34067baddfccdb",
    "file": "sweetcopter.ch8",
    "description": "An adaptation of \"Swing Copters\" for the Super Chip8."
  },
  {
    "title": "Wonky Pong",
    "authors": ["TomRintjema"],
    "images": ["wonkypong.gif"],
    "event": "Octojam4",
    "release": "2018-11-01",
    "platform": "xochip",
    "options": {
      "tickrate": 100,
      "backgroundColor": "#FFFFFF",
      "fillColor": "#000000",
      "buzzColor": "#666666",
      "quietColor": "#000000"
    },
    "sha1": "518c1d40f5d768ee49d2b7951d998588ef8238ba",
    "file": "wonkypong.ch8",
    "description": "Pong, but wonky. Made for Octojam IV."
  },
  {
    "title": "Grad School Simulator 2014",
    "authors": ["JohnEarnest"],
    "images": ["gradsim.gif"],
    "release": "2014-09-15",
    "platform": "schip",
    "options": {
      "tickrate": 20,
      "backgroundColor": "gray",
      "fillColor": "black",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false
    },
    "sha1": "9797a7eaf1e80ec19c085c60bb37991420f54678",
    "file": "gradsim.ch8",
    "description": "Welcome to the sunless depths of my ennui."
  },
  {
    "title": "Mondri8",
    "authors": ["JohnEarnest"],
    "images": ["mondrian.gif"],
    "release": "2014-09-25",
    "platform": "schip",
    "options": {
      "tickrate": 100,
      "backgroundColor": "#996600",
      "fillColor": "#FFCC00",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false
    },
    "sha1": "63e787fc3e78e5fb3a394cf1bc654ad9633d8907",
    "file": "mondrian.ch8",
    "description": "Draw random compositions in the style of Piet Mondrian."
  },
  {
    "title": "Outlaw",
    "authors": ["JohnEarnest"],
    "images": ["outlaw.gif"],
    "release": "2014-07-17",
    "platform": "chip8",
    "options": {
      "tickrate": 15,
      "backgroundColor": "#664400",
      "fillColor": "#AA4400",
      "buzzColor": "coral",
      "quietColor": "#000000"
    },
    "sha1": "a9d3c975a5e733646a04f6e61deebcd0ad50f700",
    "file": "outlaw.ch8",
    "description": "An adaptation of the Atari 2600 game \"Outlaw\" for the Chip8."
  },
  {
    "title": "RPS",
    "authors": ["SystemLogoff"],
    "images": ["rps_oj1.gif"],
    "release": "2015-10-25",
    "platform": "chip8",
    "event": "Octojam1",
    "options": {
      "tickrate": 7,
      "backgroundColor": "#AA9999",
      "fillColor": "#220000",
      "buzzColor": "FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false
    },
    "sha1": "a6f3ac2d89cdc1d7b22013301863bad6a4fb7318",
    "file": "RPS.ch8",
    "description": "Classic \"Rock Paper Scissors\" game for the Chip8."
  },
  {
    "title": "Octo: a Chip 8 Story",
    "authors": ["SystemLogoff"],
    "images": ["octoachip8story.gif"],
    "release": "2015-10-29",
    "platform": "chip8",
    "event": "Octojam1",
    "options": {
      "tickrate": 7,
      "backgroundColor": "#111111",
      "fillColor": "#EEEEEE",
      "buzzColor": "FFFF00",
      "quietColor": "#222222",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false
    },
    "sha1": "39970ccfd3a3f00180d53464d4fd7862193eaf0f",
    "file": "octoachip8story.ch8",
    "description": "A visual novel game for the Chip8."
  },
  {
    "title": "Pumpkin \"Dreess\" Up",
    "authors": ["SystemLogoff"],
    "images": ["pumpkindressup.gif"],
    "release": "2015-11-01",
    "platform": "chip8",
    "event": "Octojam1",
    "options": {
      "tickrate": 7,
      "backgroundColor": "#FFA500",
      "fillColor": "#111122",
      "buzzColor": "FFFF00",
      "quietColor": "#222222",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false
    },
    "sha1": "b2abb5312f0ad28421c1190a65a73d98d4ebf401",
    "file": "pumpkindressup.ch8",
    "description": "Classic Adobe Flash games, now in Chip8."
  },
  {
    "title": "Pet Dog",
    "authors": ["SystemLogoff"],
    "images": ["petdog.gif"],
    "release": "2015-10-31",
    "platform": "chip8",
    "event": "Octojam2",
    "options": {
      "tickrate": 7,
      "fillColor": "#fafafa",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#0c0c0c",
      "buzzColor": "#fafafa",
      "quietColor": "1a1a1a",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": false
    },
    "sha1": "3be683d1ac0b27ae47a09984e420853fff0b7e0d",
    "file": "petdog.ch8",
    "description": "Undertale fangame made in Chip8."
  },
  {
    "title": "8CE Attourny - Disc 1",
    "authors": ["SystemLogoff"],
    "images": ["8ceattourny_d1.gif"],
    "release": "2016-10-30",
    "platform": "chip8",
    "event": "Octojam3",
    "options": {
      "tickrate": 7,
      "fillColor": "#f1f1f1",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#0f0f0f",
      "buzzColor": "#aaff55",
      "quietColor": "#777777",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "3ddf7b76b8f63d0089e00e3b518f78c213b74b1e",
    "file": "8ceattourny_d1.ch8",
    "description": "Exciting court battles in Chip8! Disc 1/3 of an exciting multi-tape game."
  },
  {
    "title": "8CE Attourny - Disc 2",
    "authors": ["SystemLogoff"],
    "images": ["8ceattourny_d2.gif"],
    "release": "2016-10-30",
    "platform": "chip8",
    "event": "Octojam3",
    "options": {
      "tickrate": 7,
      "fillColor": "#f1f1f1",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#0f0f0f",
      "buzzColor": "#aaff55",
      "quietColor": "#777777",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "82fd0d202a068bedfb869fc303fdeae0c814024f",
    "file": "8ceattourny_d2.ch8",
    "description": "Exciting court battles in Chip8! Disc 2/3 of an exciting multi-tape game."
  },
  {
    "title": "8CE Attourny - Disc 3",
    "authors": ["SystemLogoff"],
    "images": ["8ceattourny_d3.gif"],
    "release": "2016-10-30",
    "platform": "chip8",
    "event": "Octojam3",
    "options": {
      "tickrate": 7,
      "fillColor": "#f1f1f1",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#0f0f0f",
      "buzzColor": "#aaff55",
      "quietColor": "#777777",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "419a0110d41332457c15ae09fff62cbd7ad197fc",
    "file": "8ceattourny_d3.ch8",
    "description": "Exciting court battles in Chip8! Disc 3/3 of an exciting multi-tape game."
  },
  {
    "title": "DVN8",
    "authors": ["SystemLogoff"],
    "images": ["DVN8.gif"],
    "release": "2017-10-30",
    "platform": "schip",
    "event": "Octojam4",
    "options": {
      "tickrate": 20,
      "fillColor": "#1f1f1f",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#f0f0f0",
      "buzzColor": "#aa2222",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "627f01b20ce4d33f6df1aa88acb405a3a732bde0",
    "file": "DVN8.ch8",
    "description": "This is your great-grandma's dungeon crawler. You can see it with the manual at https://systemlogoff.com/share/DVN8/index.html"
  },
  {
    "title": "Octo Rancher",
    "authors": ["SystemLogoff"],
    "images": ["octorancher.gif"],
    "release": "2018-10-30",
    "platform": "chip8",
    "event": "Octojam5",
    "options": {
      "tickrate": 7,
      "fillColor": "#f1f1f1",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#0f0f0f",
      "buzzColor": "#aaff55",
      "quietColor": "#777777",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "8263bac7d98d94097171f0a5dc6f210f77543080",
    "file": "octorancher.ch8",
    "description": "Train monsters and become a real ranching champion. Read the manual at https://systemlogoff.com/share/Octo-Rancher-Manual.pdf"
  },
  {
    "title": "Tank!",
    "authors": ["Rectus"],
    "images": ["tank.gif"],
    "event": "Octojam5",
    "release": "2018-10-31",
    "platform": "chip8",
    "options": {
      "tickrate": 200
    },
    "sha1": "3f9ef8dec999574a188ec3b9615cff9888283c85",
    "file": "tank.ch8",
    "description": "A two player artillery game."
  },
  {
    "title": "Rockto",
    "authors": ["SupSuper"],
    "images": ["rockto.gif"],
    "event": "Octojam1",
    "release": "2014-11-01",
    "platform": "schip",
    "options": {
      "tickrate": 15,
      "fillColor": "#CCCCCC",
      "backgroundColor": "#333333",
      "buzzColor": "#FFFFFF",
      "quietColor": "#000000"
    },
    "sha1": "b76fbca2ec089c7e77f4a2f754db37854b99debc",
    "file": "rockto.ch8",
    "description": "An adaptation of \"Boulder Dash\" for the Chip8."
  },
  {
    "title": "Flight Runner",
    "authors": ["TodPunk"],
    "images": ["flightrunner.gif"],
    "event": "Octojam1",
    "release": "2014-11-01",
    "platform": "chip8",
    "options": {
      "tickrate": 15,
      "fillColor": "#FFCC00",
      "backgroundColor": "#0000FF",
      "buzzColor": "#FFFFFF",
      "quietColor": "#000000"
    },
    "sha1": "821751787374cc362f4c58759961f0aa7a2fd410",
    "file": "flightrunner.ch8",
    "description": "A simple flight runner for the Chip8."
  },
  {
    "title": "Turnover '77",
    "authors": ["your name here"],
    "images": ["turnover.gif"],
    "event": "Octojam1",
    "release": "2014-08-31",
    "platform": "schip",
    "options": {
      "tickrate": 200,
      "fillColor": "#FFe900",
      "backgroundColor": "#ED7f37",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false
    },
    "sha1": "d03f27f85a1cf68465e0853cc0c4abee4a94a4e5",
    "file": "turnover77.ch8",
    "description": "Roundabout de-make"
  },
  {
    "title": "Ultimate Tic-tac-toe",
    "authors": ["your name here"],
    "images": ["tictac.gif"],
    "event": "Octojam1",
    "release": "2014-09-01",
    "platform": "schip",
    "options": {
      "tickrate": 7,
      "fillColor": "#553300",
      "backgroundColor": "#FFFFFF",
      "buzzColor": "#FFAA00",
      "quietColor": "#FFFFFF",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false
    },
    "sha1": "12572c9e957cace53076d1656ea1b12cd0f331af",
    "file": "ultimatetictactoe.ch8",
    "description": "Two player game"
  },
  {
    "title": "T8NKS",
    "authors": ["your name here"],
    "images": ["tanks.gif"],
    "event": "Octojam2",
    "release": "2015-08-31",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#554422",
      "fillColor2": "#456543",
      "blendColor": "#EEEEFF",
      "backgroundColor": "#87CEEB",
      "buzzColor": "#FFFFFF",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": true
    },
    "sha1": "8b2fc2e08830b8a9e604d11c9b319e2cc0a581b3",
    "file": "t8nks.ch8",
    "description": "Artillery game"
  },
  {
    "title": "Octo paint",
    "authors": ["your name here"],
    "images": ["paint.gif"],
    "release": "2016-06-12",
    "platform": "xochip",
    "options": {
      "tickrate": 30,
      "fillColor": "#FFCC00",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#996600",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": true
    },
    "sha1": "33abb5f1ba7db3166636911c6cfa81a5ce5b861c",
    "file": "octopaint.ch8",
    "description": "Drawing Program"
  },
  {
    "title": "jub8 Song 1",
    "authors": ["your name here"],
    "images": ["j1title.gif"],
    "event": "Octojam3",
    "release": "2016-08-31",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#000000",
      "fillColor2": "#FDFFD5",
      "blendColor": "#BA5A1A",
      "backgroundColor": "#353C41",
      "buzzColor": "#353C41",
      "quietColor": "#353C41",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": true,
      "screenRotation": 0
    },
    "sha1": "ab36ced6e34affacd57b2874ede3f95b669a424c",
    "file": "jub8-1.ch8",
    "description": "Rhythm game. WARNING: Volume"
  },
  {
    "title": "jub8 Song 2",
    "authors": ["your name here"],
    "images": ["j2title.gif"],
    "event": "Octojam3",
    "release": "2016-08-31",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#000000",
      "fillColor2": "#FDFFD5",
      "blendColor": "#BA5A1A",
      "backgroundColor": "#353C41",
      "buzzColor": "#353C41",
      "quietColor": "#353C41",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": true,
      "screenRotation": 0
    },
    "sha1": "12e053d66be67836deff1c07af93fe1d33a8eec5",
    "file": "jub8-2.ch8",
    "description": "Rhythm game. WARNING: Volume"
  },
  {
    "title": "jub8 Song 3",
    "authors": ["your name here"],
    "images": ["j3title.gif"],
    "event": "Octojam3",
    "release": "2016-08-31",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#000000",
      "fillColor2": "#FDFFD5",
      "blendColor": "#BA5A1A",
      "backgroundColor": "#353C41",
      "buzzColor": "#353C41",
      "quietColor": "#353C41",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": true,
      "screenRotation": 0
    },
    "sha1": "9bf96e23963995c6d702ae21c9b8741cbb688f47",
    "file": "jub8-3.ch8",
    "description": "Rhythm game. WARNING: Volume"
  },
  {
    "title": "jub8 Song 4",
    "authors": ["your name here"],
    "images": ["j4title.gif"],
    "event": "Octojam3",
    "release": "2016-08-31",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#000000",
      "fillColor2": "#FDFFD5",
      "blendColor": "#BA5A1A",
      "backgroundColor": "#353C41",
      "buzzColor": "#353C41",
      "quietColor": "#353C41",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": true,
      "screenRotation": 0
    },
    "sha1": "7e8d5a79cabeb9a791524ea7126867a539d825ee",
    "file": "jub8-4.ch8",
    "description": "Rhythm game. WARNING: Volume"
  },
  {
    "title": "jub8 Song 5",
    "authors": ["your name here"],
    "images": ["j5title.gif"],
    "event": "Octojam3",
    "release": "2016-08-31",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#000000",
      "fillColor2": "#FDFFD5",
      "blendColor": "#BA5A1A",
      "backgroundColor": "#353C41",
      "buzzColor": "#353C41",
      "quietColor": "#353C41",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": true,
      "screenRotation": 0
    },
    "sha1": "b274ab30ed7678400dc2283431a45f7d98d9fced",
    "file": "jub8-5.ch8",
    "description": "Rhythm game. WARNING: Volume"
  },
  {
    "title": "jub8 Song 6",
    "authors": ["your name here"],
    "images": ["j6title.gif"],
    "event": "Octojam3",
    "release": "2016-08-31",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#000000",
      "fillColor2": "#FDFFD5",
      "blendColor": "#BA5A1A",
      "backgroundColor": "#353C41",
      "buzzColor": "#353C41",
      "quietColor": "#353C41",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": true,
      "screenRotation": 0
    },
    "sha1": "3fd62ae2bfe2572ceb194f1d3d1bd5a01695b86c",
    "file": "jub8-6.ch8",
    "description": "Rhythm game. WARNING: Volume"
  },
  {
    "title": "Sub-Terr8nia",
    "authors": ["your name here"],
    "images": ["sub8.gif"],
    "event": "Octojam4",
    "release": "2017-08-31",
    "platform": "schip",
    "options": {
      "tickrate": 60,
      "fillColor": "#ffffff",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#000000",
      "buzzColor": "#FFAA00",
      "quietColor": "#111111",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 270
    },
    "sha1": "64536d549c986e9edf25de9fa89db60d2ade85c0",
    "file": "sub8.ch8",
    "description": "Lander game"
  },
  {
    "title": "Octopeg",
    "authors": ["Chromatophore"],
    "images": ["octopeg.gif"],
    "event": "Octojam2",
    "release": "2015-10-29",
    "platform": "schip",
    "options": {
      "tickrate": 200,
      "fillColor": "#acd5ff",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#113152",
      "buzzColor": "#264c74",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": false
    },
    "sha1": "7a4a89870f2ab23c28024dd1c3dd52cf1af1ad00",
    "file": "octopeg.ch8",
    "description": "Peggle clone for Superchip"
  },
  {
    "title": "Masquer8",
    "authors": ["Chromatophore"],
    "images": ["masquer8.gif"],
    "event": "Octojam2",
    "release": "2015-10-30",
    "platform": "chip8",
    "options": {
      "tickrate": 15,
      "fillColor": "#FF6666",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#1a3674",
      "buzzColor": "#3b6c83",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": false
    },
    "sha1": "fb48e162c7f2e8853909acc5534b55fb55030f9f",
    "file": "masquer8.ch8",
    "description": "Cuttlefish pattern matching game for chip8."
  },
  {
    "title": "Sens8tion",
    "authors": ["Chromatophore"],
    "images": ["sens8tion.gif"],
    "event": "Octojam3",
    "release": "2016-11-01",
    "platform": "schip",
    "options": {
      "tickrate": 20,
      "fillColor": "#1a3279",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#bad9b6",
      "buzzColor": "#fff6d6",
      "quietColor": "#000000",
      "shiftQuirks": true,
      "loadStoreQuirks": true,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": true,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "58f7ce407aedf456dc8992342f4a6f9f0647383b",
    "file": "sens8tion.ch8",
    "description": "Equilibrium faithfully reproduced in schip."
  },
  {
    "title": "Carbon8",
    "authors": ["Chromatophore"],
    "images": ["carbon8.gif"],
    "event": "Octojam5",
    "release": "2018-11-01",
    "platform": "chip8",
    "options": {
      "tickrate": 15,
      "fillColor": "#FFCC00",
      "backgroundColor": "#0000FF",
      "buzzColor": "#FFFFFF",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "2e0f2268c9a3be0fbb839f918336f161815bb80a",
    "file": "carbon8.ch8",
    "description": "A period correct movie tie in game for a popular 1980s franchise."
  },
  {
    "title": "Bad Kaiju Ju",
    "authors": ["MattBooth"],
    "images": ["kaiju.gif"],
    "event": "Ludum Dare",
    "release": "2015-08-24",
    "platform": "chip8",
    "options": {
      "tickrate": 7,
      "fillColor": "#330033",
      "backgroundColor": "#AAAAFF"
    },
    "sha1": "0f479a10fec51d159866e5760069cd18bdfd293f",
    "file": "BadKaiJuJu.ch8",
    "description": "The year is 1977. 90% of the world's landmass is now underwater and the world is at war..."
  },
  {
    "title": "Piper",
    "authors": ["Aeris", "JordanMecom", "LillianWang"],
    "images": ["piper.gif"],
    "event": "GlobalGameJam2017",
    "release": "2017-01-23",
    "platform": "chip8",
    "options": {
      "tickrate": 200,
      "fillColor": "#FFCC00",
      "backgroundColor": "#0000FF",
      "buzzColor": "#FFFFFF",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "7da3eba52a8d8025ddf14ee40d28f151585529a0",
    "file": "piper.ch8",
    "description": "Play as a small bird to collect goodies and avoid waves."
  },
  {
    "title": "Super Square",
    "authors": ["tann"],
    "images": ["square.png"],
    "event": "Octojam1",
    "release": "2014-11-04",
    "platform": "schip",
    "options": {
      "tickrate": 500,
      "fillColor": "#FFFFFF",
      "backgroundColor": "#552200",
      "buzzColor": "#FFFFFF",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "9f7cf6fe0025878c26b317160c57edd06b3361ba",
    "file": "supersquare.ch8",
    "description": "Inspired by Super Hexagon"
  },
  {
    "title": "Civiliz8n",
    "authors": ["tann"],
    "images": ["civiliz8n.png"],
    "event": "Octojam2",
    "release": "2016-09-26",
    "platform": "xochip",
    "options": {
      "tickrate": 100,
      "fillColor": "#754D27",
      "fillColor2": "#738C3A",
      "blendColor": "#E2CB8A",
      "backgroundColor": "#141421",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "76a770000b314659ac792e17724b783a464ab67e",
    "file": "civiliz8n.ch8",
    "description": "Grow a tiny civilization in 10 turns"
  },
  {
    "title": "Skyward",
    "authors": ["tann", "JackieKircher"],
    "images": ["skyward.png"],
    "event": "Octojam3",
    "release": "2016-11-01",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#4B636F",
      "fillColor2": "#AF2D3D",
      "blendColor": "#AF2D3D",
      "backgroundColor": "#121212",
      "buzzColor": "#000000",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": true,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "8ebf74e790e58a8d5a7beff598bb32ed7eeeabf7",
    "file": "skyward.ch8",
    "description": "Climb as high as you can!"
  },
  {
    "title": "Mini Lights Out",
    "authors": ["tobiasvl"],
    "images": ["mini-lights-out.gif"],
    "event": "Octojam6",
    "release": "2019-10-04",
    "platform": "chip8",
    "options": {
      "tickrate": 7,
      "touchInputMode": "seg16"
    },
    "sha1": "a3f0eae99964b873eb1adbd3e8bcb90d15f762c3",
    "file": "mini-lights-out.ch8",
    "description": "Turn the lights out"
  },
  {
    "title": "An Evening to Die For",
    "authors": ["JohnEarnest"],
    "images": ["murder.gif"],
    "event": "Octojam6",
    "release": "2019-10-22",
    "platform": "xochip",
    "options": {
      "tickrate": 500,
      "fillColor": "black",
      "fillColor2": "red",
      "blendColor": "red",
      "backgroundColor": "white",
      "buzzColor": "gray",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "screenRotation": 0
    },
    "sha1": "afd9fee7565c54970b6bd7758aa8aa7843dd2e86",
    "file": "anEveningToDieFor.ch8",
    "description": "It is a dark and stormy night. A murder has been committed..."
  },
  {
    "title": "Horse World Online",
    "authors": ["TomRintjema"],
    "images": ["title.gif"],
    "event": "Octojam1",
    "release": "2014-10-28",
    "platform": "chip8",
    "options": {
      "tickrate": 30,
      "fillColor": "#783809",
      "backgroundColor": "#a0cb6d",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false
    },
    "sha1": "28ac3467fbb4544a3e3a1ec3cd27d9e819ac7323",
    "file": "horseWorldOnline.ch8",
    "description": "An online horse breeding game."
  },
  {
    "title": "Horsey Jump",
    "authors": ["LarissaR"],
    "images": ["jump.gif"],
    "event": "Octojam2",
    "release": "2015-10-30",
    "platform": "schip",
    "options": {
      "tickrate": 20,
      "fillColor": "#C3C3C3",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#006C00",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": false
    },
    "sha1": "df5ced9c20d00bf7be7d3361d76f27d0d577abfb",
    "file": "horseyJump.ch8",
    "description": "Press the X button to make the horse jump over the fence."
  },
  {
    "title": "Super Octo Track XO",
    "authors": ["TomRintjema"],
    "images": ["title.gif"],
    "event": "Octojam2",
    "release": "2015-10-15",
    "platform": "xochip",
    "options": {
      "tickrate": 100,
      "fillColor": "#FF00FF",
      "fillColor2": "#00FFFF",
      "blendColor": "#FFFFFF",
      "backgroundColor": "#000000",
      "buzzColor": "#990099",
      "quietColor": "#330033",
      "shiftQuirks": false,
      "loadStoreQuirks": true,
      "vfOrderQuirks": false,
      "enableXO": true
    },
    "sha1": "a98ed56f88f11156871d871d9200fc4bb45190a4",
    "file": "superOctoTrackXO.ch8",
    "description": "Compose songs with the XO-Chip audio system."
  },
  {
    "title": "Ghost Escape",
    "authors": ["TomRintjema"],
    "images": ["ghostescape.gif"],
    "event": "Octojam3",
    "release": "2016-10-29",
    "platform": "chip8",
    "options": {
      "tickrate": 7,
      "fillColor": "#FF00FF",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#00FFFF",
      "buzzColor": "#990099",
      "quietColor": "#330033",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "1e3be162480380b6276d0848e1c71576b4c041f2",
    "file": "ghostEscape.ch8",
    "description": "Seek revenge on mortal men in this exciting adventure!"
  },
  {
    "title": "TOMB STON TIPP",
    "authors": ["TomRintjema"],
    "images": ["tomb.gif"],
    "event": "Octojam5",
    "release": "2018-10-12",
    "platform": "chip8",
    "options": {
      "tickrate": 7,
      "fillColor": "#FFFFFF",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#000000",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0,
      "touchInputMode": "seg16"
    },
    "sha1": "6e7cb52ec99e10f934b76eaf3fddeb8f2e2e14e1",
    "file": "tombstontipp.ch8",
    "description": "Take turns pressing buttons to see who wins."
  },
  {
    "title": "Flutter By",
    "authors": ["TomRintjema"],
    "images": ["flutterby.gif"],
    "event": "Octojam6",
    "release": "2019-10-08",
    "platform": "xochip",
    "options": {
      "tickrate": 7,
      "fillColor": "#9BBC0F",
      "fillColor2": "#8BAC0F",
      "blendColor": "#306230",
      "backgroundColor": "#0F380F",
      "buzzColor": "#333333",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": true,
      "screenRotation": 0
    },
    "sha1": "a4a9351775b2a64bbd14e3980968db19c254a988",
    "file": "flutterby.ch8",
    "description": "A game where you are a butterfly trying to get to flowers."
  },
  {
    "title": "Br8kout",
    "authors": ["SharpenedSpoon"],
    "images": ["breakout.gif"],
    "event": "Octojam1",
    "release": "2014-09-01",
    "platform": "chip8",
    "options": {
      "tickrate": 7,
      "fillColor": "#ff84fe",
      "backgroundColor": "#ca2553",
      "buzzColor": "#FFAA00",
      "quietColor": "#f090e4",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false
    },
    "sha1": "31fc1c53cc610a9f4b9c5705c5a0f33fc028d123",
    "file": "br8kout.ch8",
    "description": "You can't even imagine how amazing this breakout clone is!"
  },
  {
    "title": "1D Cellular Automata",
    "authors": ["SharpenedSpoon"],
    "images": ["cellular.gif"],
    "event": "Octojam1",
    "release": "2014-10-26",
    "platform": "chip8",
    "options": {
      "tickrate": 1000,
      "fillColor": "#00f80a",
      "backgroundColor": "#274a17",
      "buzzColor": "#FFAA00",
      "quietColor": "#142a12",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false
    },
    "sha1": "018442698067c95d67e27a94e6642c11f049f108",
    "file": "1dcell.ch8",
    "description": "An implementation of 1D Cellular Automata."
  },
  {
    "title": "Kesha Was Bird",
    "authors": ["Kesha"],
    "images": ["kesha.gif"],
    "release": "2016-01-21",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#B8CD9E",
      "fillColor2": "#ED656B",
      "blendColor": "#55989E",
      "backgroundColor": "#59755E",
      "buzzColor": "#000",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": true
    },
    "sha1": "fbc7711ad068015b957e91d8714636b2ac90d9cb",
    "file": "keshaWasBird.ch8",
    "description": "A surreal telephone adventure."
  },
  {
    "title": "Kesha Was Biird",
    "authors": ["Kesha"],
    "images": ["kesha.gif"],
    "event": "Octojam3",
    "release": "2016-10-31",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#1a1c19",
      "fillColor2": "#a0a29f",
      "blendColor": "#5d5b5d",
      "backgroundColor": "#fafdf9",
      "buzzColor": "#222211",
      "quietColor": "#212110",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": true,
      "screenRotation": 0
    },
    "sha1": "92a325c36ad2116a5256946b8bf711ed9befd319",
    "file": "keshaWasBiird.ch8",
    "description": "Second installment in epic saga about Kesha."
  },
  {
    "title": "Kesha Was Niiinja",
    "authors": ["Kesha"],
    "images": ["kesha.gif"],
    "event": "Octojam4",
    "release": "2017-10-31",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#b22d10",
      "fillColor2": "#10b258",
      "blendColor": "#ffffff",
      "backgroundColor": "#283593",
      "buzzColor": "#182583",
      "quietColor": "#182583",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": true,
      "screenRotation": 0
    },
    "sha1": "4564a1bf149e5ab9777d33813a92cfd6ffc7a0bb",
    "file": "keshaWasNiiinja.ch8",
    "description": "Legendary ninja returns! Who is he? Ruthless killer? Absolute evil? Character with his own purpose? His motives are still unclear, and his story is for you to unfold."
  },
  {
    "title": "Red October V",
    "authors": ["Kesha"],
    "images": ["title.gif"],
    "event": "Octojam5",
    "release": "2018-10-31",
    "platform": "xochip",
    "options": {
      "tickrate": 10000,
      "fillColor": "#000000",
      "fillColor2": "#ffff00",
      "blendColor": "#808000",
      "backgroundColor": "#b22d10",
      "buzzColor": "#400000",
      "quietColor": "#400000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": true,
      "screenRotation": 0
    },
    "sha1": "e14350d3b19443e5ad2848172bef9719a8680b01",
    "file": "redOctober.ch8",
    "description": "A futuristic RPG."
  },
  {
    "title": "SK8 H8 1988",
    "authors": ["Willfor"],
    "images": ["sk8.gif"],
    "event": "Octojam2",
    "release": "2015-10-28",
    "platform": "xochip",
    "options": {
      "tickrate": 20,
      "fillColor": "#7B0201",
      "fillColor2": "#F2FAF7",
      "blendColor": "#E7ED3E",
      "backgroundColor": "#D4D4D4",
      "buzzColor": "#990099",
      "quietColor": "#330033",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": true
    },
    "sha1": "1b6dcf8c02ea0b89a4f04ce28e7c39a5e7a513d6",
    "file": "sk8.ch8",
    "description": "Don't get trashed out there, GRRL!"
  },
  {
    "title": "Snake",
    "authors": ["TimoTriisa"],
    "images": ["snake.gif"],
    "event": "Octojam1",
    "release": "2014-10-11",
    "platform": "schip",
    "options": {
      "tickrate": 15,
      "fillColor": "#84a174",
      "backgroundColor": "#30283e",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false
    },
    "sha1": "06a6692c92eb8077329b6d4e59d55479d60574a8",
    "file": "snake.ch8",
    "description": "Classic Snake game without walls."
  },
  {
    "title": "Spacejam!",
    "authors": ["WilliamDonnelly"],
    "images": ["title.gif"],
    "event": "Octojam2",
    "release": "2015-10-30",
    "platform": "chip8",
    "options": {
      "tickrate": 100,
      "fillColor": "#fcfcfc",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#111111",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": false
    },
    "sha1": "9f9a4affbf7afd70bb594fb321e16579318c0164",
    "file": "spacejam.ch8",
    "description": "An extended and enhanced version loosely based on ShipTunnel from the 2014 OctoJam."
  },
  {
    "title": "Mastermind",
    "authors": ["WilliamDonnelly"],
    "images": ["title.gif"],
    "event": "Octojam3",
    "release": "2015-11-08",
    "platform": "chip8",
    "options": {
      "tickrate": 20,
      "fillColor": "#FCFCFC",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#005E20",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": false
    },
    "sha1": "898ef1505c874065697ffc6cba688367e143d82e",
    "file": "mastermind.ch8",
    "description": "The classic puzzle game of deduction."
  },
  {
    "title": "Space Racer",
    "authors": ["WilliamDonnelly"],
    "images": ["title.gif"],
    "event": "Octojam4",
    "release": "2017-10-30",
    "platform": "chip8",
    "options": {
      "tickrate": 20,
      "fillColor": "#FCFCFC",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#111111",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "659cb966e976fcbcae76f6a8a07c65be4d18aae8",
    "file": "spaceracer.ch8",
    "description": "Based on the classic 2-player 'Space Race' video game."
  },
  {
    "title": "down8",
    "authors": ["tinaun"],
    "images": ["down8.gif"],
    "event": "Octojam2",
    "release": "2015-10-28",
    "platform": "chip8",
    "options": {
      "tickrate": 15,
      "fillColor": "#27130F",
      "backgroundColor": "#3DBDFA",
      "buzzColor": "#FF6600",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false
    },
    "sha1": "1368d7eae124661aacaf3411819ca9c113c0c10c",
    "file": "down8.ch8",
    "description": "you fall down an endless hole and then you die!"
  },
  {
    "title": "Truck Simul8or",
    "authors": ["buffi"],
    "images": ["truck.gif"],
    "release": "2015-07-28",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#FFCC00",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#996600",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": true
    },
    "sha1": "19279f8cfbb58a925a80b52e690ad71ee0907134",
    "file": "trucksimul8or.ch8",
    "description": "You're a kid, you're a truck."
  },
  {
    "title": "Danm8ku",
    "authors": ["buffi"],
    "images": ["title.gif", "gameplay.gif"],
    "event": "Octojam2",
    "release": "2015-10-31",
    "platform": "chip8",
    "options": {
      "tickrate": 1000,
      "fillColor": "#00FF00",
      "fillColor2": "#FF0000",
      "blendColor": "#FFFF00",
      "backgroundColor": "#000000",
      "buzzColor": "#999900",
      "quietColor": "#333300",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": true
    },
    "sha1": "ff6b8ac59bf281cd4b5ab6e161600b00f85a0265",
    "file": "danm8ku.ch8",
    "description": "Bullet hell for the Chip-8! Survive 8 waves of exciting bullet patterns!"
  },
  {
    "title": "The Binding of COSMAC",
    "authors": ["buffi"],
    "images": ["title.gif"],
    "event": "Octojam3",
    "release": "2016-10-21",
    "platform": "schip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#FFCC00",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#996600",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": true,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "e74f20f234753e0cc2f58e29dc02d6128a6a3d97",
    "file": "binding.ch8",
    "description": "Simplified Isaac demake for SCHIP. 42 screens across three floors with an exciting boss battle at the end!"
  },
  {
    "title": "Chipcross",
    "authors": ["buffi"],
    "images": ["chipcross.gif"],
    "event": "Octojam5",
    "release": "2018-10-15",
    "platform": "schip",
    "options": {
      "tickrate": 20,
      "fillColor": "#FFCC00",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#996600",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "83300ff710acdd8417376b88adf40f68171f7ec7",
    "file": "chipcross.ch8",
    "description": "16 levels of Picross implemented in CHIP8. 800 bytes of fun."
  },
  {
    "title": "Knight",
    "authors": ["simonpacis"],
    "images": ["knight.gif"],
    "event": "Octojam3",
    "release": "2016-10-07",
    "platform": "schip",
    "options": {
      "tickrate": 200,
      "fillColor": "#FFCC00",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#996600",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "jumpQuirks": false,
      "enableXO": false,
      "screenRotation": 0
    },
    "sha1": "fcecf90496dadd214486a7a769e3a07f2b8f4eab",
    "file": "knight.ch8",
    "description": "You're Artore the Puny, littlebrother and inferior to your great big brother, King Arthur."
  },
  {
    "title": "Chipquarium",
    "authors": ["mattmik"],
    "images": ["chipquarium.gif"],
    "event": "Octojam3",
    "release": "2016-10-31",
    "platform": "chip8",
    "options": {
      "tickrate": 15,
      "fillColor": "#FFFFFF",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#0072ff",
      "buzzColor": "#FFAA00",
      "quietColor": "#0000FF",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": true,
      "vBlankQuirks": true,
      "jumpQuirks": false,
      "logicQuirks": true,
      "screenRotation": 0,
      "touchInputMode": "none"
    },
    "sha1": "f4392681b1fa38d7ad0a7d7a59cecf247ac1457a",
    "file": "chipquarium.ch8",
    "description": "A CHIP-8 fish tank simulator."
  },
  {
    "title": "Glitch Ghost",
    "authors": ["JackieKircher"],
    "images": ["glitchGhost.gif"],
    "event": "Octojam1",
    "release": "2014-10-29",
    "platform": "chip8",
    "options": {
      "tickrate": 200,
      "fillColor": "#FFFFFF",
      "backgroundColor": "#555555",
      "buzzColor": "#FFFFFF",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false
    },
    "sha1": "2cdcb3c29a5f013a991db5909ca8e18e27b3c42b",
    "file": "glitchGhost.ch8",
    "description": "glitch ghost is all alone in the cemetery, please help them make some friends by turning the trespassing humans into new ghosts!"
  },
  {
    "title": "Octovore",
    "authors": ["JackieKircher"],
    "images": ["octovore.gif"],
    "event": "Octojam2",
    "release": "2015-11-02",
    "platform": "schip",
    "options": {
      "tickrate": 120,
      "fillColor": "#5B1B96",
      "fillColor2": "#E03B22",
      "blendColor": "#68E022",
      "backgroundColor": "#8BDCE8",
      "buzzColor": "#68E022",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "enableXO": true
    },
    "sha1": "74936ffb0db233c722f5a39932d75240b6437a72",
    "file": "octovore.ch8",
    "description": "a game of hungry hungry octopods"
  },
  {
    "title": "Business Is Contagious",
    "authors": ["JohnEarnest"],
    "images": ["business.gif"],
    "event": "NokiaJam",
    "release": "2020-02-05",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#43523d",
      "fillColor2": "#43523d",
      "blendColor": "#43523d",
      "backgroundColor": "#c7f0d8",
      "buzzColor": "#43523d",
      "quietColor": "#43523d",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "gamepad",
      "logicQuirks": false
    },
    "sha1": "33ec2f3081bed56438dc207477f06cd77f3f07d9",
    "file": "businessiscontagious.ch8",
    "description": "capitalism.txt"
  },
  {
    "title": "Nokia 3310 Template",
    "authors": ["JohnEarnest"],
    "images": ["simcard.gif"],
    "event": "NokiaJam",
    "release": "2020-01-20",
    "platform": "schip",
    "options": {
      "tickrate": 30,
      "fillColor": "#c7f0d8",
      "fillColor2": "#c7f0d8",
      "blendColor": "#c7f0d8",
      "backgroundColor": "#43523d",
      "buzzColor": "#43523d",
      "quietColor": "#43523d",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "screenRotation": 0,
      "logicQuirks": false
    },
    "sha1": "61931487c694c5bc6978ae22c0a36aca5a647e24",
    "file": "nokiatemplate.ch8",
    "description": "SCHIP template program for resembling the Nokia 3310"
  },
  {
    "title": "Expedition.",
    "authors": ["JohnEarnest"],
    "images": ["recording.gif"],
    "event": "NokiaJam",
    "release": "2021-01-06",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#43523d",
      "fillColor2": "#43523d",
      "blendColor": "#43523d",
      "backgroundColor": "#c7f0d8",
      "buzzColor": "#43523d",
      "quietColor": "#43523d",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "none",
      "logicQuirks": false,
      "fontStyle": "octo"
    },
    "sha1": "77dc518e6779ccd862205cfeb0f3f7772caed60e",
    "file": "expedition.ch8",
    "description": "A short narrative about going outside."
  },
  {
    "title": "Octo Party Mix!",
    "authors": ["Cratmang"],
    "images": ["recording.gif"],
    "event": "Octojam7",
    "release": "2020-10-29",
    "platform": "xochip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#55ff55",
      "fillColor2": "#ff7700",
      "blendColor": "#ffffff",
      "backgroundColor": "#000000",
      "buzzColor": "#000000",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "swipe",
      "logicQuirks": false,
      "fontStyle": "octo"
    },
    "sha1": "d52c2f85f56c963ff5e48a096afc61d3c8a71c11",
    "file": "OctoPartyMix.ch8",
    "description": "It's basically Warioware. But with cute octo buddies!"
  },
  {
    "title": "Chicken Scratch",
    "authors": ["JohnEarnest"],
    "images": ["gameplay.gif"],
    "event": "Octojam7",
    "release": "2020-10-28",
    "platform": "xochip",
    "options": {
      "tickrate": 500,
      "fillColor": "#7C4300",
      "fillColor2": "#FD8100",
      "blendColor": "#FD8100",
      "backgroundColor": "#D5A08C",
      "buzzColor": "#3C2300",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "none",
      "logicQuirks": false,
      "fontStyle": "octo"
    },
    "sha1": "c606d52970b86edcca4e87e9f6fae4b1ccbbbb0f",
    "file": "chickenScratch.ch8",
    "description": "What if Pac-Man, but Chicken?"
  },
  {
    "title": "Applejak",
    "authors": ["JohnEarnest"],
    "images": ["recording.gif"],
    "event": "Octojam7",
    "release": "2020-10-07",
    "platform": "schip",
    "options": {
      "tickrate": 100,
      "fillColor": "#B00000",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#001000",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": true,
      "loadStoreQuirks": true,
      "vfOrderQuirks": false,
      "clipQuirks": true,
      "vBlankQuirks": false,
      "jumpQuirks": true,
      "screenRotation": 0,
      "touchInputMode": "none",
      "logicQuirks": false
    },
    "sha1": "bcbf36a68cf389e87dd54a9707cf35c4436dcb92",
    "file": "applejak.ch8",
    "description": "Interpreter for a subset of APL/K."
  },
  {
    "title": "Bulb",
    "authors": ["JohnEarnest"],
    "images": ["llama.gif"],
    "event": "Octojam7",
    "release": "2020-10-15",
    "platform": "schip",
    "options": {
      "tickrate": 100,
      "fillColor": "#1E90FF",
      "fillColor2": "#ABCC47",
      "blendColor": "#00131A",
      "backgroundColor": "#F9FFB3",
      "buzzColor": "#F9FFB3",
      "quietColor": "#000000",
      "shiftQuirks": true,
      "loadStoreQuirks": true,
      "vfOrderQuirks": false,
      "clipQuirks": true,
      "vBlankQuirks": false,
      "jumpQuirks": true,
      "screenRotation": 0,
      "touchInputMode": "none",
      "logicQuirks": false,
      "fontStyle": "octo"
    },
    "sha1": "b277c053b5b4ff9e40cd52cd4125a35ec22ccd0a",
    "file": "bulb.ch8",
    "description": "Interpreter for a language which resembles toenail clippings."
  },
  {
    "title": "Squad",
    "authors": ["JohnEarnest"],
    "images": ["fibs.gif"],
    "event": "Octojam7",
    "release": "2020-10-25",
    "platform": "schip",
    "options": {
      "tickrate": 500,
      "fillColor": "#FFAF00",
      "fillColor2": "#FD8100",
      "blendColor": "#FD8100",
      "backgroundColor": "#663300",
      "buzzColor": "#F9FFB3",
      "quietColor": "#000000",
      "shiftQuirks": true,
      "loadStoreQuirks": true,
      "vfOrderQuirks": false,
      "clipQuirks": true,
      "vBlankQuirks": false,
      "jumpQuirks": true,
      "screenRotation": 0,
      "touchInputMode": "none",
      "logicQuirks": false,
      "fontStyle": "octo"
    },
    "sha1": "abfce04ddd0f72838dd887f3db3106066fd675b3",
    "file": "squad.ch8",
    "description": "Interpreter for a regular-sized Forth."
  },
  {
    "title": "Spock Paper Scissors",
    "authors": ["fontz"],
    "images": ["spockpaperscissors.gif"],
    "event": "Octojam7",
    "release": "2020-11-01",
    "platform": "chip8",
    "options": {
      "tickrate": 15,
      "fillColor": "#B4B4B4",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#323232",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "logicQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "none",
      "fontStyle": "octo"
    },
    "sha1": "b66f55f83eb264d2b73c0b4ac81ea5044bf73138",
    "file": "spockpaperscissors.ch8",
    "description": "Intergalactic Rock Paper Scissors."
  },
  {
    "title": "Dodge",
    "authors": ["JohnEarnest"],
    "images": ["dodge.gif"],
    "event": "Octojam8",
    "release": "2021-10-01",
    "platform": "schip",
    "options": {
      "tickrate": 1000,
      "fillColor": "#FFCC00",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#996600",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "swipe",
      "logicQuirks": false,
      "fontStyle": "octo"
    },
    "sha1": "7fb69647e6b10e2b12f9357d5c1c177349028236",
    "file": "dodge.ch8",
    "description": "Dodging asteroids in 56 bytes."
  },
  {
    "title": "Snek",
    "authors": ["JohnEarnest"],
    "images": ["snek.gif"],
    "event": "Octojam8",
    "release": "2021-10-01",
    "platform": "chip8",
    "options": {
      "tickrate": 1000,
      "fillColor": "#FFCC00",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "#996600",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "swipe",
      "logicQuirks": false,
      "fontStyle": "octo"
    },
    "sha1": "bb5740042385cae10724b051208bb95e5341f56d",
    "file": "snek.ch8",
    "description": "Minimalist Snake in 65 bytes."
  },
  {
    "title": "Super Octogon",
    "authors": ["JohnEarnest"],
    "images": ["octogon.gif"],
    "event": "Octojam8",
    "release": "2021-10-30",
    "platform": "schip",
    "options": {
      "tickrate": 200,
      "fillColor": "hotpink",
      "fillColor2": "#333333",
      "blendColor": "#FFFFFF",
      "backgroundColor": "#000000",
      "buzzColor": "#111111",
      "quietColor": "#000000",
      "shiftQuirks": true,
      "loadStoreQuirks": true,
      "vfOrderQuirks": false,
      "clipQuirks": true,
      "vBlankQuirks": false,
      "jumpQuirks": true,
      "screenRotation": 0,
      "touchInputMode": "swipe",
      "logicQuirks": false,
      "fontStyle": "fish"
    },
    "sha1": "bb1e786cb921f51d0540cca9a216c0b72bceb443",
    "file": "octogon.ch8",
    "description": "Eight fantastic sides, and eight awesome angles."
  },
  {
    "title": "Ordinary Idle Garden",
    "authors": ["Cratmang"],
    "images": ["recording.gif"],
    "event": "NokiaJam",
    "release": "2021-02-05",
    "platform": "xochip",
    "options": {
      "tickrate": 200,
      "fillColor": "#43523d",
      "fillColor2": "#43523d",
      "blendColor": "#43523d",
      "backgroundColor": "#c7f0d8",
      "buzzColor": "#43523d",
      "quietColor": "#43523d",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "none",
      "logicQuirks": false,
      "fontStyle": "fish"
    },
    "sha1": "f9d0bdf4a80d5570a9af9fd13769e528dff411df",
    "file": "ordinaryidlegarden.ch8",
    "description": "Grow a tiny garden filled with dandelions, pumpkins... lanturns... skeletons?"
  },
  {
    "title": "Octoma",
    "authors": ["Cratmang"],
    "images": ["recording.gif"],
    "event": "Octojam8",
    "release": "2021-10-25",
    "platform": "xochip",
    "options": {
      "tickrate": 10000,
      "fillColor": "#FF00FF",
      "fillColor2": "#00FFFF",
      "blendColor": "#FFFFFF",
      "backgroundColor": "#000000",
      "buzzColor": "#000000",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "none",
      "logicQuirks": false,
      "fontStyle": "fish"
    },
    "sha1": "80feda2028aa31788d3d1d9e062d77d2fd9308cc",
    "file": "octoma.ch8",
    "description": "A simplified clone of Ultima. Go forth and save the Octo Princess!"
  },
  {
    "title": "Super Pong",
    "authors": ["offstatic"],
    "images": ["superpong.gif"],
    "event": "Octojam8",
    "release": "2021-10-15",
    "platform": "chip8",
    "options": {
      "tickrate": 30,
      "fillColor": "#43523d",
      "fillColor2": "#ff6600",
      "blendColor": "#662200",
      "backgroundColor": "#c7f0d8",
      "buzzColor": "#FFAA00",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": false,
      "vBlankQuirks": false,
      "jumpQuirks": false,
      "logicQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "none",
      "fontStyle": "octo"
    },
    "sha1": "2c761f70a44e521ee848834cfdd2bd1646157d29",
    "file": "superpong.ch8",
    "description": "A fast pong-like."
  },
  {
    "title": "WDL",
    "authors": ["JohnEarnest"],
    "images": ["wdl.gif"],
    "event": "Octojam9",
    "release": "2022-10-10",
    "platform": "chip8",
    "options": {
      "tickrate": 15,
      "fillColor": "gray",
      "fillColor2": "#FF6600",
      "blendColor": "#662200",
      "backgroundColor": "lightgray",
      "buzzColor": "red",
      "quietColor": "#000000",
      "shiftQuirks": false,
      "loadStoreQuirks": false,
      "vfOrderQuirks": false,
      "clipQuirks": true,
      "vBlankQuirks": true,
      "jumpQuirks": false,
      "screenRotation": 0,
      "touchInputMode": "swipe",
      "logicQuirks": true,
      "fontStyle": "octo"
    },
    "sha1": "a8d6e9b1976c99ddc0c4818828a6d3cb3ae6f348",
    "file": "wdl.ch8",
    "description": "That word game, but shorter."
  },
  {
    "file": "00Schip8 Life demo (by Henry de Jongh)(2016).sc8",
    "sha1": "5abf3dcf4ce0e396a3a5bf977b1ea988535d35d5",
    "platform": "schip",
    "title": "00Schip8 Life demo",
    "release": "2016",
    "authors": ["Henry de Jongh"]
  },
  {
    "file": "10 Bytes Pattern (by Bjorn Kempen)(2015).sc8",
    "sha1": "77d5d2d9c5fe19c72d6564b3601a8d17cfedcb41",
    "platform": "schip",
    "title": "10 Bytes Pattern",
    "release": "2015",
    "authors": ["Bjorn Kempen"]
  },
  {
    "file": "2048 (Andrew James)(2021).ch8",
    "sha1": "c32175db0c0508065709fc9cb42b233b24dad7fe",
    "platform": "chip8",
    "title": "2048",
    "release": "2021",
    "authors": ["Andrew James"],
    "description": "# 2048 (0x800)\nA Chip8 implementation of the tile sliding game 2048.\n\n## Controls\n5: Slide tiles up  \n7: Slide tiles left  \n8: Slide tiles down  \n9: Slide tiles right  \n(This corresponds to the default WASD mapping in Octo and potentially other Chip8 emulators)\n\nPressing any other key will cause the buzzer to sound (indicating an invalid input) and the game will continue to wait for input.\n\n## Game play\nEach time a move is made tiles are moved to the specified direction, tiles which collide and have the same value are combined, then a new tile is spawned.\nWhen an invalid move is made (leaving no free spaces for a new tile to spawn) the game ends and the buzzer sounds. No consideration is made for whether there\n were other valid moves available. The player may press any key to start again.\n\n## Notes\nThe game runs best at 30 cycles/sec or faster. Below this speed it's slow to respond (probably a combination of drawing the whole screen each frame and the\n load/save when processing moves)."
  },
  {
    "file": "2048 (by Dr Gergo Erdi)(2014).ch8",
    "sha1": "ea6fc1ff6e57800e2322641f6f02ebd462dda2b8",
    "platform": "chip8",
    "title": "2048",
    "release": "2014",
    "authors": ["Dr Gergo Erdi"],
    "description": "\n2048 - by Dr. Gergo Erdi (2014)\n-------------------------------\n\nThis is an implementation of the 2048 game for the CHIP-8 virtual machine.\n\n\nControls (hexpad):\n------------------\n2 to slide up\n8 to slide down\n4 to slide left\n6 to slide right\n"
  },
  {
    "file": "2048game (by A-Kouz1)(2017).ch8",
    "sha1": "fed518f92023db76cd9fb4616c44c7be1cede2d2",
    "platform": "chip8",
    "title": "2048game",
    "release": "2017",
    "authors": ["A-Kouz1"],
    "description": "\n2048game - by A-Kouz1 (2017)\n----------------------------\n\nIt is a single-player sliding block puzzle game designed by Italian web developer \nGabriele Cirulli. The objective of the game is to slide numbered tiles on a grid \nto combine them to create a tile with the number 2048\n\n\nControls:\n---------\nX to start\n\nW/A/S/D to move blocks"
  },
  {
    "file": "3D VIP'r Maze (Tim Franssen)(2021).ch8",
    "sha1": "dea204fbfda4ed63fe2a2be255617bb9ee770a61",
    "platform": "chip8",
    "title": "3D VIP'r Maze",
    "release": "2021",
    "authors": ["Tim Franssen"],
    "description": "# 3D VIP'r Maze\n\n![In-game screenshot](./screenshot.png)\n\nA watered down version of [3D Viper\nMaze](https://github.com/Timendus/3d-viper-maze), my [Octojam\n7](https://itch.io/jam/octojam-7) submission. Challenge: reduce the instruction\nset, speed requirements and overall program size to make it run on \"standard\"\nChip-8 interpreters. And preferably the original hardware from the time period\ntoo.\n\n* [Play the game in your browser](https://timendus.github.io/3d-vipr-maze/)\n* [Download binaries](https://github.com/Timendus/3d-vipr-maze/tree/main/bin)\n\n## The concept\n\n3D VIP'r Maze is (obviously) an homage to the Sinclair ZX81 game 3D Monster Maze\nfrom 1981. That game was released just three years after the specification for\nChip-8 was published, so it's from around the same era. In honour of the first\ncomputer that ran Chip-8, the Cosmac VIP, and its related magazine, the VIPer, I\nfigured it was time for a viper version of 3D Monster Maze, and I created [3D\nViper Maze](https://github.com/Timendus/3d-viper-maze) for [Octojam\n7](https://itch.io/jam/octojam-7).\n\nThe intention I had with 3D Viper Maze, although written using XO-Chip instructions to make it more fun as a game, was always to create a version of the game that\ncan run on the original Cosmac VIP Chip-8 interpreter. This version became 3D\nVIP'r Maze, and that is what you're looking at.\n\n3D VIP'r Maze is a game with an endless supply of randomly generated mazes, just\nlike its namesake. Your challenge, if you accept it: to find the exit in each\nmaze! How far can you get?\n\n## Development notes\n\n### Beginning is easy\n\nYou just take the instructions that are in XO-Chip, but not in regular Chip-8,\nand get to work removing those instructions. For this game that meant first and\nforemost to remove all the code and data that has anything to do with sound and\ncolour.\n\nThrowing out the sound was easy enough; the code was mostly in a single file\nwith relatively few calls to it. The sound data was also in a single file.\nBye bye... 🎶\n\nColour was slightly more difficult. It's not enough to just remove all the\n`plane` instructions from the program; the image to binary data scripts also\nneeded to change, so they wouldn't load the extra plane of image data anymore.\nWhile I was working on those scripts I also made them cut the images up in 8x8\nsprites instead of 16x16, so we can more easily address the different parts of\nthe images. Regular Chip-8 doesn't have a way to render 16x16 sprites, as\nXO-Chip does.\n\nSo the next challenge was to adapt the rendering code to render 8 pixel wide\ncolumns. I kinda forgot that we can render 8xN sprites in Chip-8, where N is a\nnibble (0-15). That's a very handy thing to have. The larger the number of\npixels that we can render in one go, the faster the rendering will be. According\nto Wikipedia Chip-8 will render a height of N+1 pixels (allowing 16 vertical\npixels), but Octo doesn't seem to think so (and sticks with 15 pixels). But 15\nis fine too. We can live with missing the top and bottoms rows from our rendered\nimage, if that speeds rendering up by a factor of two!\n\nThe next things to go were the \"drop dead\" animation (which used `scroll-up`)\nand the text routines. The font was pretty large and the text rendering way too\nslow for Chip-8. So that had to go.\n\nFinally, I threw out all the things that weren't gameplay related, like the\ntitle screens, introduction screens and end-of-game screen. Those just take up\nspace and don't add so much to the game experience.\n\n### For good measure\n\nThose last few steps were also because I knew that the original game was waaay\nto large to fit in the miserably small memory size of Chip-8. I needed to cut\naway as much as possible to lose some dead weight, otherwise this was never\ngoing to work. Because the last and hardest XO-Chip instruction I needed to\nremove was `i := long NNNN`...\n\nWe need to go from 16 bits addresses back to 12 bit addresses. Not just the game\ncode, but the **whole game** now needs to fit within the magic 3.5K limit. I\nwondered where I stood with this endeavour, seeing as I had already halved the\nnumber of bytes in the image data going from four to two colours, and thrown out\nquite a few bytes left and right. So I made a rough overview of which data was\nwhere in memory.\n\nThe result wasn't very promising.\n\n|  Address space  | Size | Contents                    |\n|-----------------|------|-----------------------------|\n| `$0000 - $0200` |  512 | Interpreter code            |\n| `$0200 - $0B70` | 2416 | Game code                   |\n| `$0B70 - $2700` | 7056 | Tiles, screens, binary tree |\n| `$2700 - $29A8` |  680 | Map data and game state     |\n\nEven without the text and music code, my program code size alone was nearing the\n3.5K limit 😮\n\nSo the code needed to go on a diet first. We can add compression to the image\ndata, or reduce the resolution, or maybe reuse sprites. We can reduce the number\nof game levels. But we can't wish away real program code. The next step I took\nwas to investigate where exactly all this game code \"lives\". I wrote a script to\nroughly measure the size of each of my source code files.\n\nRoughly speaking, each line of code in Chip-8 is two bytes, give or take. So my\nscript just iterates over all files, throws out comments and empty lines and\ndoes the remaining line count times two. It's by no means perfect and it seems\nto under-estimate the sizes, but it's a good enough estimate for now.\n\nThese were the results:\n\n```\nRough size estimation:\n  218  ./src/key-input.8o\n  56   ./src/main.8o\n  130  ./src/map-management.8o\n  372  ./src/map-triggers.8o\n  136  ./src/mini-map.8o\n  224  ./src/render-3d.8o\n  348  ./src/transitions.8o\n  252  ./src/viper-ai.8o\n```\n\nWe can't lose the key input, the main file, the map management or the 3D\nrendering code (unless we make this into a completely different game). We can\nhowever simplify the map triggers, and choose to throw out the mini map and\neither throw out or greatly simplify the vipers. Maybe the buttons or the coins\nneed to go, maybe the mini map, maybe the vipers, maybe just the viper\nanimations. Or maybe all of them.\n\nSo far I hadn't really thrown anything out that significantly changed the\ngameplay. But any of these choices would definitely do that, and reduce the fun,\nthe interactivity, the stuff that makes the game worth playing.\n\n### Back to the drawing board\n\nSo needless to say, I'm not a happy coder at this point 😂\n\nMaybe I just needed to go back to the start, and instead of trying to reduce a\ncomplete game with all these bells and whistles, try to get the 3D rendering\nstuff to run on Chip-8 first. And then see what we can add, if anything. That\nmay reduce the whole exercise to a tech demo instead of a game, but that's okay\ntoo.\n\n```\nRough size estimation:\n  172  ./src/key-input.8o\n   38  ./src/main.8o\n  130  ./src/map-management.8o\n  148  ./src/render-3d.8o\n------------------------------- +\n  488 bytes\n```\n\nSo I proceeded to strip everything out except for rendering and player movement.\nAfter the first rough pass I reduced the code size down to 580 bytes and I left\nin just a single map and the game state, which comes in at 146 bytes. That's\nquite reasonable. But the screen data and the decision tree still accounted for\nalmost 6000 bytes. After removing the top and bottom rows from the screen data\n(since we're not rendering those anyway) I ended with 5324 bytes of data.\n\nSo where does this leave us?\n\n|  Address space  | Size | Contents                |\n|-----------------|------|-------------------------|\n| `$0000 - $0200` |  512 | Interpreter code        |\n| `$0200 - $0444` |  580 | Game code               |\n| `$0444 - $1910` | 5324 | Screens, binary tree    |\n| `$1910 - $1A56` |  146 | Map data and game state |\n\nOur memory map should end at the most at `$FFF`, but preferably at `$E90`. So\nwe're at least ~2650 bytes over budget. Could we halve the screen data and\ndecision tree size to ~2670 bytes? Would that be a reasonable thing to expect?\n\nThe answer is a solid _maybe_ 😉. Writing a couple more scripts to dissect the\ndata segments of our memory map revealed that 90% of it was screen bitmaps:\n\n```\n4920 bytes in screens.txt     -  90%\n 404 bytes in binary-tree.8o  -   7%\n   6 bytes in game-state.8o   -  <1%\n 128 bytes in maps.8o         -   2%\n----------------------------- +\n5458 bytes\n```\n\n_(Note for the accurate people among us: I've removed a couple of bytes from the\ngame state in between these two tests, which is why this total is 12 bytes short\nof the addition of the two sizes above.)_\n\nThis was actually good news for two reasons:\n\n1. We can compress image data, and/or use a smaller portion of the display,\nreducing the resolution and thus the amount of image data.\n\n2. Having reduced our colour palette (and maybe the resolution too), the amount\nof detail that is visible in the distance is greatly reduced. We can probably\nstrip out one or two levels of depth that we can't see anyway, and drop a lot of\nbytes.\n\n### Squeezing bytes\n\nAlright, so on to that first point. We needed to shave ~2650 bytes off our 4920\nbytes of screen data. That comes down to needing a compression ratio of 46%. If\nwe could hit that, we'd have liftoff!\n\nBut decompressing image data isn't for free. It takes space in the sense of\nneeding to have a decompression algorithm and some data buffer to decompress\ninto and it takes a lot of CPU cycles to do the actual decompression. Neither of\nwhich we have a lot of. So the first challenge is to write a decompression\nalgorithm that isn't too depressingly slow and isn't overly huge.\n\nSo I started work on a simple run length encoding scheme. Use a bit to encode if\nwe're in plain copy or run length mode, use the other seven bits to encode for\nhow many bytes that goes, and the byte(s) that follow are the image data.\n\n```\n# Run length mode, eight times 0xff:\n0x08 0xff\n\n# Plain copy mode, for four bytes:\n0x84 0x77 0x0A 0x00 0x80\n```\n\nWorst case scenario this adds one byte per run, best case scenario this reduces\nan entire run to two bytes. And a run can be a maximum of 127 bytes, although we\nwill never hit that theoretical maximum. Note that runs of two or three bytes\nwill make no sense with this encoding scheme. Replacing two identical bytes with\none byte indicating a run of two and the next byte indicating what to be\nrepeated makes no sense, and has the downside of breaking up the plain copy run.\nSo we have to restart that too, taking up one **more** byte than if we just left\nthe two bytes in the copy run. For three bytes it doesn't really make any\ndifference, more on that later.\n\nSo the question then becomes: how many runs, of which types and which lengths do\nwe have?\n\n#### Side note\n\nOkay, so a little side-note about writing decompression algorithms for Chip-8 is\nin order, I think. Chip-8 has only one 16-bit index register, so you can only\npoint to one place at a time. As you'll understand, this is a problem when\nyou're trying to write a subroutine of any kind that can move or manipulate data\nfrom one place to another.\n\nThe general solution to this issue is to \"unpack\" your addresses in registers\nand then use self-modifying code to load the addresses into the only available\n16-bit register when needed. To make matters more complicated, the first couple\nof registers are at a premium because we can only read from and write to memory\n(including the SMC trick) using the first couple of registers. So all in all,\njust copying one byte from one supplied address to another would look something\nlike this madness:\n\n```\n: main\n  # pretend we have this macro: (which adds code too, btw)\n  unpack-to v6, v7, compressed-data\n  unpack-to v8, v9, destination-buffer\n  decompress\n  # End\n\n: decompress\n  v0 := v6\n  v1 := v7\n  v2 := $A0\n  v0 |= v2\n  i := decompress-smc1\n  save v1\n: decompress-smc1\n  0 0\n  load v0\n  v5 := v0\n  v0 := v8\n  v1 := v9\n  v0 |= v2\n  i := decompress-smc2\n  save v1\n: decompress-smc2\n  0 0\n  v0 := v5\n  save v0\n  return\n```\n\nThis code hasn't been tested, and it's probably wrong, but you get the idea 😉\nWe can't be doing something like this for each and every byte we need to draw to\nthe screen, because it would be way too slow.\n\nSo I thought to myself: if we decompress as many bytes as we can from a given\nmemory location to _registers_ first, we can then write those bytes to the\ndestination buffer in one go. This would speed up the decompression step because\nwe're not constantly switching between pointers. My first implementation allowed\nfor a maximum of 11 bytes to be decompressed before we ran out of registers.\nAlso, because the first couple of registers do the heavy lifting, this required\nme to store the compressed data segments in reverse. So not really an optimal\nsolution, but the concept was a good start. However, I needed to be able to\ndecompress more than 11 bytes.\n\nSo I wrote a second implementation, that loads the source address from memory\nusing the SMC trick once per \"run\". It then loads the entire run into registers\nand writes the run back to memory in one go. I was able to save one more\nregister, so this means that this time a run can be no longer than 12 bytes. But\nthere is no more limit on the length of the entire data segment, so that's a\nbonus.\n\nAnother optimisation that I found was to not load the destination address from\nmemory, but to use a fixed buffer location, and use a register to point to the\ncurrent byte in that buffer. This limits the length of our decompressed data to\n255 bytes, but that's well within what we need.\n\nThese are nice optimisations, but still: decompression and Chip-8 weren't really\nmade for each other.\n\n#### Back on track\n\nAlright, so back to that question about what kind of runs we can get, and with\nthat: what our compression ratio is going to be.\n\nAfter writing a compression script that also takes into account the 12 bytes run\nlength limit, and only compresses runs of three bytes or more, I ended up with a\ncompression ratio of around ~27%. Which is nice, but nowhere near our target of\n46%.\n\nAlso, having to decompress our images turns out to be pretty slow. So as a minor\nimprovement I opted to compress runs of four bytes or more, to reduce the\naverage number of runs per image. This _should_ have no impact on the ratio in\nan ideal world, but because we can only have runs of 12 bytes and the cut-offs\nfor the runs fall in different places, in practice it costs us one or two\npercent of compression efficiency.\n\nAlright, so we have 4920 bytes to compress, 25% of that is 1230 bytes. My\ndecompression algorithm is 326 bytes including the buffers, so we've just saved\nourselves ~900 bytes. Saving almost a kilobyte is impressive on this platform,\nbut it was nowhere near enough.\n\nBut I had a couple of other, compatible ideas to test.\n\n### Those flippin' images\n\nHalf of our images is completely redundant. In 99% of cases, the images on the\nleft half of the screen are a flipped but otherwise identical version of the\nimages on the right. So if I could flip the images on the fly, that would save\nus almost 50%! Talk about impressive compression ratios.\n\nI considered this idea before in my original 3D Viper Maze, but thought it would\nbe way too slow in practice. So I opted (as I did in so many places) to\nsacrifice some storage for speed. But now it was time to give it a try, to see\nif we could sacrifice some speed for storage, and be happy with it.\n\n[The algorithm](experiments/flip.8o) to flip the images was a lot easier to\nwrite than the decompression algorithm, and it required no compression step. So\nat first I thought: why didn't I try this idea first? It's so much simpler, more\neffective and faster to build!\n\nBut the answer to that question was that my initial hunch was correct. Flipping\nimages is a per-bit operation. Decompressing them is a per-run-of-several-bytes\noperation. On a platform as limited as Chip-8, this really matters:\n\n![Rendering images directly (left) and after flipping (right)](flipping.gif)\n\n_Images on the left are rendered from memory, images on the right are flipped\nfirst. Running at 30 cycles/frame in Octo._\n\n![Rendering images directly (left) and after decompression (right)](decompressing.gif)\n\n_Images on the left are rendered from memory, images on the right are\ndecompressed first. Running at 30 cycles/frame in Octo._\n\nSo while a great idea in theory, flipping images on the fly seems like a no-go.\n\n### Duplicates\n\nBut there is yet another way to save a lot of bytes in the image data.\n\nAs I explained in my [development notes for 3D Viper\nMaze](https://github.com/Timendus/3d-viper-maze#development-notes), I render\nfour 16 pixels wide columns for which I determine the right image using a\ndecision tree. This way the screen gets composited together with all the right\nparts, and I don't need to have an image in memory for each and every possible\npermutation of the map. As I hinted there, I could have a decision tree for each\ncolumn of 8 pixels instead.\n\nThe downside of that is obvious: we have to traverse twice as many decision\ntrees to render one screen, which will be more slow. We will also have more data\nin the decision tree. The upside may not be so obvious: having 8 pixel wide\ncolumns allows for more permutations in the composition step, reducing the\nnumber of permutations of the images that we need. In many of the 16 pixel wide\nimages, either the left or the right side of the image is the same as some other\nimage.\n\nSo I set out to try this approach. It was quite a lot of work to rewrite the\nimage cutting and importing code, update the rendering code and most\nimportantly: redo the decision trees to have eight of them and filter out the\nduplicate images. And while I was at it, I removed the images where there's a\nhall to the left or right in the far distance, because the difference of a\nsingle pixel was pretty much indistinguishable anyway. It was not much fun to\nhave to revisit these trees, and it made the game run a lot slower.\n\nBut the good news was that the 4920 bytes of uncompressed image data was now\nreduced to only 3000 bytes. The decision tree grew a bit from 404 bytes to 624\nbytes, but this was a net gain of 1700 bytes! Way more impressive than my\ncompression algorithms actually.\n\nIn fact, this step almost made the compression useless. The compressed size of\nthese images is now 2337 bytes, and after subtracting the 296 bytes of the\ndecompression algorithm (which shrunk: remember, we dropped 30 bytes of image\nbuffer too!) we're left with a net compression gain of just 367 bytes. So much\nwork for so little result 🙈😂.\n\nBut hey, this is Chip-8: every byte counts!\n\n### The last mile\n\nAfter all this shaving off bytes left and right in the image data and adding\ncode, let's take another look at that memory map:\n\n|  Address space  | Size | Contents                |\n|-----------------|------|-------------------------|\n| `$0000 - $0200` |  512 | Interpreter code        |\n| `$0200 - $056E` |  878 | Game code               |\n| `$056E - $10FF` | 2961 | Screens, binary tree    |\n| `$10FF - $1185` |  134 | Map data and game state |\n\nSo close! We're only 390 bytes over budget. Or 757 bytes to run it with the\noriginal Cosmac VIP interpreter. But either way, this feels like we're almost\nthere! We've had to strip out absolutely everything that ever made it feel like\na fun and polished game and reduced it to a slow tech demo, but we are getting\npretty close now.\n\nTo get rid of the last few hundred bytes, I turned my attention to the code\nagain. I gave up on being able to switch maps (seeing as having a single map is\nalready proving to be a challenge) and I was able to optimize some of the key\ninput and map management code, which was some of the first Octo-flavoured Chip-8\ncode that I wrote. It turns out that I have learned a thing or two since then 😄\n\nI then got back to the decision trees once more. I had been a bit time\nconstrained previously, and left in a bunch of nodes that basically did nothing.\nAlso, I had a couple of trees where the left side of the screen differed from\nthe right side. That makes no sense, so I'm guessing this has to do with the\nartistic liberties I took when drawing the new images: if I added a pixel here\nor there to make it look better I may have inadvertently introduced differences\nbetween images where there shouldn't have been any. So in those cases I reduced\nthe larger of the two trees to match the smaller one, cleaning up these\nmicro-differences.\n\nI now had to figure out which images were in the final program that were never\nreferenced by the decision tree. I wrote a quick script to figure that out, and\nwas able to knock six or seven images off. This reduced the size of the screen data to \"only\" 2760 bytes. Yay! 🎉\n\nFinally, we're at the point where I could build a binary that is less than the\nmagical 3.5K. 62 bytes less, to be precise. This makes it small enough to run on\nmost modern Chip-8 interpreters, including SCHIP interpreters. To be able to run\non SCHIP I had to make a few minor adjustments to the decompression algorithm\nthough. Changes that would break the program in the \"normal\" interpreters. So I\nonce again wrote a small script, this time to do some preprocessing, so I can\nwrite things like this in my code:\n\n```\n: decompress-repeat\n  source-counter += 2\n  #if SCHIP\n    v0 := 1\n    i += v0\n  #end\n  load v0\n  #if SCHIP\n    v2 := 11\n    v2 -= num-bytes\n    v2 <<= v2\n    vF := v0\n  #else\n    v1 := v0\n    v0 := 11\n    v0 -= num-bytes\n    v0 <<= v0\n    vF := v1\n  #end\n  jump0 decompress-repeat-bytes\n```\n\nWith that preprocessing, we're now building a special SCHIP version of the\nprogram that is small enough to fit and actually works too! 😉\n\n### Back to the '70s\n\nSo we had a Chip-8 version, under the magic 3.5K limit, running on most modern\ninterpeters. Job finished? Well, to be able to run this on the original Cosmac\nVIP interpreter I needed to knock off another 306 bytes. The original interpreter\nstores its internal data structures like the registers and the screen buffer in\nthe upper bytes of 12-bit addressable memory. So I wasn't _really_ done yet.\n\nAfter making the left side of the decision tree match the right side, I realised\nthat I was basically storing the same data twice, but with a few different\noffsets. So I rewrote some code to be able to handle the offsets at run time and\nI could halve the node-part of the decision tree. This saved me 171 bytes, 135\nleft to go! I was feeling pretty optimistic that I could get there!\n\nBut after that, I got kind of stuck. Looking through the code and the data again\nand again I could not find any more things to optimize. The only significant\nimprovement that I could think of would be to redraw many of the screens to make\nmore wall boundaries fall on 8-pixel boundaries:\n\n![Wall boundaries that don't fall on 8-pixel boundaries](not-on-boundary.png)\n\n_Wall boundaries that don't fall on 8-pixel boundaries_\n\n![Wall boundaries that do fall on 8-pixel boundaries](on-boundary.png)\n\n_Wall boundaries that do fall on 8-pixel boundaries_\n\nThe reason that this would save a lot of data is that if wall boundaries fall on\n8-pixel boundaries, we only have to store the separate parts. If they don't, we\nhave to store each possible permutation of those parts. This makes quite a\ndifference.\n\nBut I just didn't feel like redoing my images and the decision tree yet again,\nand I found no other ways to push through this impasse, so I put this project\naway for a couple of months. Having found some new energy, I redrew the images,\ncleaned up the pointers and voila! I had 410 bytes **left to spare**! And I\nhadn't even optimized the decision tree yet. That's just crazy.\n\nSo here it finally was! 3D VIP'r Maze (or what's left of it 😉) running \"on the\nCosmac VIP\" in the Emma O2 emulator:\n\n![3D VIP'r Maze running on Emma O2](emma.png)\n\nThe images were now compressed from 2280 bytes down to 1648 bytes. After\nsubtracting the size of the decompression algorithm, the compression only saved\nme 336 bytes, which was actually less than the memory that I had left. So that's\nkind of a depressing return on investment for all the time and effort that that\ncost me 😄 So for the SCHIP version, where space is a little more abundant, I\nbuilt a version that just removed the compression (using the preprocessing\n\"macros\" described above) to gain back some speed and run a bit more smoothly on\nthat platform.\n\n### And back to a game!\n\nOn both Chip-8 and SCHIP, I now actually had some space left to work with. I\ncould use those spare bytes to try to make this back into an actual game! It had\nto be a crappy one, seeing as I didn't have much to work with. But any gameplay\nis better than none 😝\n\nSo I wrote a simple random maze generator based on [Prim's\nalgorithm](https://en.wikipedia.org/wiki/Maze_generation_algorithm#Randomized_Prim's_algorithm),\nand you can now walk around endless random mazes, looking for the exit. The game\nkeeps score of how many mazes you have solved, so you can see how far you have\nprogressed! It really takes a while to generate a maze though, so I added a\nprogress bar to inform the user 🙈\n\nI wrote a [slightly more complicated version](experiments/random-mazes.8o) of\nthe maze generator, that should give more interesting mazes, but that turned out\nto be too large to fit and didn't result in significantly different mazes. So\ninstead I opted to increase the size of the generated mazes a bit to fill up\nsome more of the remaining space and make the mazes more interesting that way.\n\nAnd with that, we have a working and playable 2.5D game! With 21 bytes left to spare on the Cosmac VIP and 29 bytes free on SCHIP 🎉\n\n![3D VIP'r Maze with randomly generated mazes](random-maze.gif)\n\n### Thanks for reading this far! 😉\n\nPointers for future me if I ever need more space:\n\n * I don't think I have fixed the decision tree after making the wall boundaries\n   fall on 8-pixel boundaries. So there's probably duplicate pointers and\n   useless nodes in there.\n * It's probably possible to halve the pointers too. The offset from an image in\n   the left set to the same image in the right set should be a fixed offset.\n * There is some slight code duplication in map-management.8o\n\nAll in all this can maybe save another ~150 bytes or so.\n"
  },
  {
    "file": "3D VIP'r Maze (Tim Franssen)(2021).sc8",
    "sha1": "6dc9b7bee24f9793b929d20a7757725f3183d12e",
    "platform": "schip",
    "title": "3D VIP'r Maze",
    "release": "2021",
    "authors": ["Tim Franssen"],
    "description": "Let me be very clear and up front that I didn't really make this game this October, but 6 months ago. But since this \njam isn't really a competition, and more of a show-and-tell, I thought it would be fun to submit this as a \"follow up\" \non my project from last year.\n\nThis game is an homage to the Sinclair ZX81 game 3D Monster Maze from 1981. That game was released just three years \nafter the specification for Chip-8 was published, so it's from around the same era. In honour of the first computer \nthat ran Chip-8, the Cosmac VIP, and its related magazine, the VIPer, I figured it was time for a viper version of \n3D Monster Maze, and so last year I created 3D Viper Maze for Octojam 7.\n\nThe intention I had with 3D Viper Maze, although written using XO-Chip instructions to make it more fun as a game, \nwas always to create a version of the game that can run on the original Cosmac VIP Chip-8 interpreter. This simplified \nversion became 3D VIP'r Maze, and that is what you're looking at.\n\nThis version of the game runs at 30 cycles per frame, at the original resolution, in the space of 3.2K of memory, \nusing the original instruction set. It's a game with an endless supply of randomly generated mazes, just like its \nnamesake. The levels are generated in Chip-8, so you will have to be a little patient ;) Unfortunately there wasn't \nenough space to add any vipers this time around.\n\nYour challenge, if you accept it: to find the exit in each maze! How far down the maze can you get?\n\nIf you're interested in the challenges I had to overcome to make this game fit and run on the original Cosmac VIP, \ncheck out my development notes on Github!\n\n"
  },
  {
    "file": "3D Viper Maze (Timendus)(2020).xo8",
    "sha1": "62e204572ac05be3748a746ac7831d6844f43003",
    "platform": "xochip",
    "title": "3D Viper Maze",
    "release": "2020",
    "authors": ["Timendus"],
    "description": "\n3D Viper Maze\n=============\nby Timendus (Octojam 7)\n\n\nAbout:\n------\n3D Viper Maze is (obviously) an homage to the Sinclair ZX81 game 3D Monster Maze from 1981. That game was \nreleased just three years after the specification for Chip-8 was published, so it's from around the same \nera. In honour of the first computer that ran Chip-8, the Cosmac VIP, and its related magazine, the VIPer, \nI figured it was time for a viper version of 3D Monster Maze. With a few twists of my own.\n\n3D Viper Maze is not a game with an endless supply of randomly generated mazes, like its namesake. Instead, \nit has handcrafted levels with vipers, coins and buttons. Your challenge, if you accept it: to find the exit \nin each maze, while collecting all the coins, in a series of ever more difficult puzzles.\n\n\nControls:\n---------\nNavigate using 5, 7, 8 and 9. Bing up the map with '1'."
  },
  {
    "file": "8min (TomR)(2020).ch8",
    "sha1": "ee7fb407da5f17ea7be9d16ce8a7ff38028ca924",
    "platform": "chip8",
    "title": "8min",
    "release": "2020",
    "authors": ["TomR"],
    "description": "\n8min\n====\nby TomR (Octojam 7)\n\n\nAbout:\n------\nDon't the let ball into your corner.\n\n\nControls:\n---------\nUse \"7\" and \"A\" to control the left paddle, \"E\" and \"B\" to control the right paddle."
  },
  {
    "file": "Acey Deucy (Phil Baltzer)(1978).ch8",
    "sha1": "d97a7e1d952ed70d00715d92291ef08fc9a4c909",
    "platform": "chip8",
    "title": "Acey Deucy",
    "release": "1978",
    "description": "\nAcey-Ducey - by Phil Baltzer (1978)\n-----------------------------------\nACEY-DUCEY is a card game in which the dealer shows two cards from deck. You bet \n(from 1 to 9) that the next dealer card lies between or equal to the first two \ncards in face value (ACES are low). \n\nIn order to obtain a new deal, press the zero key, and then bet as before. Try for \na score of 100 or greater. \n\n\nControls:\n---------\n1 to 9 = Betting\n0 = New Deal\n\n"
  },
  {
    "file": "Advanced Warfare (by Ethan Pini)(2019).ch8",
    "sha1": "f0b6e192b9589cc9ee9bc89bacdab00be6ac360d",
    "platform": "chip8",
    "title": "Advanced Warfare",
    "release": "2019",
    "authors": ["Ethan Pini"],
    "description": "\nAdvanced Warfare - by Ethan Pini (2019)\n---------------------------------------\n \nA game of war, death, and respect.\n\n\nControls:\n---------\n\nPress \"F\" to augment the \"respects\" until \"WIN\" appears.\n\n\nPersonnal note: You'll be bored to death before you win the game... :(\n\n"
  },
  {
    "file": "Akahad_v1.0.xo8",
    "sha1": "10fe2d629a3cebdbfe23fb9310ca74a3574e5a67",
    "platform": "xochip",
    "title": "Akahad_v1",
    "description": "# Akahad\nThis was my XO-Chip submission for Octojam 8. It is (as of writing) easily playable at https://chromatophore.itch.io/akahad\n\n![alt text](Resources/akahad_logo.gif \"Akahad animation\")\n\nIt's written for Octo, a high-level assembler for Chip 8, an 8 bit assembly language from the 1970s: https://github.com/JohnEarnest/Octo\n\nThis game was inspired by the number 8 and its similarity to the infinity symbol. Several connections were made and we now have some kind of Warrior Within fan game? Of course, due to the platform, it is quite straight forwards.\n\n## Controls\n\nRide the time line and catch the elusive Ecnirp, and make sure that he doesn't escape his fate! (Also, the text is backwards on purpose)\n\n**W** - Jump\n\n**Hold S** - Become ball to avoid walls (but also everything)\n\n**S while jumping** - Butt Slam\n\n**A (with boost guage)** - Slow Motion\n\n**D (with boost guage)** - Speed Up (and break through walls)\n\nSome updates have been made since the submission at the end of the jam:\n\nNew animations between levels & also like, reasonable required scores, and progression, or something."
  },
  {
    "file": "Akir8 (TomR)(2020).xo8",
    "sha1": "565b40c19d653521a0257c28a92671d0e594f22a",
    "platform": "xochip",
    "title": "Akir8",
    "release": "2020",
    "authors": ["TomR"],
    "description": "\nAKIR8\n=====\nby TomR (Octojam 7)\n\n\nAbout:\n------\nAKIR8 is a game based on the movie AKIRA.\n\n\nControls:\n---------\n\"5/7/8/9\" to move and \"6\"."
  },
  {
    "file": "Alien (by Jonas Lindstedt)(199x).sc8",
    "sha1": "bc5faf54f04da3f4dbde50d3b31ccfc2bf8b9e06",
    "platform": "schip",
    "title": "Alien",
    "release": "199x",
    "authors": ["Jonas Lindstedt"]
  },
  {
    "file": "Alien Hunter (by Hans)(2015).sc8",
    "sha1": "f4e50d6e209324906b7899ed785a0d849a397abc",
    "platform": "schip",
    "title": "Alien Hunter",
    "release": "2015",
    "authors": ["Hans"],
    "description": "\nWelcome to my second CHIP48 game ever. This time it uses the new features \n(i.e. scrolling and full-screen graphics) that were added in SUPER-CHIP V1.1.\n\nThe game\n--------\nDue to lack of imagination, I did a very wellknown game. Alien, one of the \nfirst games I played in the beginning of the C=64 era. It is a rather simple\nshoot'em up game and the story behind the game is as follows: Unfriendly\n(most aliens are) aliens have invaded the earth and the only one who can stop \nthem are you. To assist you in your battle, the russian experts have \ndeveloped a new powerful (and leathal) weapon, the blaster. But, as you\nknown, the Rubel isn't what it used to be and therefore, the scientists could \nonly afford the version with limited firecapacity. You can only have one shot \nin the air at the same time. And what's even worse: the aliens have gotten \nhold of the very same weapon. And they're continually making their shields \nstronger and stronger. Stop them before they reach mother earth!\n\nHow to start the game\n---------------------\nUpload the game to your HP48-series calulcator via the serial cable. Make \nsure the you also have got S-CHIP V1.1 somewhere in your machine (otherwise \nyou'll have to upload that too). Press the Alien menu-key and a string will \nappear in the first level of the stack (the only thing readable is my name). \nThen press the S-Chip menu-key and the game will begin. See next section for \nfurther description.\n\nThe controls\n------------\nKEY             DESCRIPTION\n\nEnter           Restart the game\nBackspace       Quit game (return to calculating, who needs that?!)\n+/-             Toggle sound on/off (useful when teacher is near you)\n9               Stear your blaster left\n/               Stear your blaster right\n0               Fire (you also use this key to begin playing)\n\nCopyrights\n----------\nCHIP48 V2.25 (C) Andreas Gustafsson, Finland\nS-CHIP V1.1 (C) Erik Bryntse, Sweden\nALIEN V1.0 (C) Jonas Lindstedt, Sweden\n\nThis game is released as Public Domain via Internet and various Bulletin\nBoard Systems. You may copy this program for non-profit purposes. I don't \ntake any responsibility for any damage caused by this program, but please \nwrite me a letter if you find any bugs or have suggestions how to make this a \nbetter game. (I know it's a bit slow, but so am I.)\n                                                \nEnjoy!!\n\nJonas Lindstedt\nDepartment of Real Time Computer Systems\nMalardalens University, Vasteras, Sweden\n-------------------------------------------\nE-mail:         ltd92jlt@martin.mdh.se \n                 or              \n                akcs.jonasl@hpcvbbs.cv.hp.com\n\nAddress:        Jonas Lindstedt\n                Bergmastarv. 15\n                S-724 78  VASTERAS\n                Sweden\n\n"
  },
  {
    "file": "Alien-Inv8sion.xo8",
    "sha1": "24ef21009527ee674de44ccb37e37081654883f9",
    "platform": "xochip",
    "title": "Alien-Inv8sion",
    "description": "How to play Alien Inv8sion\nControls\n\n    Arrow keys or WASD to control your ship (or keys 5, 7, 8 and 9 on mobile / Cosmac VIP)\n    E or spacebar to fire lasers (or key 6 on mobile / Cosmac VIP)\n\nGameplay\n\nYou are famed airship pilot Gunnar Gunman, and after the aliens striked first and destroyed most of the human fleet, \nyou are planet Earth's only hope! Destroy as many aliens as you can before they hit the ground to give your fellow \nhuman being a fighting chance! 👽\n\nFor each alien spaceship you shoot down, you gain points (shown on the top left, indicated with \"PTS\"). If you let \nalien ships escape and get down to the planet, you lose points. For every 250 points you collect, you go up a level \n(current level shown bottom left, indicated with \"LVL\"). But beware! Each level, the attacks get more fierce!\n\nYour ship does not have unlimited power. The power meter (white indicator on the left of the playfield, which turns \nred) shows you how much power your ship has left. Shooting your lasers takes power, and if you lose power your lasers \nwill be less powerful. More importantly, your power also feeds your shields. If you run your ship into alien ships, \nyour shield will compensate and draw power. Lose all your power and you lose your shields, leaving you vulnerable to \nthe alien ships!\n\nGood luck Gunnar, and may lady luck smile on you!\nThe concept\n\nAlien inv8sion is a nod to the endless stream of space shooters that popped up in the late 70s and early 80s after \nthe popularity of the game Space Invaders from 1978. This is very much the exact same period in which CHIP-8 became \npopular, and there are a lot of Space Invaders clones and other space shooters for CHIP-8. Time to add my twist on \nthe theme to the fray!\n\nHaving recently developed a WebAssembly CHIP-8, SCHIP and XO-CHIP interpreter called Silicon8 that supports the full \nrange of XO-CHIPs potential colour space  (a whole whopping 16 colours!) I figured it would be a shame not to make \nuse of those colours in my next game. So I did, and I bumped the virtual CPU speed to an absolutely insane 12Mhz to \nbring CHIP-8 (or more specifically XO-CHIP) much closer to the coveted arcade systems of the time, or even systems \nlike the NES.\n\nUnfortunately I didn't have very much time to work on this game this year, and the actual gameplay may not be what \nyou expect from an arcade or NES game. But it's fun to fly around and shoot aliens, and as a demo of what CHIP-8 \ncan do if pushed: a fully animated colourful parallax background with lots of masked sprites flying across the screen!\n\nFor more background information and the source code, see the Github repository.\n\n"
  },
  {
    "file": "Alternate [TCNJ S.572.3].ch8",
    "sha1": "7cd0334fc30cbbb21d3c5a909fa2c69927ec4a6c",
    "platform": "chip8",
    "title": "Alternate",
    "authors": ["TCNJ S.572.3"]
  },
  {
    "file": "An Evening to Die For (by John Earnest)(2019).xo8",
    "sha1": "0893dd3b5fafa013f07acc9aa98876f84f328d54",
    "platform": "xochip",
    "title": "An Evening to Die For",
    "release": "2019",
    "authors": ["John Earnest"]
  },
  {
    "file": "Angle of Death (Chromatophore)(2020).xo8",
    "sha1": "e85ade7412e8affc4a8590fc0c928f1f00c5eb6b",
    "platform": "xochip",
    "title": "Angle of Death",
    "release": "2020",
    "authors": ["Chromatophore"],
    "description": "\nAngle of Death\n==============\nby Chromatophore (Octojam 7) - Unfinished\n\n\nAbout:\n------\nRight now there's only 6 levels so when the level select thing scrolls, that's the lot.\n\n\nControls:\n---------\n\"5/7/8/9\" = move cursor\n\n\"4\" & \"D\" = rotate\n\n\"E\" = sweep\n\n"
  },
  {
    "file": "Ant - In Search of Coke (by Erin S. Catto)(199x).sc8",
    "sha1": "a56c09537df0f32e2d49fb68cb2ba8216b38f632",
    "platform": "schip",
    "title": "Ant - In Search of Coke",
    "release": "199x",
    "authors": ["Erin S. Catto"]
  },
  {
    "file": "Applejack (John Earnest)(2020).sc8",
    "sha1": "67efbd5a84fe1337c3c9cb3040981ec4ce52577b",
    "platform": "schip",
    "title": "Applejack",
    "release": "2020",
    "authors": ["John Earnest"]
  },
  {
    "file": "Area F (by Nakatsugawa)(2015).ch8",
    "sha1": "d867b0d0fe1e96ba60910c64d9362da5a986774e",
    "platform": "chip8",
    "title": "Area F",
    "release": "2015",
    "authors": ["Nakatsugawa"]
  },
  {
    "file": "Arrows (by Ashton Harding)(2018).ch8",
    "sha1": "8166328ddd1deb0df718323c0c63c76b267cec4a",
    "platform": "chip8",
    "title": "Arrows",
    "release": "2018",
    "authors": ["Ashton Harding"]
  },
  {
    "file": "Artifac (by Ethan Pini)(2019).ch8",
    "sha1": "6a846ca9fed73a7ef0e6695a665d2f15dd6a8141",
    "platform": "chip8",
    "title": "Artifac",
    "release": "2019",
    "authors": ["Ethan Pini"]
  },
  {
    "file": "Asphyxiation (Verisimilitudes)(2020).ch8",
    "sha1": "c05d1316bbb8acb1ba425c3ebdd0123632a73fd8",
    "platform": "chip8",
    "title": "Asphyxiation",
    "release": "2020",
    "authors": ["Verisimilitudes"]
  },
  {
    "file": "Asphyxiation Advanced (Verisimilitudes)(2020).ch8",
    "sha1": "e99657c8a3bfbfb5a9cb70e7d330346802ce20ce",
    "platform": "chip8",
    "title": "Asphyxiation Advanced",
    "release": "2020",
    "authors": ["Verisimilitudes"]
  },
  {
    "file": "Astro Dodge (fix)[Revival Studios, 2008].ch8",
    "sha1": "048659b97e0cf9506eba85ef7baaf21ada22c6f2",
    "platform": "chip8",
    "title": "Astro Dodge",
    "authors": ["Revival Studios"],
    "description": "This version does not have the Fx55/Fx65 (load_store_quirk) issue where\ngarbage is shown on sides of screen and \nscore won't increment. \n\nI believe this is actually the original version but not 100% sure.\n\n\n-----------------------------------------------------------------------------\n\n\n\t\t\t      /////////////////\n\t                      //////////////////\n        \t              ////          ////\n\t               \t      ////   ///////////\n\t                      ////  ///////////\n                              ////  ////\n                              ////  ///////////\n                              ////   //////////\n  \t     \t   \t\n  \t\t\t   www.revival-studios.com\n-----------------------------------------------------------------------------\nTitle\t\t:\tAstro Dodge\nAuthor\t\t:\tMartijn Wenting / Revival Studios\nGenre\t\t:\tGame\nSystem\t\t:\tChip8 / SuperChip8\nDate\t\t:\t18/12/2008\nProduct ID\t:\tRS-C8003\n-----------------------------------------------------------------------------\n\nAll the contents of this package are (c)Copyright 2008 Revival Studios.\n\nThe contents of the package may only be spread in its original form, and may not be\npublished or distributed otherwise without the written permission of the authors.\n\nDescription:\n------------\nAstro Dodge is an arcade game for the Chip8 and SuperChip8 systems.\nBoth versions of the game are included in this package.\n \nYour goal is to make your way through the asteroids field and dodge the asteroids, scoring points for each asteroid you are able to dodge.\nButton 2,4,6,8 will move your ship, button 5 will start the game.\n\nRunning the game(s):\n--------------------\nThe CHIP8 version of the game has been programmed to be compatible with original hardware like the Cosmac VIP and Telmac 1800.\nUse the Megachip emulator or any other Chip8/SuperChip compatible emulator to run the game(s).\n\nCredits:\n--------\nProgramming and Graphics by: Martijn Wenting\n\nDistribution:\n-------------\nThis package can be freely distributed in its original form.\nIf you would like to include this game in your rom package, please let me know.\n\nWatch out for more releases soon!\n\n\n\tMartijn Wenting / Revival Studios\n\n"
  },
  {
    "file": "Ball Breaker (Verisimilitudes)(2020).ch8",
    "sha1": "ec00e355117ed6385b51c0819f85954c3b765ed0",
    "platform": "chip8",
    "title": "Ball Breaker",
    "release": "2020",
    "authors": ["Verisimilitudes"]
  },
  {
    "file": "Binding of COSMAC (by buffi)(2016).sc8",
    "sha1": "681eaf2c6422cdd0e0ca0cf9f4c3a436b7b6f292",
    "platform": "schip",
    "title": "Binding of COSMAC",
    "release": "2016",
    "authors": ["buffi"]
  },
  {
    "file": "Black Lives Matter demo (Ben Smith)(2020).ch8",
    "sha1": "f23ee6f22c3ada8c638096ec1209a65dd036cc52",
    "platform": "chip8",
    "title": "Black Lives Matter demo",
    "release": "2020",
    "authors": ["Ben Smith"]
  },
  {
    "file": "Blinky (by Hans Christian Egeberg)(1991).sc8",
    "sha1": "5b733a60e7208f6aa0d15c99390ce4f670b2b886",
    "platform": "schip",
    "title": "Blinky",
    "release": "1991",
    "authors": ["Hans Christian Egeberg"],
    "description": "Blinky V2.00: Pac Man game for SCHIP V1.0 or newer.\nFrom: egeberg@solan.unit.no (Hans Christian Egeberg)\n\nThis program is for use with Super Chip-48 V1.0 or newer.\nIn order to run, put downloaded binary string on stack, and start SCHIP.\n\nBlinky has two lives. Finishing a screen increases the intelligence\nof Packlett and Heward, the two ghosts. The game is at its most difficult\non the fourth screen. The maze contains one gateway from left to right,\nand four energy pills, near the corners. Points are awarded for each pill,\neach energy pill, catching Packlett, catching Heward, and finishing a maze.\n\nMy personal highscore is 1575 so far, but I am just a programmer.\nMy not so little sister helped me debug, and reached 2005 in two days.\n\n"
  },
  {
    "file": "Blinky (fix)[Hans Christian Egeberg, 1991].ch8",
    "sha1": "5370ecf9ae444c71b63dab9b1f9968a4fe67c9dd",
    "platform": "chip8",
    "title": "Blinky",
    "authors": ["Hans Christian Egeberg"],
    "description": "This version does not have the Fx55/Fx65 (load_store_quirk) or shift issue (where map is rendered \nimproperly and it freezes when you hit a wall)\n\n\n\nThis game is a PACMAN clone. \nYour goal is to eat all the balls in the maze. There are some enemies, so be careful. \n\nUse 2, 4, 6 and 8 to move.\n"
  },
  {
    "file": "Blitz (fix) (by David Winter).ch8",
    "sha1": "a3b80d4a9efa8e7700d348d3e3ddf81d3c7e92a9",
    "platform": "chip8",
    "title": "Blitz",
    "authors": ["David Winter"],
    "description": "Blitz, by: David Winter\n\nThis game is a BOMBER clone. You are in a plane, and you must destroy the towers of a town. Your plane is flying left to right, and goes down. Use 5 to drop a bomb. The game ends when you crash yourself on a tower...\n\n"
  },
  {
    "file": "Bongocat (Andrew James)(2021).ch8",
    "sha1": "f199e23cbe29bb36f43373818b10bf72b35e9d05",
    "platform": "chip8",
    "title": "Bongocat",
    "release": "2021",
    "authors": ["Andrew James"]
  },
  {
    "file": "Boot Super Chip8x (by Ersanio)(2018).ch8",
    "sha1": "11d66c2ff456ca3aea5f384a5a11503a6c8f85ed",
    "platform": "chip8",
    "title": "Boot Super Chip8x",
    "release": "2018",
    "authors": ["Ersanio"]
  },
  {
    "file": "Bounce (by Les Harris)(20xx).sc8",
    "sha1": "ff5276bfd203634ef3034475ff7bc8bd9033a03d",
    "platform": "schip",
    "title": "Bounce",
    "release": "20xx",
    "authors": ["Les Harris"]
  },
  {
    "file": "Br8kout (by SharpenedSpoon)(2014).ch8",
    "sha1": "c9a13c00d8391f352488661fc3b15217f0e8d9fd",
    "platform": "chip8",
    "title": "Br8kout",
    "release": "2014",
    "authors": ["SharpenedSpoon"],
    "description": "\nBr8kout - by SharpenedSpoon (2014)\n----------------------------------\nOcto-Jam 1\n\n\nYou can't even imagine how amazing this breakout clone is!\n\nWONDER as you watch a ball bounce back and forth\n\nAMAZE at the pixel perfect collision detection\n\nDIE when your ball reaches the bottom of the screen\n\nLAUGH when you inevitably discover bugs in the game\n\nMOVE your paddle with \"7\" and \"9\"\n\n\n"
  },
  {
    "file": "Breakfree (by David Winter).ch8",
    "sha1": "7d38669b1542d2352b900eed11b78dd1c8d144ec",
    "platform": "chip8",
    "title": "Breakfree",
    "authors": ["David Winter"],
    "description": "\nBreakfree - by David Winter (199x)\n----------------------------------\n\nEach players needs to destroy the player's wall. The first player to destroy\nall the bricks of the opposite player wins. \n\nPlayer 1: 1 to go UP and 4 to go DOWN.\nPlayer 2: 6 to go UP and 9 to go DOWN.\n\n"
  },
  {
    "file": "Breakout (by Carmelo Cortez0(1979).ch8",
    "sha1": "193915dcde1365ae054c4eaa21a35baa27cd3356",
    "platform": "chip8",
    "title": "Breakout",
    "authors": ["Carmelo Cortez0(1979"],
    "description": "Breakout, by: Carmelo Cortez\n\nThe game, Breakout, is a variation of the Wipe-Off game.\nYou have six walls and 20 balls to start. To win you must get through all walls to the top of the screen. At the end of the game the program will show the number of times you hit the walls and will show \"FREE!\" if you get through."
  },
  {
    "file": "Brick Breaker (by Kyle Saburao)(2019).ch8",
    "sha1": "b92ffba5ccd708c0422d77b9af63ca4b2f67b443",
    "platform": "chip8",
    "title": "Brick Breaker",
    "release": "2019",
    "authors": ["Kyle Saburao"],
    "description": "\nBrick Breaker - by Kyle Saburao (2019)\n--------------------------------------\nTeam CHIPOTLE - https://chip.netlify.app/emulator/\n\n\nBrick Breaker, now avaliable for the CHIP-8!\n\n\nControls:\n---------\n\n\"7\" = LEFT\n\"9\" = RIGHT\n\n\n\n"
  },
  {
    "file": "Bull8 H3ll (Flamore)(2020).sc8",
    "sha1": "7851dd47c67217426f31b27778b19d39407a9bf2",
    "platform": "schip",
    "title": "Bull8 H3ll",
    "release": "2020",
    "authors": ["Flamore"],
    "description": "\nBull8 H3ll\n==========\nby Flamore (Octojam 7)\n\n\nAbout:\n------\nHow long can  you last?\n\n\nControls:\n---------\nUse \"5/7/8/9\" to move.\n\n"
  },
  {
    "file": "Bullet Patterns (by buffi)(2015).ch8",
    "sha1": "f84ad99d0095ef1281b55c779783b99cb53d2ade",
    "platform": "chip8",
    "title": "Bullet Patterns",
    "release": "2015",
    "authors": ["buffi"]
  },
  {
    "file": "Bustin (by Tom Rintjema)(2019).xo8",
    "sha1": "e2d86d6c70877e99ed4253c9a83d4da42e5a14ee",
    "platform": "xochip",
    "title": "Bustin",
    "release": "2019",
    "authors": ["Tom Rintjema"]
  },
  {
    "file": "By the Moon (SystemLogoff)(2019).sc8",
    "sha1": "17d775833f073be77f2834751523996e0a398edd",
    "platform": "schip",
    "title": "By the Moon",
    "release": "2019",
    "authors": ["SystemLogoff"]
  },
  {
    "file": "C-Tetris (by Klaus von Sengbusch )(1994).sc8",
    "sha1": "244c746b4f81c9c3df9cea69389387da67589bb8",
    "platform": "schip",
    "title": "C-Tetris",
    "release": "1994",
    "authors": ["Klaus von Sengbusch"]
  },
  {
    "file": "C-Zero (by Ethan Pini)(2019).ch8",
    "sha1": "eb548f0a0ceca4da0475112ab14e223a63350c89",
    "platform": "chip8",
    "title": "C-Zero",
    "release": "2019",
    "authors": ["Ethan Pini"],
    "description": "\nC-Zero - by Ethan Pini (2019)\n-----------------------------\nTeam CHIPOTLE - https://chip.netlify.app/emulator/\n\n\nA racing game inspired by Chris Covell's tribute to the iconic Nintendo franchise. \n\n\nControls:\n---------\n\"5\" = DRIVE\n\"7\" = LEFT \n\"9\" = BRAKE  \n\"8\" = RIGHT \n\n\n"
  },
  {
    "file": "CHIP-8 Snake.xo8",
    "sha1": "b05dfd6bc0dca5106fb51ebc185406d633c96b44",
    "platform": "xochip",
    "title": "CHIP-8 Snake",
    "description": "\nCHIP-8 Snake\n============\nby steveRoll (Octojam 7)\n\n\nAbout:\n------\nA snake game made for the CHIP-8. Due to technical restrictions, you can achieve a maximum score of 125.\n\n\nControls:\n---------\n2, 4, 6, 8 to move, F to restart.\n(arrow keys to move, r to restart)"
  },
  {
    "file": "Car Race (by Klaus von Sengbusch)(1994).sc8",
    "sha1": "2cd26a9a84ed2be6aaa6916d49b2e5c503196400",
    "platform": "schip",
    "title": "Car Race",
    "release": "1994",
    "authors": ["Klaus von Sengbusch"],
    "description": "Car, by: Klaus von Sengbusch\n\nAnd here is another game.\nIs is quite simple. You just have to drive a car through a scrolling road and\nprevent being hit by other cars. \nOne big advantage for those HP48G Users with 32K memory: IT IS VERY SMALL!!!!!\n\nThe Keys:\n    1: left\n    2: right\n\n\n"
  },
  {
    "file": "Car Race Demo (by Erik Bryntse)(1991).sc8",
    "sha1": "e6d4a8598999b3d95047babf67b529d83eaa9554",
    "platform": "schip",
    "title": "Car Race Demo",
    "release": "1991",
    "authors": ["Erik Bryntse"],
    "description": "Car Race Demo, by: Erik Bryntse\n\nWhen I added the extra scroll functions to v1.1, I couldn't resist writing\na car race. It lets you drive your car on a small forest road in high speed.\nUse 1 and 2 to steer it. \n"
  },
  {
    "file": "Cavern (by Matthew Mikolay)(2014).ch8",
    "sha1": "17238bcd1cb8e21142a1d7533f878c833ef19caa",
    "platform": "chip8",
    "title": "Cavern",
    "release": "2014",
    "authors": ["Matthew Mikolay"],
    "description": "\nCavern - by Matthew Mikolay (2014)\n----------------------------------\n\nHello all!\n\nI recently finished a new game implemented in CHIP8. It's called Cavern, and is conceptually based \nupon the CHIP8 game Cave.\n\nCavern allows the player to select one of three speeds for gameplay, though the easiest setting is \nstill pretty challenging. I suppose Cavern could be considered a game suitable for individuals who \nfound Cave too easy.\n\nThe in-game controls are 2, 4, 6, and 8 to move the sprite on screen.\n\nI've attached the .ch8 file for anyone interested in playing. It has been tested on the Emma emulator. \nIf anybody comes across any bugs, please let me know!\n\nBest,\nMatt\n\n----------------------------------------------------------\n\nEscape the cave without crashing into the walls!\n\n\nNavigate using the '2', '4', '6', and '8' keys.\n\n----------------------------------------------------------\n"
  },
  {
    "file": "Chesmac (by Raimo Suonio)(1979).ch8",
    "sha1": "40c33f5ae6f11def69a445220b3c96a6009f92ed",
    "platform": "chip8",
    "title": "Chesmac",
    "release": "1979",
    "authors": ["Raimo Suonio"]
  },
  {
    "file": "Chicken Scratch (John Earnest)(2020).xo8",
    "sha1": "2cc98ab06cd250960118585971e842b56af3085e",
    "platform": "xochip",
    "title": "Chicken Scratch",
    "release": "2020",
    "authors": ["John Earnest"],
    "description": "\nChicken Scratch\n===============\nby John Earnest (Octojam 7)\n\n\nAbout:\n------\nYou're a chicken. You want to eat bugs. How fast can you get 'em?\n\n\nControls:\n---------\n* Use \"5/7/8/9\" to run. Press and hold to dash, which is only slightly faster than running.\n* Press \"6\" to peck at bugs. (or dirt. or small rocks. you can peck at anything, really.)\n* Press \"4\" to use echolocation (an ability chickens have) to find distant bugs.\n"
  },
  {
    "file": "Chip War (by John Earnest)(2014).ch8",
    "sha1": "acfd0d29a83882de19dc37a56ee6c7d63ac309c4",
    "platform": "chip8",
    "title": "Chip War",
    "release": "2014",
    "authors": ["John Earnest"],
    "description": "\nChip War - by John Earnest (2014)\n---------------------------------\n\nA (loose) adaptation of the classic DiceWars.\n\n\nThis game takes place on a toroidal field of 16 territories. Each has some number of troops \nstationed there (1-5). At the beginning of the game, territories are divided between you \n(white) and an AI opponent (black).\n\nYou can order your territories to attack adjacent enemy territories provided you have more \nthan one troop available. When you attack, a number of 8-sided dice will be rolled and summed \nbased on the number of attackers and defenders. If the attackers win, they capture the \nterritory and transfer all but one of their troops over. If the defenders win, they destroy \nall but one of the attackers and lose one troop, or none if they have only a single troop.\n\nAfter white has taken a turn, each territory has a 50% chance of producing one new troop. \nThe game ends when black or white has conquered the entire map.\n\nWhen selecting a territory, 5/7/8/9 (ASWD) move your cursor, 6 (E) selects the territory \nand 4 (Q) ends your turn. With a territory selected, 5/7/8/9 (ASWD) choose the direction in \nwhich to attack, 6 (E) confirms the attack and 4 (Q) cancels. When the game is over press \nany key to play again.\n\n"
  },
  {
    "file": "Chip-8 Calculator.xo8",
    "sha1": "66d44799bc15637f742cf30d84007f412a9c9fb5",
    "platform": "xochip",
    "title": "Chip-8 Calculator",
    "description": "A 16-bit hexadecimal Reverse Polish Notation calculator.\nThis calculator uses Reverse Polish Notation, which means that you enter operands before the operator that uses them. \nFor example, if you wanted to add 4 and 8, you would first input the number 4, then input the number 8, then the operator +.\n\nOnce you've input one number, you can input another by pressing A on the keypad (Z on a QWERTY keyboard), or delete it \nwith 0 (X on QWERTY).  The 4x4 operator grid on screen corresponds directly to the layout of the keypad. Numeric input \nis always a 16-bit hexadecimal integer. You can store up to four values at a time. Try to add another one beyond that, \nand the program crashes and runs the buzzer until you restart the emulator.\n\nLegend\n\n    +: Adds the bottom two values of the stack\n    -: Subtracts the bottom value from the value above\n    ×: Multiplies the bottom two values of the stack*\n    ÷: Divides the second-from-bottom value by the bottom value*\n    S: Computes the sine of the bottom value of the stack*\n    C: Computes the cosine of the bottom value of the stack*\n    T: Computes the tangent of the bottom value of the stack*\n    √: Computes the square root of the bottom value of the stack\n    S⁻¹: Computes the inverse sine of the bottom value of the stack\n    C⁻¹: Computes the inverse cosine of the bottom value of the stack\n    T⁻¹: Computes the inverse tangent of the bottom value of the stack\n    🗘: Swaps the bottom two values of the stack\n    #: Add a value to the bottom of the stack\n    ⌫: Remove a value from the bottom of the stack\n    <<: Shift the bottom value of the stack one bit to the left\n    >>: Shift the bottom value of the stack one bit to the right\n\n*These functions require one or more inputs to be only 8 bits, so if the input value is >0xFF it gets shifted 8 bits to \nthe right.\n\n"
  },
  {
    "file": "Chip-8 Dino (by Anthony Pham)(2019).ch8",
    "sha1": "417ba551bc92751d3e0dc25e01e76373d0e504ea",
    "platform": "chip8",
    "title": "Chip-8 Dino",
    "release": "2019",
    "authors": ["Anthony Pham"]
  },
  {
    "file": "Chip-8 Snake (steveRoll)(2020).ch8",
    "sha1": "27868be46213718792ab3b8415855a1975366dbe",
    "platform": "chip8",
    "title": "Chip-8 Snake",
    "release": "2020",
    "authors": ["steveRoll"]
  },
  {
    "file": "Chip-84 3D Title (by Christian Kosman)(2018).sc8",
    "sha1": "f55ab7c3776fd9a94ffac82f0feb965e93c057f1",
    "platform": "schip",
    "title": "Chip-84 3D Title",
    "release": "2018",
    "authors": ["Christian Kosman"]
  },
  {
    "file": "Chip-84 Scratch (by Christian Kosman)(2018).sc8",
    "sha1": "ebada8eb97ce40a91554386696f7daa33023cc8c",
    "platform": "schip",
    "title": "Chip-84 Scratch",
    "release": "2018",
    "authors": ["Christian Kosman"]
  },
  {
    "file": "Chip-Chess (Thom Laurence)(2020).ch8",
    "sha1": "b4be55185804a19d7d46c4b340531ecf1fc2abc5",
    "platform": "chip8",
    "title": "Chip-Chess",
    "release": "2020",
    "authors": ["Thom Laurence"]
  },
  {
    "file": "Chip-Otto logo 1 (by Marco Varesio)(2015).ch8",
    "sha1": "c617cd419bb3b51c2224b247782d73c46bc075c8",
    "platform": "chip8",
    "title": "Chip-Otto logo 1",
    "release": "2015",
    "authors": ["Marco Varesio"]
  },
  {
    "file": "Chip-Otto logo 2 (by Marco Varesio)(2015).ch8",
    "sha1": "5a183cc0530410c0887175ccaf6d5d4deb5d8fff",
    "platform": "chip8",
    "title": "Chip-Otto logo 2",
    "release": "2015",
    "authors": ["Marco Varesio"]
  },
  {
    "file": "Chip2048 (by Lime)(2014).ch8",
    "sha1": "4ac6414b1fd502074a6aab4de4b206a7273dcfb8",
    "platform": "chip8",
    "title": "Chip2048",
    "release": "2014",
    "authors": ["Lime"],
    "description": "\nChip2048 - by Lime (2014)\n-------------------------\n\n5/7/8/9 (WASD) tilts the board as usual, 1 starts a new game. \n\n\n"
  },
  {
    "file": "Chip8-Multiply (by John Deeny)(2016).xo8",
    "sha1": "0317e94014ebc3a9a1a2a33c46bc766a9cf44cb0",
    "platform": "xochip",
    "title": "Chip8-Multiply",
    "release": "2016",
    "authors": ["John Deeny"]
  },
  {
    "file": "Chip8stein 3D (demo).ch8",
    "sha1": "20c2b4baf40c2c30c7db91107d4b5af980626f1c",
    "platform": "chip8",
    "title": "Chip8stein 3D"
  },
  {
    "file": "ChipMark'77 (by John Deeny)(2016).sc8",
    "sha1": "dbb5b085117d513f1ce403959d7136b767bb3dd3",
    "platform": "schip",
    "title": "ChipMark'77",
    "release": "2016",
    "authors": ["John Deeny"]
  },
  {
    "file": "Chipolarium.ch8",
    "sha1": "ce7a5355d90c4aabe0d96c5add93f4efb21f099b",
    "platform": "chip8",
    "title": "Chipolarium",
    "description": "Draw a single stroke, flip tiles from black to white or vice versa, and turn each single line into a solid \ncolor each.\n\nA Polarium demake for HP 48 graphing calculators, implemented in Octo for SUPER-CHIP.\n\nInstructions on how to load and run this program on your own HP 48 calculator\nGameplay\n\nChipolarium is a puzzle game with 100 levels, where the goal for each level is to flip black and white tiles \nso each row is a single color, by drawing a connected stroke through all tiles to flip.\nControls\n\nThe controls will vary depending on whether you're running in your browser, on an actual HP 48 calculator, \nor in a general CHIP-8/SUPER-CHIP emulator/interpreter.\n\n\n\t                      | Web / Octo\t      | HP 48 \t | CHIP-8  |\n---------------------------------------------------------------------------- \nMove\t                      | W A S D or arrow keys |\t5 1 2 3  | 5 7 8 9 |\nSelect, draw/finish stroke    | E, Space or Return    | 6 \t | 6       |\nReturn to menu, cancel stroke | Q or Escape \t      | 4\t | 4       |\nShow hint\t              | H\t              | SPC\t | B       |\n----------------------------------------------------------------------------\n\n"
  },
  {
    "file": "Ckosmic (by Christian Kosman)(2018).ch8",
    "sha1": "69956a514173f08926e7f4388c8c8fc6b5b465a1",
    "platform": "chip8",
    "title": "Ckosmic",
    "release": "2018",
    "authors": ["Christian Kosman"]
  },
  {
    "file": "Classic Snek (Andrew James)(2021).ch8",
    "sha1": "4a68389601eafe3adf014576681eb30232acdac9",
    "platform": "chip8",
    "title": "Classic Snek",
    "release": "2021",
    "authors": ["Andrew James"],
    "description": "Classic Snek by Andrew James (2021)\n-----------------------------------\nChip-8 Game\n\nAn basic interpretation\nof the perennial classic, Snake.\n\nThis game will likely crash after\ncollecting ~128 apples as we run out of\nstack space for the snake data.\n\n\nControls:\n---------\n2 = Up\n4 = Left\n6 = Right\n8 = Down"
  },
  {
    "file": "Climax Slideshow - Part 1 (by Revival Studios)(2008).sc8",
    "sha1": "9d9f88509b5033152b7b49d2c7ea3c3c5fce2bd6",
    "platform": "schip",
    "title": "Climax Slideshow - Part 1",
    "release": "2008",
    "authors": ["Revival Studios"],
    "description": "-----------------------------------------------------------------------------\n\t\t\t      /////////////////\n\t                      //////////////////\n        \t              ////          ////\n\t               \t      ////   ///////////\n\t                      ////  ///////////\n                              ////  ////\n                              ////  ///////////\n                              ////   //////////\n  \t     \t   \t\n  \t\t\t   www.revival-studios.com\n-----------------------------------------------------------------------------\nTitle\t\t:\tClimax Slideshow\nAuthor\t\t:\tMartijn Wenting / Revival Studios\n\t\t\tGraphics by: Menno Seegers\nGenre\t\t:\tDemo/Slideshow\nSystem\t\t:\tSuperChip8\nDate\t\t:\t14/05/2008\nProduct ID\t:\tRS-C8002\n-----------------------------------------------------------------------------\n\nAll the contents of this package are (c)Copyright 2008 Revival Studios.\n\nThe contents of the package may only be spread in its original form, and may not be\npublished or distributed otherwise without the written permission of the authors.\n\nDescription:\n------------\nThe Climax Slideshow is a slideshow for the SuperChip8 system. \nIt includes 6 different images drawn by a good friend of mine: Menno Seegers.\nI've adapted the images to work on a monochrome display and added the titlescreen.\nDue to the romsize limitation of 3.5kb, the slideshow is split into two parts.\n\nRunning the slideshow:\n----------------------\nUse the Megachip emulator or any other SuperChip compatible emulator to run the slideshow.\n\nCredits:\n--------\nProgramming and Logo by: Martijn Wenting\nGraphics by: Menno Seegers\n\nDistribution:\n-------------\nThis package can be freely distributed in its original form.\nIf you would like to include this slideshow in your rom package, please let me know.\n\nWatch out for more releases soon!\n\n\n\tMartijn Wenting / Revival Studios\n\n"
  },
  {
    "file": "Climax Slideshow - Part 2 (by Revival Studios)(2008).sc8",
    "sha1": "6bb78d8a0aba93ea18eabdd0134cbdccd1dc2d16",
    "platform": "schip",
    "title": "Climax Slideshow - Part 2",
    "release": "2008",
    "authors": ["Revival Studios"],
    "description": "-----------------------------------------------------------------------------\n\t\t\t      /////////////////\n\t                      //////////////////\n        \t              ////          ////\n\t               \t      ////   ///////////\n\t                      ////  ///////////\n                              ////  ////\n                              ////  ///////////\n                              ////   //////////\n  \t     \t   \t\n  \t\t\t   www.revival-studios.com\n-----------------------------------------------------------------------------\nTitle\t\t:\tClimax Slideshow\nAuthor\t\t:\tMartijn Wenting / Revival Studios\n\t\t\tGraphics by: Menno Seegers\nGenre\t\t:\tDemo/Slideshow\nSystem\t\t:\tSuperChip8\nDate\t\t:\t14/05/2008\nProduct ID\t:\tRS-C8002\n-----------------------------------------------------------------------------\n\nAll the contents of this package are (c)Copyright 2008 Revival Studios.\n\nThe contents of the package may only be spread in its original form, and may not be\npublished or distributed otherwise without the written permission of the authors.\n\nDescription:\n------------\nThe Climax Slideshow is a slideshow for the SuperChip8 system. \nIt includes 6 different images drawn by a good friend of mine: Menno Seegers.\nI've adapted the images to work on a monochrome display and added the titlescreen.\nDue to the romsize limitation of 3.5kb, the slideshow is split into two parts.\n\nRunning the slideshow:\n----------------------\nUse the Megachip emulator or any other SuperChip compatible emulator to run the slideshow.\n\nCredits:\n--------\nProgramming and Logo by: Martijn Wenting\nGraphics by: Menno Seegers\n\nDistribution:\n-------------\nThis package can be freely distributed in its original form.\nIf you would like to include this slideshow in your rom package, please let me know.\n\nWatch out for more releases soon!\n\n\n\tMartijn Wenting / Revival Studios\n\n"
  },
  {
    "file": "Clostro (jibbl)(2020).ch8",
    "sha1": "89929eb46c0682caad909d30561a934f28941963",
    "platform": "chip8",
    "title": "Clostro",
    "release": "2020",
    "authors": ["jibbl"],
    "description": "\nClostro\n=======\nby jibbl (Octojam 7)\n\n\nAbout:\n------\nClostro, a Jezzball clone. Can you make it through all 8 levels and see the ending?\n\n\nControls:\n---------\n\"5/7/8/9\" = move the crosshair up/down/left/right\n\n\"4\" = draw a vertical line\n\n\"6\" = draw a horizontal line\n\n55887979 = Cheat Code (up, Up, Down, Down, Left, Right, Left, Right)\n\n\n"
  },
  {
    "file": "Codegrid (by Xikka)(2015).sc8",
    "sha1": "f56134c8196fdff347264a985add4d2648bac76a",
    "platform": "schip",
    "title": "Codegrid",
    "release": "2015",
    "authors": ["Xikka"],
    "images": ["CODEGRID.png"]
  },
  {
    "file": "Computer (John Earnest)(2014).ch8",
    "sha1": "5303be6c79bff9426b2f4b1fa9af1f4a5bbcd525",
    "platform": "chip8",
    "title": "Computer",
    "release": "2014",
    "authors": ["John Earnest"]
  },
  {
    "file": "Computer Simulator.xo8",
    "sha1": "46b281516a3e9d1526bea224b79cc18ddd71833d",
    "platform": "xochip",
    "title": "Computer Simulator",
    "description": "Click upon the game and press a button on your Chip-8 keyboard to hear beeps and bloops.\n\nIf you don't have a Chip-8 keyboard then try 1 2 3 4 q w e r a s d f z x c v.\n\n"
  },
  {
    "file": "Connect 4 (fix)[David Winter].ch8",
    "sha1": "c8d2ebbc16551a4bee1f0e2b33f0510e4170afcf",
    "platform": "chip8",
    "title": "Connect 4",
    "authors": ["David Winter"],
    "description": "This version does not have the Fx55/Fx65 (load_store_quirk) issue (where game pieces overwrite each other and only stack diagonally)\n\n\n\n\nConnect 4, by: David Winter\n\nThis game is for two players. The goal is to align 4 coins in the\ngame area. Each player's coins are colored. When you drop a coin,\nit is paced on the latest dropped coin in the same column, or at\nthe bottom if the column is empty. Once the column is full, you\ncannot place any more coins in it. To select a column, use 4 and 6.\n\nTo drop a coin, use 5. There is no winner detection yet. This will\nbe soon avalaible (Hey! I don't spend my life on CHIP8 !).\n"
  },
  {
    "file": "Cool 3D Spinning Octo.xo8",
    "sha1": "852f506c6a56bd9f59592c4a1cb5a0aaaf31381c",
    "platform": "xochip",
    "title": "Cool 3D Spinning Octo",
    "description": "Watch the 3D rendered octopus spin!\n\n    That's it."
  },
  {
    "file": "Corners Game (by Kyle Saburao)(2019).ch8",
    "sha1": "29bc3a658b1607b6458571d5fe99f495306a6a4f",
    "platform": "chip8",
    "title": "Corners Game",
    "release": "2019",
    "authors": ["Kyle Saburao"],
    "description": "\nCorners Game - by Kyle Saburao (2019)\n-------------------------------------\nTeam CHIPOTLE - https://chip.netlify.app/emulator/\n\n\nThe bouncing logo of a popular disc-shaped video storage medium... but this \ntime, it's a game.\n\n\nControls:\n---------\n\"1\" = LEFT\n\"2\" = RIGHT \n\n\n"
  },
  {
    "file": "Crack Me (by Pawel Lukasik)(2017).ch8",
    "sha1": "788661c6a49c4e081492416bf2ce86342116bb1d",
    "platform": "chip8",
    "title": "Crack Me",
    "release": "2017",
    "authors": ["Pawel Lukasik"],
    "description": "MISSION 019            goo.gl/56PLi4               DIFFICULTY: ███████░░░ [7/10]\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n1337,\n\nWhat the hack is going on?! Where have you been?! HQ are really mad at you.\nBy the way we have lost a contact with our last operational resource on foreign\nsoil. Our SAR team is waiting for a green light to launch a MEDEVAC operation.\nBut we have no clue where he is.\n\nThis is your task.\n\nYou have to track the place of his residence. This is CHIP-8 ROM image that the\nhandler was given during last contact meeting.\n\n  goo.gl/hKgTpX\n\nRemember, failure is not an option. We don't want international scandal and SOFs\ninvolved.\n\nGood luck!\n\nOver and out.\n\n--\nP.S. Burn after read.\nP.S.2. I'll show/explain the solution in a video in one or two weeks.\nP.S.3. This mission was brought to you by foxtrot_charlie!\nP.S.4. In the final phase use a string, not a number. Try different offsets.\nP.S.5. The above remark is pretty cryptic... :)\n"
  },
  {
    "file": "D8GN (SystemLogoff)(2020).xo8",
    "sha1": "8198311054b6cd440dde42d6efed0eda1b1e461d",
    "platform": "xochip",
    "title": "D8GN",
    "release": "2020",
    "authors": ["SystemLogoff"],
    "description": "\nD8GN\n====\nby SystemLogoff (Octojam 7)\n\n\nAbout:\n------\nD8GN (Pronounced *like* D8ungeon) is a demake of the famous Dicey Dungeons for the elderly Chip8 console.\n\n\nControls:\n---------\n* 5/7/8/9 = ARROW \n  - Move\n  - Select Cards\n\n* 6 = Confirm / Continue Text\n    \n\n\n   "
  },
  {
    "file": "Danm8ku (by buffis)(2015).ch8",
    "sha1": "b8be39922f38d0160e257de75899119dc5137e6e",
    "platform": "chip8",
    "title": "Danm8ku",
    "release": "2015",
    "authors": ["buffis"],
    "description": "\nDanm8ku - by buffis (2015)\n--------------------------\n\nBullet hell for the Chip-8! \nSurvive 8 waves of exciting bullet patterns!\n\n\nControls:\n---------\n5 = Up\n7 = Left\n8 = Down\n9 = Right"
  },
  {
    "file": "Death Star vs Yoda (fix)(by TodPunk)(2018).ch8",
    "sha1": "d54aaedefbf74f56b7446a5108885ddc33fb6fa1",
    "platform": "chip8",
    "title": "Death Star vs Yoda",
    "release": "2018",
    "authors": ["TodPunk"],
    "description": "Changed JP @288 from. JP 298 to JP288 so the 'game' just loops when you hit the target instead of \ncrashing. Still other problems here as it doesn't initiate all registers so a startup with anything \nelse than 0 in RAM will not work same goes for a reset.\n\n\n\n\nDeath Star vs Yoda - by TodPunk (2018)\n--------------------------------------\nNo really, this is not a very compelling game. Made by groupthink of people that have no idea what \nthey're doing. Think 10,000 monkeys on typewriters.\n\nDeath Star and Yoda copyright Somebody Else. Apologies to the Internet.\n\n\nControls:\n---------\nWASD to move\nE to fire\n\n\nhttp://www.awfuljams.com/octojam-v/games/death-star-vs-yoda\n\n"
  },
  {
    "file": "Ded-Lok (by ParityB1t)(2016).ch8",
    "sha1": "09d8e40f143f808ff379f04a473f58cbba5f3838",
    "platform": "chip8",
    "title": "Ded-Lok",
    "release": "2016",
    "authors": ["ParityB1t"],
    "description": "\nDed-Lok - by ParityB1t (2016)\n-----------------------------\n\nDodge enemy arrows!\n\nShooting a lot of arrows creates an 'arrow forest' making it hard to estimate \nenemy position, so be vigilant! ( Doesn't apply to enemy :D )\n\n\nControls:\n---------\n'7' and '9' to move left and right.\n'5' to shoot\n\nPress '6' to reset once the game is over.\n"
  },
  {
    "file": "Ded-Lok (by parityb1t)(2015).sc8",
    "sha1": "044021b046cf207c0b555ea884d61a726f7a3c22",
    "platform": "schip",
    "title": "Ded-Lok",
    "release": "2015",
    "authors": ["parityb1t"]
  },
  {
    "file": "Deep8 (by John Earnest)(2014).ch8",
    "sha1": "b41cc0b5b2faabafd532d705b804abb3e8f97baf",
    "platform": "chip8",
    "title": "Deep8",
    "release": "2014",
    "authors": ["John Earnest"],
    "description": "\nDeep8 - by John Earnest (2014)\n------------------------------\n\nA stripped down port of the Mako game \"Deep\" for Chip8. Move your boat \nleft and right with A/D. Press S to drop a bomb and release S to detonate \nit. Destroy incoming squid before they tip your boat!\n\nThis game was one of the earliest programs written using Octo.\n\n\n\n"
  },
  {
    "file": "Deflap (fix)(by hitcherland)(2015).ch8",
    "sha1": "96c0ae3b45839a570d180760835ceab9ed503fd0",
    "platform": "chip8",
    "title": "Deflap",
    "release": "2015",
    "authors": ["hitcherland"],
    "description": "\nDeflap (fix) - by hitcherland (2015)\n------------------------------------\n\nAnother Flappy Bird clone. \n\n\nControls (hexpad):\n------------------\n\"B\" = Jump (or flap)\n\n\nFIX: The author made a mistake by displaying \"Jump=C\" but in reality,\n     it is actually the \"B\" button and not \"C\" as the \"C\" button is\n     for the Octo assembler. Now it displays \"Jump=b\" (sprite fix).\n     Sprite fix by Sly DC.\n"
  },
  {
    "file": "Demo-Poo (Juraj Borza)(2020).ch8",
    "sha1": "9ffb063f600f670b682bf6a010292d5aa0a67efd",
    "platform": "chip8",
    "title": "Demo-Poo",
    "release": "2020",
    "authors": ["Juraj Borza"]
  },
  {
    "file": "Dig Site 8 (by taqueso)(2018).xo8",
    "sha1": "0dc782f0607d34b8355c150e81bc280de7472d94",
    "platform": "xochip",
    "title": "Dig Site 8",
    "release": "2018",
    "authors": ["taqueso"]
  },
  {
    "file": "Display Numbers (by Michael Wales)(2018).ch8",
    "sha1": "9ddbccdef6b5d4b9740103ce79d19607e0b785a1",
    "platform": "chip8",
    "title": "Display Numbers",
    "release": "2018",
    "authors": ["Michael Wales"]
  },
  {
    "file": "Dogfight (by Jef Winsor)(1980).ch8",
    "sha1": "238e6fb829b03522d60568cac3d8f00de4a53bcf",
    "platform": "chip8",
    "title": "Dogfight",
    "release": "1980",
    "authors": ["Jef Winsor"],
    "description": "Same game as the VIP Dogfight game with keys:\nkey     Direction of your plane\n2:       Up\n8:       Down\n4:       left\n6:       right\n\nPress 5 to fire.\n\nThe Dog fight.hex and Dog fight.bin files include:\n000 - 1FF Elf II Chip 8 Interpreter (part 1)\n200 - 5FF Dog Fight chip 8 code, start from giantboard with 00-IN, 00-IN, 00-IN, IN\n600 - DFF Probably data that happened to be in memory at time of 'save'\nE00 - E6D Elf II Chip 8 Interpreter (part 2)\nF00 - FFF Used for screen memory so code/data in file is never used\n"
  },
  {
    "file": "Dot-Dash (by Tom Chen)(1978).ch8",
    "sha1": "0ce13060abe94e2b73404fc78186b786121ddeeb",
    "platform": "chip8",
    "title": "Dot-Dash",
    "release": "1978",
    "authors": ["Tom Chen"],
    "description": "Simple game with the aim to get the flashing dot to the right of the screen as fast as possible. When you hit any wall the game is over. Move the dot with keys:\n\n2: Up\n8: Down\n4: left\n6: right\n\nThe dot will speed up automatically but you can slow it down by pressing key 0.\nThis is a chip 8 based game.\n\nThe Dot-dash.hex and Dot-dash.bin files include:\n000 - 1FF Elf II Chip 8 Interpreter (part 1)\n200 - 2FF Dot-dash chip 8 code, start from giantboard with 00-IN, 00-IN, 00-IN, IN\n300 - 385 Maze editor, start from giantboard with 00-IN, 03-IN, 00-IN, IN, then give screen start address; like 04-IN 00-IN. A 8 dot bar will flah on screen type any byte followed by IN to edit that part of the screen/memory. After this the bar will move one byte up.\n400 - 4FF Dot-dash 'maze'\n500 - 6FF Second copy of chip 8 interpreter (part 1), not sure why this is here\n700 - DFF Probably data that happened to be in memory at time of 'save', 900-AFF looks like some graphic data.\nE00 - E6D Elf II Chip 8 Interpreter (part 2)\nF00 - FFF Used for screen memory so code/data in file is never used\n"
  },
  {
    "file": "Down8 (by this is not a team)(2015).ch8",
    "sha1": "75fac059356e7f47c7ac27afb8523162a9ffa2b5",
    "platform": "chip8",
    "title": "Down8",
    "release": "2015",
    "authors": ["this is not a team"],
    "description": "\nDown8 - by this is not a team (2015)\n------------------------------------\n\nYou fall down an endless hole and then you die!\n\n\nIt's downwell, but on the chip-8! Instructions are explained in game.\n\nYou can press [E/F] to skip to the hardest level first.\n\nThere was an ending planned, but...\n\nyou know how it is."
  },
  {
    "file": "Drag Chip-8 Games Here intro (by Andreas Van Vooren)(2016).ch8",
    "sha1": "a804e02641ef61a720d4f0056eca4af0ea453fa3",
    "platform": "chip8",
    "title": "Drag Chip-8 Games Here intro",
    "release": "2016",
    "authors": ["Andreas Van Vooren"]
  },
  {
    "file": "Drag RAM (ChaseParate)(2020).ch8",
    "sha1": "8713062b1983c26090b742a9ffc30777c007ff93",
    "platform": "chip8",
    "title": "Drag RAM",
    "release": "2020",
    "authors": ["ChaseParate"]
  },
  {
    "file": "Driving Simulator (by Team 15 Chipotle)(2019).ch8",
    "sha1": "9468a94294997009a2c50c1a18376947d3d3d3bb",
    "platform": "chip8",
    "title": "Driving Simulator",
    "release": "2019",
    "authors": ["Team 15 Chipotle"]
  },
  {
    "file": "Drop Your Program Here (by An Phu Dupont)(2016).ch8",
    "sha1": "02972781f36cd9ccf36162789ec9687fa3f1a733",
    "platform": "chip8",
    "title": "Drop Your Program Here",
    "release": "2016",
    "authors": ["An Phu Dupont"]
  },
  {
    "file": "Duel of the F8s (by Chromatophore)(2019).xo8",
    "sha1": "adcfece2c527a68d8d74e6cfe7e84a8a04ad8182",
    "platform": "xochip",
    "title": "Duel of the F8s",
    "release": "2019",
    "authors": ["Chromatophore"]
  },
  {
    "file": "Dump Trump (by Micheal Wales)(2019).xo8",
    "sha1": "4cce9f3a79c8d7ee33a9bfde7099568e0f3274cd",
    "platform": "xochip",
    "title": "Dump Trump",
    "release": "2019",
    "authors": ["Micheal Wales"]
  },
  {
    "file": "Elite International Golf.ch8",
    "sha1": "a28c25586a38b0e6147092a2bc50899b463528df",
    "platform": "chip8",
    "title": "Elite International Golf",
    "description": "Experience the latest new heart pounding adrenaline pumping NON STOP action of golf as you've \nNEVER seen it before!\n\nUse A and D keys to adjust the aim, W and S to adjust the power of the stroke and marvel at the \nintuitive fluid UI! Press E to watch the ball fly and marvel at the higly detailed and realistic \nphysics. Every divot in the golf ball is simulated in real time!\n\n"
  },
  {
    "file": "Elm8tal.xo8",
    "sha1": "1539d55e2dda1dd2affa584d8e8e19a7d1f4a41e",
    "platform": "xochip",
    "title": "Elm8tal",
    "description": "About\n\nA XO-Chip Chip8 Game powered by Octo.\nControls\n\n    W/A/S/D - Move Cursor\n    E - Confirm\n    Swipe and Tap should work on Mobile.\n\nGoal\n\nCreate the best world possible from the 4 elements."
  },
  {
    "file": "Enchantment (Verisimilitudes)(2020).ch8",
    "sha1": "d2b0a8cdab1d0bdb4186953abcd75c3a8d660033",
    "platform": "chip8",
    "title": "Enchantment",
    "release": "2020",
    "authors": ["Verisimilitudes"],
    "description": "\nEnchantment - by verisimilitude (2020) \n--------------------------------------\n\nAs this is a game I've written, it's appropriate to explain its history. The intent in \nwriting this was to create a small core of gameplay which could be expressed concisely, \nand expanded on later for the next Octo Jam. The player is a lone pixel avoiding diagonal \nlines being drawn, without any end.\n\nControls:\n---------\n\"2\" = Up\n\"4\" = Left\n\"6\" = Right\n\"8\" = Down"
  },
  {
    "file": "Enchantment Enhanced (Verisimilitudes)(2020).ch8",
    "sha1": "7dbd54b5adc7e409b64a716ceafba864301128b8",
    "platform": "chip8",
    "title": "Enchantment Enhanced",
    "release": "2020",
    "authors": ["Verisimilitudes"]
  },
  {
    "file": "Enchantment Extra Enhanced (Verisimilitudes)(2020).ch8",
    "sha1": "a6f237c853c19160ed7375a93c7f554e5a41aae3",
    "platform": "chip8",
    "title": "Enchantment Extra Enhanced",
    "release": "2020",
    "authors": ["Verisimilitudes"]
  },
  {
    "file": "Etch-a-sketch (KrzysztofJeszke)(2020).ch8",
    "sha1": "945fa6dd1ac72f1ede1cb829ef31b5328a32f67a",
    "platform": "chip8",
    "title": "Etch-a-sketch",
    "release": "2020",
    "authors": ["KrzysztofJeszke"],
    "description": "\nEtch-a-sketch - by KrzysztofJeszke (2020)\n-----------------------------------------\nhttps://github.com/KrzysztofJeszke/chip8games\n\n\nA drawing program.\n\n\n\nControls:\n---------\n5 = Draw up\n6 = Draw Left\n7 = Draw Down\n8 = Draw Right\n\n5 & 6 = Draw Diagonaly\n5 & 8 = Draw Diagonaly\n6 & 7 = Draw Diagonaly\n7 & 8 = Draw Diagonaly\n\n"
  },
  {
    "file": "F8Z (demo).ch8",
    "sha1": "7e53264cda0014e108182e449fdd3034b6bd53c3",
    "platform": "chip8",
    "title": "F8Z"
  },
  {
    "file": "Falling (Verisimilitudes)(2019).ch8",
    "sha1": "f7510be8f3299f8e350626ef5cb88041a5c95f3c",
    "platform": "chip8",
    "title": "Falling",
    "release": "2019",
    "authors": ["Verisimilitudes"],
    "description": "\nFalling - by verisimilitude (2019)\n----------------------------------\nhttp://verisimilitudes.net/2019-10-30\n\n\nA key symbol will appear in a random position at the top of the screen and begin to \ndescend. Press the corresponding key to stop it and start anew. Failure to do this \nlets the key hit the bottom and the game then ends.\n\n\nControls:\n---------\nPress the corresponding key (0 - F)"
  },
  {
    "file": "Falling stars [SCROLL](by A-KouZ1)(2016).ch8",
    "sha1": "f60bdb428e747b0a379063d7cc96d099ab2db18d",
    "platform": "chip8",
    "title": "Falling stars",
    "release": "2016",
    "authors": ["A-KouZ1"]
  },
  {
    "file": "Fest (Jacoboco)(2020).xo8",
    "sha1": "d5ddd7d5071951c682cd4214474acbdd852234c4",
    "platform": "xochip",
    "title": "Fest",
    "release": "2020",
    "authors": ["Jacoboco"],
    "description": "\nFest\n====\nby Jacoboco (Octojam 7)\n\n\nAbout:\n------\nA simple reaction timer.\n\n\nControls:\n---------\nSimply press any key when the Jack'o'lantern lights up."
  },
  {
    "file": "Field! (by Al Roland)(199x).sc8",
    "sha1": "31fe380556d65600ef293d99aabd3b6bb119aa01",
    "platform": "schip",
    "title": "Field!",
    "release": "199x",
    "authors": ["Al Roland"],
    "images": ["Field_SCHIP__1.png", "Field_SCHIP__3.png"],
    "description": "\t\t\t\tField!\n                            by Al Roland\n\nField! is a interesting little game written for the S-Chip V1.1 interpreter\nwhich is available from several sources.\n\nTo play press FIELD and then press SCHIP or however you have named your\nS-CHIP V1.1 interpreter.  \n\nA title screen will appear proclaiming the game name and my name with quite\na bit of animation.  The amount of title screen animation explains for its\nrather large size for a S-CHIP game of 700 some odd bytes.  However, it is\nstill amazing to me that a game as simple as this can be written in so few\nbytes!\n\nTo play press the \".\" key during the title sequence, you may have to hold it\ndown for a second or two since I don't check keypresses between every single\nframe of animation.\n\nThe screen will then appear like:\n _________________________\n|#                       #|\n|                         |   .----ASTEROIDS\n|#                        |   |\n|                        #<---'\n|                         |\n|#_______________________#|\n\nThe keys are now defined as:\n\n1 - Apply thrust to the left ( so you move right! )\n2 - Apply thrust to the right ( so you move left! )\n/ - Move up\n* - Move Down\n7 - Abandon Game and return to the Title Screen\n\nNow once the game is going.(you must apply thrust to actually start.)\nThe screen appears like this.\n _________________________\n|#         #             #|\n|     +-           #      |                 \n|#    ^          #        |    \n|  #  |   #              #|    \n|     |           #       |\n|#____|__________________#|\n      |\n     You\n\n\nNow your on your on... Just don't hit anything.\n\nYour score is based on how long you last, actually it is more of a rating\nthan a score, and it is revealed to you by the OWL on the Title screen.  \n\n0-F (In HEX cause that was easier to do, and since this is my FIRST chip \nprogram, I think you can be happy with that, anyway it will probably only be \nby an act of God that you make it very far.)\n\nHope you enjoy!\n\nLet me know if you like it, or if there are any bugs, or you want more.\nI would greatly appreciate hearing from any of you HP48sx whizes.\nThis horizontal scrolling looks tremendously like DEFENDER and perhaps\nthat is where this program will go!.\n\n\n\t\t** Notes about this program **\nIf you think the game is too slow, let me know. It is loaded with delays; it\ngoes so fast you can't see a thing if you take out the delays. (Idea...\nrelease version with variable speed control.)\n\nSince I don't have a PC and didn't feel like downloading CHIPPER,\nI had to write my own PSEUDO-COMPILER/ASSEMBLER/LINKER.  I did this and\nwrote this game to test it yesterday.  What a long day it was!\n\nThe main reason it is just a PSEUDO-COMPILER is that the code generated by \nBISON on one of the Fish Disks just won't compile! So the Parser is integrated\ninto the Scanner(thanks FLEX.)  Since it is a two step Compile(SYMTAB Build, \nOBJ Generation) a linker was needed to create the S-CHIP V1.1 executable.\nAll these are now working in one 20K executable Amiga Program. \nThis is all written based solely on the CHIP48 docs (scanty at best) and I'm\nstill not quite sure how to do everything.\n\nI'll try to post this program later today, once I write the DOCS.  \n\nI think you folks should like it, because the source doesn't look like\nassembler.\n\n\nAnyway, thanks go to Andreas Gustafsson for the excellent!!! chip interpreter,\n\t\t\t\t\t        ------------\nand to Erik Bryntse for his modifications that resulted in the even more\nexcellent! Super Chip V1.1!\n---------\n*********************** DISCLAIMER ******************************************\nI, Al Roland, being of sound body and mind, and poor grammatical and spelling\nability, make no warranties expressed or implied to anyone no matter how\nunsound their body and mind are regarding the included software, and the\ndamages that might result to those unsound bodies and minds, when they misuse\nthis software on their calculator. I also will not be held responsible for\na grade drop when you play this game in class and forget to take notes.\nAnd, blah blah blah....\n\n\t\t\t\tAl Roland \n\t\t\t     711 Cary Drive\n\t\t\t    Auburn, Al 36830\n\n    \t\t          droland@eng.auburn.edu\n\noh yeah...I release this as FREEWARE, play it, and enjoy it. But \ndon't modify, mutilate, or spindle this program unless I know about\n(and approve) it.\n\t\t\t    (c)1991 Al Roland\n*****************************************************************************\n\u001a"
  },
  {
    "file": "First depth search of Maze (by AKouZ1)(2017).sc8",
    "sha1": "5c0fff21df64f3fe8683a115353c293d435ca01a",
    "platform": "schip",
    "title": "First depth search of Maze",
    "release": "2017",
    "authors": ["AKouZ1"]
  },
  {
    "file": "Fizzbuzz (Verisimilitudes)(2018).ch8",
    "sha1": "b1bf08cccffc56320f3b98c96a7911a58c1475b0",
    "platform": "chip8",
    "title": "Fizzbuzz",
    "release": "2018",
    "authors": ["Verisimilitudes"]
  },
  {
    "file": "Fl8ppy Mouse (by buffis)(2016).ch8",
    "sha1": "eb0076f3dd33b16fd040640b4b67bab19e491bef",
    "platform": "chip8",
    "title": "Fl8ppy Mouse",
    "release": "2016",
    "authors": ["buffis"]
  },
  {
    "file": "Flappy Pong (by cnelmortimer)(2017).ch8",
    "sha1": "4edb2848edbec6c79a2ae208490e12013e94ee98",
    "platform": "chip8",
    "title": "Flappy Pong",
    "release": "2017",
    "authors": ["cnelmortimer"],
    "description": "\nFlappy Pong - by cnelmortimer (2017)\n------------------------------------\nOctoJam 4\n\n\nFlappy Pong is a Flappy Bird clone for Chip-8. Players win if they are able to obtain \n255 points (a cup is painted then). This game was created to be shared with the Pin8 \nemulator.\n\n\nControls:\n---------\nPress \"5\" to flap."
  },
  {
    "file": "Flaps (by Phillip Wagner)(2014)(press E to go up).ch8",
    "sha1": "b0eec238f877ad6b17f2be33454353ab95584c79",
    "platform": "chip8",
    "title": "Flaps",
    "release": "2014",
    "authors": ["Phillip Wagner"],
    "description": "\nFlaps - by Phillip Wagner (2014)\n--------------------------------\nOctoJam 1\n\n\nGame style like Flappy Birds.  \n\n\nControls:\n---------\nPress \"6\" to flap."
  },
  {
    "file": "Flip-8 - Think-A-Dot edition (Tobias V. Langhoff)(2020).ch8",
    "sha1": "93cc9ed25534f9b143206f846c2a9145df691d6c",
    "platform": "chip8",
    "title": "Flip-8 - Think-A-Dot edition",
    "release": "2020",
    "authors": ["Tobias V. Langhoff"],
    "description": "\nFLIP-8: Think-a-Dot edition\n===========================\nby Tobias V. Langhoff (octojam 7)\n\n\nAbout:\n------\nThis is a version of Joseph Weisbecker's game Think-a-Dot (1965) aka. Flip (1974) implemented in Weisbecker's \nown CHIP-8 language for the COSMAC VIP computer (1977) he designed while at RCA.\n\n\nHow to Play:\n------------\nPress 1, 2 or 3 to drop a marble into the respective hole. The marble will move through the flip-flops, moving \neither left or right at each one depending on its state, flipping the ones it hits before popping out on the \nbottom. Play around with it on the title screen to get a feel for how it works, or make up your own game around \nits rules.\n\nYou can always press 4 to reset back to the starting layout.\n\nPress any of the following keys to generate a random goal pattern, displayed to the right:\n\n- R: New game from random layout (shake)\n- F: New game from default layout (tilt left)\n- V: New game from inverted layout (tilt right)\n\n\nTWO PLAYER MODE:\n----------------\nYou can also play with a friend. Choose who goes first, player 1 or player 2; after that, you can continue \ndropping the marble as long as the marble comes out on your side (watch the arrows at the bottom). Your goal \npatterns are inverts of each other.\n\nFor convenience, start playing by pressing any of the following keys to display both patterns:\n\n- E: New game from random layout (shake)\n- D: New game from default layout (tilt left)\n- C: New game from inverted layout (tilt right)\n\n\nHISTORY:\n--------\nIn 1965, Joseph A. Weisbecker invented an educational mechanical toy computer called the Think-a-Dot\n(https://www.jaapsch.net/puzzles/patents/us3388483.pdf), which was manufactured by E.S.R., Inc. In 1974, \nWeisbecker detailed a design for an electronic CMOS computer version of the game, called Flip, in the \nmagazine Popular Electronics. In 1977, Weisbecker's simple programming language CHIP-8 was introduced for \nRCA's COSMAC VIP microcomputer, which was also based on his designs. Read more in The Sarnoff Collection's \narticle on Think-a-Dot. (https://davidsarnoff.tcnj.edu/2017/12/10/object-of-the-week-think-a-dot/)\n\n\nMATHEMATICS:\n------------\nThink-a-Dot was covered in Mathematics Magazine in 1967, 1973 and 1979. The game has some interesting characteristics. \nFor example, as proven by Benjamin L. Schwartz in his paper \"Mathematical Theory of Think-A-Dot\" published in \nMathematics Magazine, Vol. 40, No. 4 (Sep., 1967): When playing Think-A-Dot, it's impossible to flip an even number \nof spots. Try it yourself! No wonder: It always flips one spot in both the top and bottom row. This of course means \nthat if your starting pattern has an even number of flipped spots in those two rows, you can never reach a pattern \nwith an odd number of flipped spots � and vice versa. In computing, we say that you can't change the pattern's parity.\n\nThis also means that from the default starting position, only half of the possible patterns can be reached. Interestingly, \nthis includes inverting the default pattern, since the total number of spots in the top and bottom rows is even (6).\n\nInterestingly, the original instruction booklet for Think-a-Dot listed 20 goal patterns for the starting pattern when \ntilting to the left, and 20 goal patterns for tilting to the right. But they were all from the same possibility space!\n\nFLIP-8 takes this limitation into account when generating random goal patterns: Any pattern you get can always be \nsolved. You can also randomize the starting pattern completely, gaining access to the other half of the possible goal \npatterns.\n\nYou can read more about the mathematics behind the game on Jaap's Puzzle Page on Think-a-Dot.\nhttps://www.jaapsch.net/puzzles/thinkadot.htm\n\n"
  },
  {
    "file": "FlipFlipBoom (by Ian J Sikes)(2016).ch8",
    "sha1": "70ccd390c90f586bcd75bbbc1c89e53e67179ff1",
    "platform": "chip8",
    "title": "FlipFlipBoom",
    "release": "2016",
    "authors": ["Ian J Sikes"]
  },
  {
    "file": "Floppy Bird (by Micheal Wales)(2014).ch8",
    "sha1": "b1917346eaae178c6f4e154e83cc89dc5b83c72f",
    "platform": "chip8",
    "title": "Floppy Bird",
    "release": "2014",
    "authors": ["Micheal Wales"],
    "description": "\nFloppy Bird - by Micheal Wales (2014)\n-------------------------------------\nhttps://github.com/mwales/chip8\n\n\nInspired by the mobile hit game Flappy Bird, I created a Chip-8 version. \nIt was written in assembly, and then compiled into the ROM format using \nthe CHIPPER assembler.\n\n\nControls:\n---------\nPress \"5\" to flap.\n\n"
  },
  {
    "file": "Flutter By (by Tom Rintjema)(2019).sc8",
    "sha1": "808aeb072604809e0ef13c245115a81f40422d1d",
    "platform": "schip",
    "title": "Flutter By",
    "release": "2019",
    "authors": ["Tom Rintjema"]
  },
  {
    "file": "Fractal Set (by A-KouZ1)(2018).ch8",
    "sha1": "a2807d2b9591a2cb061e3c3a64c2766b4bab4327",
    "platform": "chip8",
    "title": "Fractal Set",
    "release": "2018",
    "authors": ["A-KouZ1"],
    "description": "\nFractal Set - by Akbar Kouzone (2018)\n-------------------------------------\naka A-Kouz1\n\n\nHas \"Mandelbrot Set\" and \"Julia Set\".\n\n\nControls:\n---------\nS = Up\nX = Down \nC = select\nV = Return\n\n\n\nNote: Menu and text are in Chip-8 format but the result screens are in XO-Chip."
  },
  {
    "file": "Frog.xo8",
    "sha1": "3dade9be601637ca2d96aeafaa086b93a0b83352",
    "platform": "xochip",
    "title": "Frog",
    "description": "Please enjoy a frog and fly.\n\nPress F key to begin."
  },
  {
    "file": "Game 16 [TCNJ S.572.3].ch8",
    "sha1": "ea7c12f458932527802fdd4a18e4c6700dd91138",
    "platform": "chip8",
    "title": "Game 16",
    "authors": ["TCNJ S.572.3"],
    "description": "The Sarnoff Collection at TCNJ, S.572.3\n\nI don't know the name of this game, also don't know how to play it, \njust called is game 16 as it was number 16 on the tape!\n\n\nSly Note: \n---------\nJAW always loved brain teasers so this is a logical number pyramid game, and is this \nlike the one found in Cracker Barrels restaurants ?\n\nI think the real name is \"Triangle Peg Solitaire\".\n\nhttps://www.joenord.com/puzzles/peggame/index.html"
  },
  {
    "file": "Gem Catcher (by Dakota Hernandez)(2017).ch8",
    "sha1": "19c64fc12bfdefb8c3c608a37b433ceff4286e52",
    "platform": "chip8",
    "title": "Gem Catcher",
    "release": "2017",
    "authors": ["Dakota Hernandez"],
    "description": "\nGem Catcher - by Dakota Hernandez (2017)\n----------------------------------------\n\nYou play the role of an adventurer who has found themselves in a magical cave, rumored \nto once be the home of a powerful wizard. Deep within its tunnels, they come across an \nenchanted room where gems drop from the ceiling! Eager to strike it rich, the adventurer \nscrambles to catch as many as they can. The room has some powerful protection, however \n� if five gems touch the ground, then a powerful wave of magic will force the adventurer \nout of the cave. How many gems can they catch before they are forced out?\n\n\nThe controls are simple: \npress A to move left and D to move right. Your goal is to collect gems for as long as you \ncan! Touch a gem to collect it. To help, the adventurer can wrap around the screen, letting \nyou reach faraway gems more easily. After 50 gems are collected, they fall at a faster rate. \nLet 5 touch the ground, and it's game over. Good luck!\n\n\n"
  },
  {
    "file": "Ghost Escape! (by TomR)(2016).ch8",
    "sha1": "c33af07674dbbec5365bd91954c8bfed4a7467bd",
    "platform": "chip8",
    "title": "Ghost Escape!",
    "release": "2016",
    "authors": ["TomR"],
    "description": "\nGhost Escape! - by TomR (2016)\n------------------------------\nSeek revenge on mortal men in this exciting adventure!\n\nPlay as Harold the Ghost, undead leader of the fearsome hoards of hell, on a quest to \ncleanse the world of human life. Use your powerful attacks to lay waste to the enemies \nof evil. Command minions to mutual destruction of the works of man. Employ the beasts \nof land and winged creatures of the sky through psychic manipulation to their ultimate \ndoom as pawns beneath your will.\n\nTiming is key!\n\nAttack in waves of perfect timing to maintain your numbers. A miss-timed attack will \nreduce your armies numbers. Lose your army and the war is lost. Fail to attack in time \nand the human forces will fight back and overwhelm the vile army at your command, \nresulting in instant loss, for you!\n\nPress X when it's lined up."
  },
  {
    "file": "Ghostbusters! (sound)(unknown author)(201x).xo8",
    "sha1": "f5c666c33ed66a9662cef78b1ef62f80a33b0358",
    "platform": "xochip",
    "title": "Ghostbusters!",
    "release": "201x"
  },
  {
    "file": "Glitch Ghost (by Jackie Kircher)(2014).ch8",
    "sha1": "ad612a1409c96cc24fc5fc1368fab71463480e9b",
    "platform": "chip8",
    "title": "Glitch Ghost",
    "release": "2014",
    "authors": ["Jackie Kircher"],
    "description": "\nGlitch Ghost - by Jackie Kircher (2014)\n---------------------------------------\nGlitch ghost is all alone in the cemetery, please help them make some friends by \nturning the trespassing humans into new ghosts!\n\n\nControls:\n---------\n\"6\" - advance the title screen\n\n\"6\" - haunt! if there is a person on the screen then they will run away from you. \n      you can move while the person is running.\n\n\"5\",\"7\",\"8\",\"9\" - move up, left, down, and right respectively.\n\n\nGoal:\n-----\nEach screen of the cemetery has a unique layout of tombstones. you'll need to figure \nout how to get each person to run into their own graves. once scared, each person \nwill run away from glitch ghost and turn right whenever they encounter an obstacle, \nbe it a grave, the fence, or even glitch ghost themselves. only one person will enter \nthe cemetery at a time, and they'll always come in through the front gate."
  },
  {
    "file": "Golf (by buffi)(2019).ch8",
    "sha1": "72f071d5197497519d301ec32baef749f3191a4d",
    "platform": "chip8",
    "title": "Golf",
    "release": "2019",
    "authors": ["buffi"],
    "description": "\nGolf - by buffi (2019)\n----------------------\nOctoJam 6\n\n\nGolf (rather Mini Golf) for the Chip-8.\n\n\nControls:\n---------\n5 = Shoot the ball\n7 & 9 = Aim\n\n\nBug ? TomR reported in August 2020:\n\"I missed and got the ball stuck in the G on the last level!\"\n"
  },
  {
    "file": "Grave Digger (by TomR)(2017).ch8",
    "sha1": "3b644b6d5a5591999094b22478a8efa3739da85d",
    "platform": "chip8",
    "title": "Grave Digger",
    "release": "2017",
    "authors": ["TomR"],
    "description": "\nGrave Digger - by TomR (2017)\n-----------------------------\nOctoJam 4\n\n\nIn grave digger you pull skeletons from the ground to help their ghosts escape!\n\n\nControls:\n---------\n7 & 9 to move paddle.\n\n\nP.S. from the author:\n---------------------\nI stole this game from the first Octo Jam and changed the bricks to ghosts.\n\n"
  },
  {
    "file": "Greet (by Boro Sitnikovski)(2014).ch8",
    "sha1": "835880c85c4c1c318b04dc940e89cb6e7466e652",
    "platform": "chip8",
    "title": "Greet",
    "release": "2014",
    "authors": ["Boro Sitnikovski"]
  },
  {
    "file": "H. Piper (by Paul Raines)(1995).sc8",
    "sha1": "01ffe488efbe14ca63de1c23053806533e329f3f",
    "platform": "schip",
    "title": "H",
    "release": "1995",
    "authors": ["Paul Raines"],
    "description": "\nVersion 2.1 of H. Piper! for SUPER-CHIP follows below.\n\nDISCLAIMER: Since CHIP makes use of undocumented features\nof the HP48SX, anything can happen: loss of data, meltdown,\netc. Therefore, I take no responsibility for any damage\nwhatsoever that occurs.\n\n****************  H. Piper!  **********************\n\nOBJECT:\n-------\nYou are presented with a 6 row, 10 column grid and\na preview panel of 5 pipes. A starting pipe will be\nplaced on the grid and will in a few seconds start\nleaking.  The object is to lay pipes on the grid to\ncontain the leak as long as you can.  If the water\nflows onto an empty grid site, onto the side of another\npipe or border, that plumbing job is finished.  If you\ndid well enough, you may get another job.  Otherwise\nthe game is over.\n\nSTARTING THE GAME:\n-----------------\nMake sure you have the SCHIP program on the calculator.\nPress HPIPER to recall the program string to the stack.\nThen press SCHIP to start the game.\n\nHOW TO PLAY:\n------------\nOn the bottom and right borders of the grid are grid\npointers.  The bottom pointer can be moved left with\nthe (1) key and right with the (2) key.  The side\npointer can be moved up with the (9) key and down with\nthe (6) key. (Note: this is identical to the movement\nkeys for Syzygy by Roy Trevino)  A crosshair is present\non the grid sites the two paddles point to.\n\nUsing the pointers, chose a grid site to place a pipe.\nThe pipe to be placed is the one at the bottom of\nthe preview column. Once a site is chosen, press the\n(7) or (4) key to place the pipe there.  You can replace\na pipe already at the grid site with a penalty of one\npoint.  You cannot replace a pipe that the water has\nalready flown through.  Trying to do this will make\nyou lose the pipe you were trying to place and also\npenalize you one point.\n\nThe two buttons used to place pipe differ in the way\nthat the next pipe added at the top of the queue.\nPressing (7) will choose a random new pipe to place\nat the top of the preview column and push the others\ndown the queue.  Pressing (4) will use the pipe\ncurrently displayed to the right of the grid as the\nnew pipe to be placed at the top of the preview\ncolumn.  The pipes on the right cycle through all\ntypes in a set manner.\n\nWhen you have placed all the pipe you wish to for\na particular job, you can press the (+) key to make\nthe water flow *FAST*.  You can still lay pipe if\nyou realize you made a mistake, but hurry!\n\n   KEY SUMMARY:     Left     (1)\n                    Right    (2)\n                    Up       (9)\n                    Down     (6)\n                    Place    (7)  random\n                    Place    (4)  non-random\n                    Fast     (+)\n\nOnce a job is over, press (SPACE) to continue.\n\nThere are twenty levels with increasing water flow speed.\nLevel 20's speed is the same as that for *FAST*. If\nyou manage to get through level 20, it repeats at\nthat level till you fail.  The starting speed with\nwhich the flow comes out of the initial pipe is slower\nthan the usual flow, however this speed increases in\nlevel also. \n\nSCORING:\n--------\nYou receive 3 points for every pipe the water flows\nthrough.  For the crossed pipes, flowing through\nthem in both directions gives you 6 points.\nYou are penalized 1 point for replacing or\ntrying to replace a pipe already on the grid.\n\nThe current job score is shown in upper right corner.\nThe score can not go negative, so if the score is\nzero, you can replace pipes without penalty.\n\nOnce a job is over, the program checks to see if\nevery grid site was flown through. If so you\nearn a 100 point bonus. The score earned is added to\nthe grand total and displayed on the screen shown\nafter (SPACE) is pressed. \n\nIf the game is over, the word OVER will be displayed\nabove the score and the (SPACE) key can be pressed\nto exit. The total score will be written to user \nflags so that the user lang program SCORE can\nput the score on the stack. If over does not appear,\npress (SPACE) to go on to the next job.\nThe points needed to go to the next job are\nobtained by the following formula:\n\n    Points needed = 100 - (41 - 2 * level)\n\ntherefore, you need 63 points to go to job 2\n                    65 points to go to job 3\n                    ...\n                    99 points to go to job 20,21,....\n\nThe points needed for a level are shown below the\nbottom right corner of a grid.  Note that this\ndoes not mean that play ends once that score\nis achieved.  That score is only a minimum needed\nto have the opportunity to continue on another job.\n\nRESUME:\n-------\nBetween jobs (i.e. while at the dripping faucet wait\nscreen) you can press the decimal (.) key to leave\nthe game and go to the regular calculator mode.  The\ntotal score and level you achieved will be stored in\nthe user flags so that next time you start the game,\nyou will resume the game as you left it.  Do not\nrun the SCORE program or you will lose the resumable\nstate.\n\nIf somehow the user flags get messed up by other\nprograms you run after pausing, you can set them\nusing the HPSET program.  Put the desired score\non level 2 and the game level you just completed\non level 1. Once you get really good at the game,\nyou can use this to bypass the first few really\nslow screens. For example, to start off on level 9,\nenter 0 then 8 and run HPSET. When you start the\ngame, you will begin at level 10.\n\nRANDOMNESS:\n----------\nThe starting pipe for the first level is still \nplaced randomly.  For subsequent levels, however,\nthe starting pipe is located on the grid site\nyou \"leaked\" on with the starting direction opposite\nof that you entered.  If you leaked onto the border,\nthen the starting pipe is placed on the site you\nleaked from.\n\nThe first five pipes in the queue are selected randomly.\n\nOTHER REMARKS:\n-------------\n-- The [ENTER] key will now work to restart\n   the game as if it was just run for the first time.\n-- The movement keys can now be held down to\n   move the crosshair long distances.\n-- Corner pieces are guaranteed for the first four\n   pipes to get out of sticky situations with\n   the starting pipe placement.\n\nTROUBLE SHOOTING:\n----------------\nSome people have reported assorted problems with\ngetting the program to work.  For those who can't get\nSCHIP to work with H. Piper, try turning off all alarms\nand date/clock displays.  If you have Chipper,\nyou might try compiling the source code yourself and\nsee if you can get it to run from there.  \n\n\nDEVELOPMENT NOTES:\n-----------------\nPipe Graphics --\n   As you will probably notice, a lack of\n   color is a big problem in trying to sort\n   out what you have laid out.  Having 8x8\n   pipe bitmaps was a cornerstone of my\n   design so enlarging them for better\n   resolution would be difficult and probably\n   restrict the grid size unduly.\n\nRandomness    --\n   Just how random is S-CHIP's random generator?\n   You will probably notice that the cross pipe\n   comes up more often than the others. True. It\n   is twice as likely to be chosen than any of\n   the others.  Another design fluke. However,\n   being the one true symmetrical piece, it\n   will be the most useful to get often.\n\nProgram Size  --\n   I've put a semi-rigid limit of 2K on the size\n   of the program.  Any improvement that will put it over\n   that barrier just won't be worth it. (I will of course\n   probably eat these words later.)\n\nACKNOWLEDGEMENTS:\n----------------\nH. Piper! was written using the excellent compiler Chipper.\nI will make the source available if there is any interest.\nBe forewarned.  I am a pretty sloppy coder.  There is\nmuch room for improvement in efficiency.\n\n   CHIP-48 is (C) Copyright 1990 Andreas Gustafsson.\n            - Many, many thanks to the one who started it all.\n\n   Chipper is (C) Copyright 1990 Christian Egeberg.\n            - It is amazing that with such a great compiler\n              as this, there are so few CHIP games out there.\n\n   SUPER-CHIP is (C) Copyright 1991 Erik Bryntse\n            - Never be satisfied with limitation.\n\nHappy plumbing!\n\n\n\n\n"
  },
  {
    "file": "H8 (by Mastigophoran)(2017).sc8",
    "sha1": "3ee8a64a9af37a8d24aab9e73410b94cc0a4018f",
    "platform": "schip",
    "title": "H8",
    "release": "2017",
    "authors": ["Mastigophoran"]
  },
  {
    "file": "Heart Monitor Demo (by Matthew Mikolay)(2015).ch8",
    "sha1": "5551471e152afcbf61707393ce79cde360bbc23c",
    "platform": "chip8",
    "title": "Heart Monitor Demo",
    "release": "2015",
    "authors": ["Matthew Mikolay"],
    "description": "# Heart Monitor\n\n\nA CHIP-8 demo meant to simulate the waveform of a heart monitor.\n\n\n\theart_monitor.ch8 (MM)\n\nDisplays a simulated heart-monitor wave trace with appropriate beep\nsounds.\n\n\n(MM) Matthew Mikolay, proprietor of the RetroComputing page at\nhttp://retro.mattmik.com/index.html\n\n"
  },
  {
    "file": "Hedgehog the Drug Dog (by FunkyStu) (2016).ch8",
    "sha1": "89247fc70ab073b36cb1b6a6ea3770ac4a877b9b",
    "platform": "chip8",
    "title": "Hedgehog the Drug Dog",
    "release": "2016",
    "authors": ["FunkyStu"],
    "description": "\nHedgehog the Drug Dog - by FunkyStu (2016)\n------------------------------------------\nOctoJam 3\n\n\nFor the drug warriors, a word from a dog is enough.\n\n\nControls:\n---------\n5, 7, 8, 9 to move.\n4 to bark.\n\n\n"
  },
  {
    "file": "Heh, I chipped your mom's eight last night (sound)(unknown author)(201x).xo8",
    "sha1": "f64e87b8a4161806b4dad9bfc317d4341b410beb",
    "platform": "xochip",
    "title": "Heh, I chipped your mom's eight last night",
    "release": "201x"
  },
  {
    "file": "Hello World (Tim Franssen)(2020).ch8",
    "sha1": "a8ed3c25c00130838b3ee36cc82fbf32ce6cea83",
    "platform": "chip8",
    "title": "Hello World",
    "release": "2020",
    "authors": ["Tim Franssen"]
  },
  {
    "file": "Hello World (by David Campion)(2019).ch8",
    "sha1": "2dabe15f846041b24faa21a6dc3632fdebe82b89",
    "platform": "chip8",
    "title": "Hello World",
    "release": "2019",
    "authors": ["David Campion"]
  },
  {
    "file": "Hello World (by Joel Yliluoma)(2015).ch8",
    "sha1": "3cb8831051c0b6235b64f057a6a848a57d8900df",
    "platform": "chip8",
    "title": "Hello World",
    "release": "2015",
    "authors": ["Joel Yliluoma"]
  },
  {
    "file": "Hex Mixt (unknown author)(20xx).sc8",
    "sha1": "d9389d564baced03192503a58ad930110bb0fe03",
    "platform": "schip",
    "title": "Hex Mixt",
    "release": "20xx",
    "images": ["Hex_Mixt_SCHIP__1.png", "Hex_Mixt_SCHIP__2.png"]
  },
  {
    "file": "Hidden (fix)[David Winter, 1996].ch8",
    "sha1": "9b72b6656cb714cd64de00ac78dc7bf8374adec6",
    "platform": "chip8",
    "title": "Hidden",
    "authors": ["David Winter"],
    "description": "This version does not have the Fx55/Fx65 (load_store_quirk) issue (where the last two tiles left are different, so you can't beat the game.)\n\n                \n\n\n                ----------------------------------------\n                                 HIDDEN!\n                    Copyright (1996) by David WINTER\n                ----------------------------------------\n\n\nHIDDEN is a \"memory\" game. It is very simple to play.\n\nThe rules are as follow: your goal is to find all the identical cards\nin a minimum time.\n\nYou are playing in a 4*4 card grid. You can see only two cards at the\nsame time. Once this time passed, these two cards will remain shown\nif they are identical, otherwise they will be hidden again.\n\nWhen the game is finished, two scores are shown:\n        SC is your score, corresponding to the number of tries\n        HI is the best score (smallest number of tries made to finish)\n\nThe keys are:\n\n        [2] : More DOWN\n        [4] : Move LEFT\n        [5] : Show card\n        [6] : Move RIGHT\n        [8] : Move UP\n\nEnjoy !!!\n"
  },
  {
    "file": "Horde (by Dupersaurus)(2017).xo8",
    "sha1": "2229606a59bbcdeb81408f75e8646ea05553a580",
    "platform": "xochip",
    "title": "Horde",
    "release": "2017",
    "authors": ["Dupersaurus"]
  },
  {
    "file": "Hors (by TomR)(2015).sc8",
    "sha1": "b8be672909554abc17ed1ea0c694726f9a87b43d",
    "platform": "schip",
    "title": "Hors",
    "release": "2015",
    "authors": ["TomR"],
    "images": ["HORSEY.png"]
  },
  {
    "file": "Horse World Online (TomR)(2014).ch8",
    "sha1": "84d612c7eccf24835eb585711a49964572444737",
    "platform": "chip8",
    "title": "Horse World Online",
    "release": "2014",
    "authors": ["TomR"],
    "description": "\nHorse World Online - by TomR (2014)\n-----------------------------------\nOcto-Ber Jam 1\n\n\nAn online horse breeding game. Breed horses to win. \n\n\nControls:\n---------\nHold the A (z) key to breed."
  },
  {
    "file": "Horsey Jump (by Team Horse)(2015).sc8",
    "sha1": "45f7c33b284b0f3e1393f0dd97e4b3b9fd9c63c9",
    "platform": "schip",
    "title": "Horsey Jump",
    "release": "2015",
    "authors": ["Team Horse"]
  },
  {
    "file": "I'll Be back (sound)(unknown author)(201x).xo8",
    "sha1": "e251b6132b15d411a9fe5d1e91a6579e3e057527",
    "platform": "xochip",
    "title": "I'll Be back",
    "release": "201x"
  },
  {
    "file": "Infini Br8kr (HailTheFish)(2020).xo8",
    "sha1": "2cda3b309234e693e5ab6179767a8f019dfd5c6e",
    "platform": "xochip",
    "title": "Infini Br8kr",
    "release": "2020",
    "authors": ["HailTheFish"],
    "description": "\ninfinibr8kr\n===========\nby HailTheFish (octojam  7)\n\n\nAbout:\n------\nXO-Chip brick-breaker game with a little twist. Move the paddle to hit the ball and break bricks, but as you \nbreak bricks, more get added. Don't drop the ball, or let the bricks reach your paddle, or it's game over!\n\n\nControls:\n---------\n\"5\" and \"7\" (or left and right arrow keys) to control the paddle.\n"
  },
  {
    "file": "InvisibleMan (MrEmerson)(2020).xo8",
    "sha1": "b1ec426de267f4335a672243f7d93de5fd03b356",
    "platform": "xochip",
    "title": "InvisibleMan",
    "release": "2020",
    "authors": ["MrEmerson"],
    "description": "\nInvisible Man\n=============\nby MrEmerson (Octojam 7)\n\n\nAbout:\n------\nRecently found  as part of a long-lost archive of early digital black studies at Saint Augustine's University, \nthis  game is an adaptation of the prologue of Ralph Ellison's novel Invisible Man.\n\n\nControls:\n---------\nMove the player left (7) and right (9) as he walks down the street.\n\n\n"
  },
  {
    "file": "Jackpot (Joyce Weisbecker)(1978).ch8",
    "sha1": "1261b79da4d25792c05eaed47a0285b48dd7b7f4",
    "platform": "chip8",
    "title": "Jackpot",
    "release": "1978",
    "authors": ["Joyce Weisbecker"],
    "description": "\nJackpot - by Joyce Weisbecker (1978)\n------------------------------------\nCosmac VIP CDP18S711 Book - Page 49 (VIP-311)\n\n\nThis program uses the CHIP-8 INTERPRETER at 0000-01FF. You start with $10. \nIt costs you $1 each time you play. Push any key to start the 3 wheels \nspinning. Push keys 1, 2, and 3 (one at a time) to stop the wheels. You win \n$3 if you stop with 3 different symbols. You win $5 if you stop with 3 \nidentical symbols. You get a $5 bonus for 3 solid squares. You break the \nbank if you get your winnings up to $50. \n\n"
  },
  {
    "file": "Jeff Quest (Jason DuPertuis)(2020).xo8",
    "sha1": "2079134ecaaaa356724d1f856b2a00153b176cc7",
    "platform": "xochip",
    "title": "Jeff Quest",
    "release": "2020",
    "authors": ["Jason DuPertuis"]
  },
  {
    "file": "Jeff's Quest (by Dupersaurus)(2017).xo8",
    "sha1": "5d99d0c763cf528660a10a390abe89f2d12b024a",
    "platform": "xochip",
    "title": "Jeff's Quest",
    "release": "2017",
    "authors": ["Dupersaurus"]
  },
  {
    "file": "Joust (Jason DuPertuis)(2017).xo8",
    "sha1": "a902480e6e18c5287388b6797da36d640db9992b",
    "platform": "xochip",
    "title": "Joust",
    "release": "2017",
    "authors": ["Jason DuPertuis"],
    "images": ["Joust_SCHIP__2.png"],
    "description": "(Comp.sys.handhelds) Option: \nItem: 3368 by catto at vivaldi.ecn.purdue.edu\nAuthor: [Erin S Catto]\n  Subj: Joust v2.2, a Super-CHIP video game\n  Date: Wed Jun 05 1991\n\nJoust v2.2\n==========\n\nOkay, its time for a Joust revision.  The main difference is the sprite\nbitmaps.  Although I didn't use the bit maps given to me by Steve VanDevender,\nI thank him for his insights into the game.  It's kind of funny the way this\ngame developed.  I wasn't really sure of the details of the game.  I had to go\non memory.  Gosh, I think Joust was introduced in something like 1981 or '82.\nI do remember dumping a couple pounds of quarters into that game.  Joust had\npretty good graphics in its day, but I suppose Game Boy graphics can beat it\nnow (not considering color).\n\nDo try this version (if you liked the others at all).  The new bitmaps have\nmore of the \"Joust Spirit\".\n\nNote: Although the player and rival sprites are definitely different, it's\n      easy to get them mixed up and die quickly.  I use the rival soldier's\n      blank ankle to distinguish the sprites.\n\nThe Game\n========\n\n                      /   =   right\n                      9   =   left\n                      0   =   up, start game, and replay\n\n                      points:     1 per egg\n                                  8 extra for clearing the bonus round\n                                  bonus player for winning bonus round\n\nBeware - due to the new bitmaps the bonus round is tougher, but do-able.\n         Call it a bug or call it a challenge.\n\n\n                       Have More Fun,\n\n                                         Zoom\n                                         catto@ecn.purdue.edu\n\nP.S.  Sorry no programming notes; I'm working on a new game which uses the\n      scrolling features of S-Chip v1.1 (my selfish priorities)\n      I will answer questions via e-mail.\n\nDo-able Chip games:      Defender, Berzerk (easy, no collisions allowed)\n                         Birds-eye view Car Racing, Scramble, Vanguard,\n                         Asteroids (tricky), Donkey Kong, Frogger, Pinball\n\n\n-To run Joust v2.2 you must have S-Chip v1.0 or v1.1.  Download it, recall the\nresult to the stack.  Execute SCHIP.  Press 0 to start.\n\n----------\n  Resp: 1 of 1 by _falco at hpcvbbs.UUCP\nAuthor: [Andrey Dolgachev]\n  Date: Wed Jun 05 1991\n\nErin,\n\nGreat work on Joust but I have a couple of comments.  One bug I've noticed is\nthat if you kill a buzzard right over one of the ledges, the egg goes through\nthe ledge.  Otherwise, I haven't noticed any problems and I think its a great\ngame.  Now how about that hand sticking out of the lava?  Regarding future CHIP\ngames, I would love to start writing some CHIP programs, since I see a lot more\npotential in CHIP than in RPL or even ML.\n\n    Keep up the good work,\n           --Falco\n\n----------\n  Resp: 1 of 1 by catto at author.ecn.purdue.edu\nAuthor: [Erin S Catto]\n  Date: Sat Jun 08 1991\n\nDan Stephenson writes:\n\n>BUGS:\n>\n>The eggs sometimes fall through a level.\n>The bouncing eggs sometimes forget to fall when they go past a ledge.\n>The bonus round IS goofy. Sometimes I whiz right THROUGH eggs!\n\nFor my version of Joust I decided to let the eggs fall thru the ledge if the\nrival jouster is right above the ledge.  Why?  One, it was easier this way, and\ntwo, it makes the game more challenging because you have to chase the egg (the\nonly item worth points).\n\nTo save on space I used the same routine that keeps the jousters on the ledge\nto make the eggs bounce.  Now the jousters are wider than the eggs but S-CHIP\ndoesn't know that; so when an egg bounces off the left edge of a platform it\nappears to make one bounce in mid-air.  I could fix this but I don't think it\nimpacts the game enough to merit the effort.\n\nOn the bonus round; yes, due to the new bitmaps of v2.2 the bonus round isn't\nquite right.  I think I will fix this, but until then you can pick up the eggs\nby moving across them coming from the left.\n\nDan also mentioned a number of features that would help my Joust more fully\nemulate the original Joust.  However, having twenty revisions to this game does\nnot interest me.  Especially now since I'm working on another S-CHIP game which\nwill feature scrolling and animation.  It will be an action/adventure game with\nchanging perspectives.  The new scrolling features of S-CHIP v1.1 are\nincredible!  They add so much potential to game writing.\n\n\n                                                   Zoom\n                                                   catto@ecn.purdue.edu\n\u001a"
  },
  {
    "file": "Joust (by Erin S. Catto)(199x).sc8",
    "sha1": "6d677bb44500a5ee4754b3a75516cfd9e73947fc",
    "platform": "schip",
    "title": "Joust",
    "release": "199x",
    "authors": ["Erin S. Catto"],
    "description": "Joust 2.3 Documentation\n-----------------------\n\nBy Erin S Catto\n\nHere is Joust v2.3.  No exciting changes.\nJust mitigation of the bonus round bug.\n\nThe Game:             0    =    start, replay, up\n                      /    =    right\n                      9    =    left\n\nPoints:               1 point per egg touched\n                      8 points for clearing bonus round\n                      1 player for clearing bonus round\n\nNOTE:  Only use SCHIP v1.1 to run this game.  \n",
    "images": ["Joust_SCHIP__1.png"]
  },
  {
    "file": "Jump Heart (by Buffis)(201x).sc8",
    "sha1": "416763e940918ee7cfc5c277d7f2b66de71a46a1",
    "platform": "schip",
    "title": "Jump Heart",
    "release": "201x",
    "authors": ["Buffis"]
  },
  {
    "file": "Jumpfill (by Bj”rn Kempen)(2015).ch8",
    "sha1": "8cf29db367b7db4760dee8252dfc88066a45ce4a",
    "platform": "chip8",
    "title": "Jumpfill",
    "release": "2015",
    "authors": ["Bj”rn Kempen"]
  },
  {
    "file": "Jumping Sprite (lingib)(2020).ch8",
    "sha1": "680e265a128870091ed71410891b64d5ead303fb",
    "platform": "chip8",
    "title": "Jumping Sprite",
    "release": "2020",
    "authors": ["lingib"],
    "description": "\nJumping Sprite\n==============\nYour task is to make the smaller sprite collide with the larger sprite using the keys on your keypad\n\n\nGame Rules\n----------\nThe position of a large sprite is controlled by a random number generator.\nThe large sprite moves to a different position every 5 seconds.\n\nThe position of a smaller sprite is controlled by your keypad:\n    \n2=up\n4=left\n6=right\n8=down"
  },
  {
    "file": "Kemono Friends logo (by Volgy)(2017).ch8",
    "sha1": "b63bcd4e96a71717b84a6334cceffdf5f032e85e",
    "platform": "chip8",
    "title": "Kemono Friends logo",
    "release": "2017",
    "authors": ["Volgy"]
  },
  {
    "file": "Knight (by Simon Klit-Johnson)(2016).sc8",
    "sha1": "b3dcfd85a76a678960359e1ce9f742a4f9c35ed8",
    "platform": "schip",
    "title": "Knight",
    "release": "2016",
    "authors": ["Simon Klit-Johnson"]
  },
  {
    "file": "LabVIEW Splash Screen (by Richard James Lewis)(2019).ch8",
    "sha1": "fb8d0807a00353ae8071238a2eb7f1e555afe525",
    "platform": "chip8",
    "title": "LabVIEW Splash Screen",
    "release": "2019",
    "authors": ["Richard James Lewis"]
  },
  {
    "file": "LabVIEW Splash Screen (fix)(by Richard James Lewis)(2019).ch8",
    "sha1": "4333eff4cbb49e57f8c0fb12f1e4cd0ac1dedd56",
    "platform": "chip8",
    "title": "LabVIEW Splash Screen",
    "release": "2019",
    "authors": ["Richard James Lewis"],
    "description": "Code correction done by Marcel van Tongeren:\n\nReplaced SYS 0FF @200 with JP 202 as SYS 0FF is an invalid Chip 8 instruction and crashes the VIP\n."
  },
  {
    "file": "Labyrinthine (TempVar Studios)(2020).ch8",
    "sha1": "716fc9634c39f73afe795004589d353448a6c8e3",
    "platform": "chip8",
    "title": "Labyrinthine",
    "release": "2020",
    "authors": ["TempVar Studios"],
    "description": "\nLabyrinthine\n============\nby TempVar Studios (octojam 7)\n\n\nAbout:\n------\nWelcome to the labyrinth!\n\n- explore a huge world! over 120 screens to traverse!\n- go through collecting how you see fit!\n\nCan you escape the labyrinth?\n\n\n\nControls:\n---------\n5/7/8/9 = move"
  },
  {
    "file": "Lady Runner (noodulz)(2020).ch8",
    "sha1": "65e3432c942df6ce18db2c2d01d3260e56dd1e53",
    "platform": "chip8",
    "title": "Lady Runner",
    "release": "2020",
    "authors": ["noodulz"],
    "description": "\nLady Runner\n===========\nby noodulz (Octojam 7)\n\n\nAbout:\n------\nA short and simple CHIP-8 and XO-CHIP-supported game consisting of a simple runner. You are a lady knight \nwho has to defeat the incoming enemies to reach the princess and live happily ever after. Get touched by \nan enemy and you must start over!\n\n\nControls:\n---------\nPress '6' to attack and to continue the screen. \n\nNew update to come soon to expand the game! "
  },
  {
    "file": "Lainchain (by Ashton Harding)(2018).ch8",
    "sha1": "cbbbc76a440b4020ecb9a6c95e95e636a8b23214",
    "platform": "chip8",
    "title": "Lainchain",
    "release": "2018",
    "authors": ["Ashton Harding"]
  },
  {
    "file": "Lainchain (fix)(by Ashton Harding)(2018).ch8",
    "sha1": "004fa49c91fbd387484bda62f843e8c5bd2c53d2",
    "platform": "chip8",
    "title": "Lainchain",
    "release": "2018",
    "authors": ["Ashton Harding"],
    "description": "Code correction done by Marcel van Tongeren:\n\nAdded a JP 200 at end of code to get Code to loop instead of executing SYS 000 which would crash the VIP\nor any other undefined instruction that would be @272\n"
  },
  {
    "file": "Lan8ton's Ant (by Faffochip)(2015).xo8",
    "sha1": "a168709fcf09b28cd9b9519698d3d8a383944f43",
    "platform": "xochip",
    "title": "Lan8ton's Ant",
    "release": "2015",
    "authors": ["Faffochip"]
  },
  {
    "file": "Laser (unknown author)(199x).sc8",
    "sha1": "f31a8912ffb8a2920eb7ad5d645aa65a413b6ae9",
    "platform": "schip",
    "title": "Laser",
    "release": "199x",
    "images": ["Laser_SCHIP__1.png", "Laser_SCHIP__2.png"]
  },
  {
    "file": "Laser Defence (by Kyle Saburao)(2019).ch8",
    "sha1": "59aca79b4b18e1bfbc71065bb34448fed5e1db1e",
    "platform": "chip8",
    "title": "Laser Defence",
    "release": "2019",
    "authors": ["Kyle Saburao"],
    "description": "\nLaser Defence - by Kyle Saburao (2019)\n--------------------------------------\nTeam CHIPOTLE \n\n\nLasers are vastly superior to siege engines.\n\n\nControls:\n---------\n\"5\": \"TARGETING UP\",\n\"8\": \"TARGETING DOWN\",\n\"9\": \"TARGETING RIGHT\",\n\"7\": \"TARGETING LEFT\",\n\"6\": \"LAUNCH BEAM TARGETER\",\n\"4\": \"FIRE BEAM EARLY\""
  },
  {
    "file": "Legboy's Adventure 8 - Doki Doki Property Planning Panic (by Faffochip)(2015).xo8",
    "sha1": "5efc16ddebc1585b3c4d4cb27ce9fd76218c5d0a",
    "platform": "xochip",
    "title": "Legboy's Adventure 8 - Doki Doki Property Planning Panic",
    "release": "2015",
    "authors": ["Faffochip"]
  },
  {
    "file": "Letter Scroll (by Michael Wales)(2014).ch8",
    "sha1": "e6a027d00c524ab7ae00b720f64a06ad1137836c",
    "platform": "chip8",
    "title": "Letter Scroll",
    "release": "2014",
    "authors": ["Michael Wales"]
  },
  {
    "file": "Life is Gr8 (by Faffochip)(2015).xo8",
    "sha1": "858b55ce47e98a7b2238f8db33463f76fd15b18b",
    "platform": "xochip",
    "title": "Life is Gr8",
    "release": "2015",
    "authors": ["Faffochip"]
  },
  {
    "file": "Lights Out (by Dion Williams)(2016).ch8",
    "sha1": "234d1688bf4d1b34786cb9171b5f0800b3889874",
    "platform": "chip8",
    "title": "Lights Out",
    "release": "2016",
    "authors": ["Dion Williams"],
    "description": "\nLIGHTS OUT for CHIP-8\n    \nby Dion Williams\n\n===============================================================================\n\nWritten in 2017 by Dion Williams\n\nTo the extent possible under law, the author(s) \nhave dedicated all copyright\nand related and neighboring rights to this software \nto the public domain\nworldwide. This software is distributed without any warranty.\n\n\n\nYou should have received a copy of the CC0 Public Domain Dedication along with\nthis \nsoftware. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.\n\n===============================================================================\n\n\nKeys 1-9 on a CHIP-8 hex keypad are used to control a 3x3 grid of lights.\n\nPressing a key toggles that light and any horizontally/vertically adjacent\n lights. \nThe game is won when all lights have been turned off.\n\n\n\n\n"
  },
  {
    "file": "Line Demo (unknown aauthor)(20xx).sc8",
    "sha1": "a9bf29597674c39b4e11d964b352b1e52c4ebb2f",
    "platform": "schip",
    "title": "Line Demo",
    "release": "20xx",
    "images": ["Line_Demo_SCHIP__1.png", "Line_Demo_SCHIP__2.png"]
  },
  {
    "file": "Link Demo (by John Earnest)(2014).sc8",
    "sha1": "0b5522b1ce775879092be840b0e840cb1dea74fd",
    "platform": "schip",
    "title": "Link Demo",
    "release": "2014",
    "authors": ["John Earnest"]
  },
  {
    "file": "Locked in a Room with a Ghost (by TomR)(2015).ch8",
    "sha1": "ed9a9510aba2227ca9bb2d521adcaa903f433450",
    "platform": "chip8",
    "title": "Locked in a Room with a Ghost",
    "release": "2015",
    "authors": ["TomR"]
  },
  {
    "file": "Lombat Lombat Asoy! (fix)(by Razka173 Team)(2018).ch8",
    "sha1": "31bb555e6a1b06502425500a7fc61bc9d1a49164",
    "platform": "chip8",
    "title": "Lombat Lombat Asoy!",
    "release": "2018",
    "authors": ["Razka173 Team"],
    "description": "Code correction done by Marcel van Tongeren:\nReplaced CALL 41C @364 with CALL 41E to avoid execution of invalid instruction (F800) @41C \n\n\n\nKey:\n\n5 = Jump\n7 = Go Left\n9 = Go Right\n\n\n====================================================\n\nArsitektur Komputer 109\n\n\n====================================================\n\nTeam:\n\n1. Razka Agniatara\n2. Dwiki Sulthon\n3. Vivi Rofiah\n4. Aty Lestari\n\n\n====================================================\n\n\nProgram Studi Ilmu Komputer 2017\n\nUniversitas Negeri Jakarta\n\n\n\n\n\n"
  },
  {
    "file": "Loopz (by Andreas Daumann)(1993).sc8",
    "sha1": "3c444e43e5f02dac4324b7b24cd38ef4938a4b56",
    "platform": "schip",
    "title": "Loopz",
    "release": "1993",
    "authors": ["Andreas Daumann"],
    "images": ["Loopz_SCHIP__1.png", "Loopz_SCHIP__2.png"]
  },
  {
    "file": "Loopz (with difficulty select) (by hap)(2006).sc8",
    "sha1": "a2788177b820a28cd27e6d2d180340cb7f4948fb",
    "platform": "schip",
    "title": "Loopz",
    "release": "2006",
    "authors": ["hap"],
    "description": "difficulty select for Loopz, by hap, feb 17th 2006\n\nAndreas Daumann's Loopz was originally only for HP48\nthis change adds difficulty select within the SCHIP program, so it'll work\non SCHIP emulators, no changes were made in the main program\n\nto select difficulty:\nsame keys as in loopz: c=up, d=down, 5=ok\n\nv0,v1,v2 are set before running loopz\nv1 and v2 should be $AA, dunno why\nv0 is the difficulty (0 to 9)\nsaved into flags and the game runs as normal\n\noriginal loopz program: $200-$f9d\ndifficulty select: $f9e-$fff (full ;p )\n\n"
  },
  {
    "file": "Loose Cannon (demo).ch8",
    "sha1": "238585615069ec905aa56f0048880fc6eb456d4e",
    "platform": "chip8",
    "title": "Loose Cannon"
  },
  {
    "file": "Loose Cannon (fix)(demo).ch8",
    "sha1": "ed96881bf0d1e97157b04d8a4632f911067fe9e6",
    "platform": "chip8",
    "title": "Loose Cannon",
    "description": "Code correction done by Marcel van Tongeren:\n\nAdded a JP 200 at end of code to get Code to loop instead of executing SYS 000 which would crash the VIP \nor any other undefined instruction that would be @2D6\n."
  },
  {
    "file": "Love8 intro (by Athir Saleem)(2019).ch8",
    "sha1": "e55f36b9ecd6fbbeb626a78f222011bddd5e5197",
    "platform": "chip8",
    "title": "Love8 intro",
    "release": "2019",
    "authors": ["Athir Saleem"]
  },
  {
    "file": "M'Lady (demo).ch8",
    "sha1": "7d6cc6068ea324f81873353d8a28fe2aa2cf8862",
    "platform": "chip8",
    "title": "M'Lady"
  },
  {
    "file": "M8ze.ch8",
    "sha1": "ce33f148bfd5f1ca9edc68988b900a256905d057",
    "platform": "chip8",
    "title": "M8ze",
    "description": "A top down maze game without walls. It's only a prototype I'm afraid so there is not much game.\n\nIt's on an 8x8 looping grid.\n\nWASD to move around, E to interact"
  },
  {
    "file": "Mabe Village from Link's Awakening (sound)(unknown author)(201x).xo8",
    "sha1": "ce15f2f4281b1069d33e00c801d5ed4390049a76",
    "platform": "xochip",
    "title": "Mabe Village from Link's Awakening",
    "release": "201x"
  },
  {
    "file": "Magic Sprite (by Alex Osipchuck)(2017).ch8",
    "sha1": "f27d2375671fba01f87045f1f1fb67bcc3b284ee",
    "platform": "chip8",
    "title": "Magic Sprite",
    "release": "2017",
    "authors": ["Alex Osipchuck"],
    "images": ["Magic_Square_SCHIP__2.png"]
  },
  {
    "file": "Magic Square (by David Winter)(199x).sc8",
    "sha1": "e4ef6fff9813c43bd7ad2ecaf02d1a3135d68418",
    "platform": "schip",
    "title": "Magic Square",
    "release": "199x",
    "authors": ["David Winter"],
    "description": "****************************************************************************\n                     ����  ����� �   � ����� ����� �����\n                      ���� �  �� �   � ����� ����  ���\n                      ���   �� �  ���  �   � �  �  �����\n                        A magic square in Super CHIP-8\n                      (C)Copyright 1997 by David WINTER\n****************************************************************************\n\n\n       This game, as well as the others for this scene, are FREE\n       and freely ditributable. If you paid to have it, you have\n       been stolen. If you got money to give it, you're a thief.\n\n\n\n       The rules of this game are very simple: the game is played\n       in a variable size grid made of 3*3 to 8*8 squares, so the\n       level of the game is designated by the width of the grid.\n       Initially, all the squares of the grid are WHITE. The goal\n       is to turn then BLACK by inverting their color, knowing\n       that inverting the colour of a square will also invert these\n       of the squares placed just on the left, right, up and down\n       of it...\n       Some levels are very simple: level 3 can be finished with\n       only 5 inversions, and level 4 needs only 4 inversions to\n       be completed...\n       Once a level is completed, the game is finished. To play\n       again, just reset the emulator.\n\n       I know I could have implemented some sort of inversions\n       counter, and next-level playing after a level is finished,\n       but I missed some time to do this... Anyway, have fun !\n\n       I could also have given the source of this program, but it\n       is not documented, so it would not be interesting to those\n       who are looking for help in programming.\n\n\n       The keys are:\n                   [8] :   UP\n                   [4] :   LEFT (lower level under level selection)\n                   [5] :   INVERT SQUARE (start game under level selection)\n                   [6] :   RIGHT (upper level under level selection)\n                   [2] :   DOWN\n",
    "images": ["Magic_Square_SCHIP__1.png"]
  },
  {
    "file": "Mandelbrot Program (by A-KouZ1)(2018).ch8",
    "sha1": "3643118e2e237deab98151b742f34caf9533dc05",
    "platform": "chip8",
    "title": "Mandelbrot Program",
    "release": "2018",
    "authors": ["A-KouZ1"]
  },
  {
    "file": "Mario Demo (by Dr.Stab)(2015).xo8",
    "sha1": "310e523071c697503f0da385997f9c77f9ad0ea9",
    "platform": "xochip",
    "title": "Mario Demo",
    "release": "2015",
    "authors": ["Dr.Stab"]
  },
  {
    "file": "Master B8 (Andrew James)(2021).xo8",
    "sha1": "0068ff5421f5d62a1ae1c814c68716ddb65cec5b",
    "platform": "xochip",
    "title": "Master B8",
    "release": "2021",
    "authors": ["Andrew James"],
    "description": "Master B8 by Andrew James (2021)\n--------------------------------\nXO-CHIP Game\n\nUse your newly developed mind control\ndevice to catch fish. With the limited\ncontrol time available eat smaller fish,\nmaking the largest possible catch.\n\n"
  },
  {
    "file": "Mastermind (William Donnelly)(2015).ch8",
    "sha1": "d2fa3927b31f81fc06cd9466123309c59264fa41",
    "platform": "chip8",
    "title": "Mastermind",
    "release": "2015",
    "authors": ["William Donnelly"],
    "description": "\nMastermind - by William Donnelly (2015)\n---------------------------------------\nOctoJam 2\n\n\nMasterMind was originally intended to be written for the 2015 OctoJam Octo-ber Jam II contest.\nBut there wasn't enough time to finish it.\n\nInstructions and rules for playing the game are included in the game play.\n\n\nControls:\n---------\nUses all keys to play.\n"
  },
  {
    "file": "Matches (unknown author)(199x).sc8",
    "sha1": "24fd50a95b84e3a42e336a06567a9752f17b9979",
    "platform": "schip",
    "title": "Matches",
    "release": "199x",
    "images": ["Matches_SCHIP__1.png", "Matches_SCHIP__2.png"]
  },
  {
    "file": "Maze (alt) (by David Winter)(199x).ch8",
    "sha1": "8b70080adbac44513ec60005734a816372b845ec",
    "platform": "chip8",
    "title": "Maze",
    "release": "199x",
    "authors": ["David Winter"],
    "description": "Maze, by David Winter\n\nDrawing a random maze like this one consists in drawing random diagonal\nlines. There are two possibilities: right-to-left line, and left-to-right\nline. Each line is composed of a 4*4 bitmap. As the lines must form non-\ncircular angles, the two bitmaps won't be '/' and '\\'. The first one\n(right line) will be a little bit modified. See at the end of this source.\n\nThe maze is composed of 16 lines (as the bitmaps are 4 pixels high), each\nline consists of 32 bitmaps.\nBitmaps are drawn in random mode. We choose a random value (0 or 1).\nIf it is 1, we draw a left line bitmap. If it is 0, we draw a right one.\n"
  },
  {
    "file": "Maze276 (by Firas Fakih)(2019).ch8",
    "sha1": "95384fbb895b6420da690bc06cb16739c9a5d800",
    "platform": "chip8",
    "title": "Maze276",
    "release": "2019",
    "authors": ["Firas Fakih"]
  },
  {
    "file": "Memory Shift (by A-Kouz1)(2017).ch8",
    "sha1": "6b9f23e6433b7d7ccfcb18015c5fc1348006d386",
    "platform": "chip8",
    "title": "Memory Shift",
    "release": "2017",
    "authors": ["A-Kouz1"]
  },
  {
    "file": "Mines! - The minehunter (by David Winter)(199x).sc8",
    "sha1": "6d4514ae3a43c307763648b0bdd485fb77bcf20d",
    "platform": "schip",
    "title": "Mines! - The minehunter",
    "release": "199x",
    "authors": ["David Winter"],
    "description": "MINES\nA mine hunter in Super CHIP-8\n(C)Copyright 1997 by David WINTER\n\n\nThis source is to show to the novice programmer how we can program some nice games (i.e: not PONG and clones (just teasing the nostalgics...)) in CHIP-8 and Super CHIP-8.\n\nI decided to diffuse this source in the hope that some people will write new games for the SCHIP/CHIP-8 emulators.\n\nThis game, as well as the others for this scene, are FREE and freely distributable. If you paid to have it, you have been stolen. If you got money to give it, you're a thief.\n\n\n\nThe rules of this game are very simple: the game is played on a 18*9 squares playing field. On this playing field, some squares are MINED, some others are not. The goal is to find all the non mined ones. To do so, you just move around a cursor, and check the squares you want. If the square you're checking is mined, you lost, and all the mines are shown. If not, the game puts a number on the square, which tells how many mines are placed around it (if there are no mines around, the square is blanked). It is to you to make the logic deductions to find the non mined squares. To help you, the game allows putting marks on the squares which are believed to be mined.\n\nThe keys are:\n[8] :   UP\n[4] :   LEFT (lower level under level selection)\n[5] :   SHOW SQUARE (start game under level selection)\n[6] :   RIGHT (upper level under level selection)\n[2] :   DOWN\n[*] :   MARK SQUARE AS MINED\n"
  },
  {
    "file": "Minesweep8r (James Kohli aka Hottie Pippen)(2014).ch8",
    "sha1": "80d8baefbc2c2c2eab78a7b09c621f7618357b84",
    "platform": "chip8",
    "title": "Minesweep8r",
    "release": "2014",
    "authors": ["James Kohli aka Hottie Pippen"]
  },
  {
    "file": "Minesweeper (by AKouZ1)(2017).sc8",
    "sha1": "99a97c772fc93d669b73016761ea6fee0210497e",
    "platform": "schip",
    "title": "Minesweeper",
    "release": "2017",
    "authors": ["AKouZ1"],
    "description": "\nMinesweep8r - by James Kohli aka Hottie Pippen (2014)\n-----------------------------------------------------\nOcto-Ber Jam 1\n\n\nMinesweper port for the Chip-8.\n\n\nControls:\n---------\n5/7/8/9 (WASD) to move, 4 (Q) to click, 6 (E) to flag, D (R) to restart.\n\n\n\n\nCan play online here:\nhttps://johnearnest.github.io/Octo/index.html?gist=384b836bbe4279fdae2b",
    "images": [
      "Mines_-_The_minehunter_SCHIP__1.png",
      "Mines_-_The_minehunter_SCHIP__2.png"
    ]
  },
  {
    "file": "Mini Lights Out (by Tobias V. Langhoff)(2019).ch8",
    "sha1": "2e2d9b370e08d6994fd2ded938a56b32b07ad768",
    "platform": "chip8",
    "title": "Mini Lights Out",
    "release": "2019",
    "authors": ["Tobias V. Langhoff"]
  },
  {
    "file": "Miniature Golf (by R.G.Marchessault)(1980).ch8",
    "sha1": "b5b66c3b0b2a109bfb166fdc4d2d2a352c32da53",
    "platform": "chip8",
    "title": "Miniature Golf",
    "release": "1980",
    "authors": ["R.G.Marchessault"],
    "description": "This is the Miniature Golf game from the VIP II game manual. I don't have a copy \nof that manual so not sure how it works exactly. \n\nStart-up us key 1, 2, 3 or 4 depending on how many players you want.\n\nThis is a chip 8 based game.\n\nThe Miniature Golf.hex and Miniature Golf.bin files include:\n000 - 1FF Elf II Chip 8 Interpreter (part 1)\n200 - 5FF Miniature Golf chip 8 code, start from giantboard with 00-IN, 00-IN, 00-IN, IN\n600 - DFF Probably data that happened to be in memory at time of 'save'\nE00 - E6D Elf II Chip 8 Interpreter (part 2)\nF00 - FFF Used for screen memory so code/data in file is never used\n"
  },
  {
    "file": "Minimal Nethack (by John Earnest)(2015).ch8",
    "sha1": "6ba06eb27ad56e6f26b7d809e06394f719a89d01",
    "platform": "chip8",
    "title": "Minimal Nethack",
    "release": "2015",
    "authors": ["John Earnest"],
    "description": "\nMinimal Nethack - by John Earnest (2015)\n----------------------------------------\nhttps://codegolf.stackexchange.com/questions/52547/minimal-nethack\n\n\nThis may not be considered legal, but why the hell not. I wrote my program in CHIP-8, \na bytecode-based programming language for a virtual game console. \n\n\nControls:\n---------\nYou can move the player with the ASWD keys, or the 7589 keys on the original CHIP-8 keypad.\n\n\n===========================================================================================\n\n\n\n\n\nExtra Info:\n-----------\n\nYou can try the complete program (99 bytes) in your browser using an emulator/debugger \nI wrote called Octo:\n\nhttp://johnearnest.github.io/Octo/index.html?gist=1318903acdc1dd266469\n\n\n\nA hex dump of that complete program is as follows:\n\n0x60 0x14 0x61 0x04 0xC4 0x3C 0xC5 0x08\n0x22 0x36 0xF6 0x0A 0x22 0x52 0x40 0x00\n0x12 0x16 0x46 0x07 0x70 0xFC 0x40 0x3C\n0x12 0x1E 0x46 0x09 0x70 0x04 0x41 0x00\n0x12 0x26 0x46 0x05 0x71 0xFC 0x41 0x10\n0x12 0x2E 0x46 0x08 0x71 0x04 0x22 0x52\n0x3F 0x01 0x12 0x0A 0x00 0xFD 0xA2 0x58\n0xD4 0x54 0x22 0x52 0x62 0xFF 0xA2 0x5B\n0xD2 0x34 0x72 0x04 0x32 0x3F 0x12 0x40\n0x62 0xFF 0x73 0x04 0x33 0x14 0x12 0x40\n0x00 0xEE 0xA2 0x5F 0xD0 0x14 0x00 0xEE\n0xA0 0xA0 0x40 0x00 0x00 0x20 0x00 0xF0\n0x90 0x90 0xD0\n"
  },
  {
    "file": "Modem Dialing (sound)(unknown author)(201x).xo8",
    "sha1": "1e981dac636d88d26a3fc056a53b28175f1d9b82",
    "platform": "xochip",
    "title": "Modem Dialing",
    "release": "201x"
  },
  {
    "file": "Monty Hall (by blinky)(2016).ch8",
    "sha1": "58b4865fec81427fd3c52bdc62b2230d412c12ea",
    "platform": "chip8",
    "title": "Monty Hall",
    "release": "2016",
    "authors": ["blinky"],
    "description": "\nMonty Hall - by blinky (2016)\n-----------------------------\nOctoJam 3\n\n\nUse the number \"1\", \"2\" or \"3\" to choose an initial door. When asked if you want to \nswitch, enter a number again.\n\nIn the upper right corner, the first number is the number of wins, and the second \nnumber is the total number of tries.\n\nIn short, it is always better to switch doors once a door is opened for you. \nInformation on why can be found on the web: https://en.wikipedia.org/wiki/Monty_Hall_problem\n\nI thought it would be interesting to experience this first-hand. And I swear, I'm not \nmessing with the random numbers! :)\n\n\n"
  },
  {
    "file": "Morse Code Demo (by Matthew Mikolay)(2015).ch8",
    "sha1": "2925c79f35e4ced1923b5ef8ba3e795951e6de21",
    "platform": "chip8",
    "title": "Morse Code Demo",
    "release": "2015",
    "authors": ["Matthew Mikolay"],
    "description": "# Morse Code Demo\n\n\nThis demo prints \"COSMAC VIP\" to the screen while using the sound timer to play\n\nthe corresponding Morse code signal.\n\n\n\tmorse_demo.ch8 (MM)\n\nDisplays \"COSMAC VIP\" (which means it contains sprites for at least those\ncharacters) while also playing the Morse code for those letters.\n\n\n(MM) Matthew Mikolay, proprietor of the RetroComputing page at\nhttp://retro.mattmik.com/index.html\n"
  },
  {
    "file": "Move Figure (John Earnest-20xx).ch8",
    "sha1": "dc5a12fa3ad88ea6c42dff1720be14f6772aef59",
    "platform": "chip8",
    "title": "Move Figure",
    "authors": ["John Earnest-20xx"]
  },
  {
    "file": "Mr. Worm (by Ryan Hitchman)(2014).sc8",
    "sha1": "6f8e85158be98f30bf3cd5df60d7a7ad71c5f3e1",
    "platform": "schip",
    "title": "Mr",
    "release": "2014",
    "authors": ["Ryan Hitchman"]
  },
  {
    "file": "Mueve (Diego Royo)(2017).ch8",
    "sha1": "30c8ee7181173d7f213e8148cdc9a5157caec9f7",
    "platform": "chip8",
    "title": "Mueve",
    "release": "2017",
    "authors": ["Diego Royo"],
    "description": "; Programa de prueba que mueve el sprite del 0 por la pantalla\n; Controles: 2, 4, 6 y 8 para abajo, izquierda, derecha y arriba respectivmente\n\nTest program that moves the 0 sprite across the screen\n; Controls: 2, 4, 6 and 8 for down, left, right and up respectively\n\n\n\n\n\nld v0, 0 ; px sprite\nld v1, 0 ; py sprite\nld v2, 1 ; cte 1\nld f, v0 ; cargar en i @ de sprite 0\ndrw v0, v1, 5 ; dibujo inicial\nkey:\nld v3, k\ndrw v0, v1, 5\nsne v3, 2 ; abajo\nadd v1, v2\nsne v3, 8 ; arriba\nsub v1, v2\nsne v3, 4 ; izquierda\nsub v0, v2\nsne v3, 6 ; derecha\nadd v0, v2\ndrw v0, v1, 5\njp key\n\n"
  },
  {
    "file": "Multiply Routine demo by (John Deeny)(2015).xo8",
    "sha1": "2b48aa674707878bf6d22496a402985a9f7db9cb",
    "platform": "xochip",
    "title": "Multiply Routine demo by",
    "release": "2015",
    "authors": ["John Deeny"]
  },
  {
    "file": "Music Player (by TomR)(2015).xo8",
    "sha1": "59bdc7f990322d274d711b6b6982c7e8c9098e9e",
    "platform": "xochip",
    "title": "Music Player",
    "release": "2015",
    "authors": ["TomR"]
  },
  {
    "file": "Mysterious (fix)(by Guillaume Desquesnes)(2019).ch8",
    "sha1": "3ea97f251de6e72798234a2930205256a8f5d8cf",
    "platform": "chip8",
    "title": "Mysterious",
    "release": "2019",
    "authors": ["Guillaume Desquesnes"],
    "description": "Fix done by Marcel van Tongeren: On the VIP numbers were not shown at all. I added number \ngraphics 0 to 9 @322-352 and changed the LD I,000 @250 & @26A to LD I,322\n\n\n\n\nMysterious (Guillaume Desquesnes)(2019)\n---------------------------------------\n\nOnce \"GUESS\" appears on screen, press \"F\" on the hexpad to start and then,\nenter two digits from 0 to 9 to guess the number between 00 and 99 that\nthe program has randomly picked. \n\nIf you enter (as an example) \"25\", the program then will tell you either\nto guess beneath \"25\" by showing an arrow pointing in the left direction\nor an arrow pointing to the right to guess higher than \"25\".\n\nOnce you guessed the number, you will hear a tone for one second. :)\n\n\n\nManual written by Sly DC.\n\n\n\n\nhttps://github.com/elnabo/Chip8-utilities/tree/master/examples"
  },
  {
    "file": "No Internet (unfinished)(pushfoo)(2020).xo8",
    "sha1": "4cc4eff70802ac7a3b374a442411a13415f5e4d8",
    "platform": "xochip",
    "title": "No Internet",
    "release": "2020",
    "authors": ["pushfoo"],
    "description": "\nNo internet\n===========\nby pushfoo (Octojam 7) - Unfinished\n\n\nAbout:\n------\nA bad demake of the dino runner game. Had technical issues, ran out of time. :(\n\nI'll be improving it in the future.\n\n\nControls:\n---------\n\"5\" to jump and \"8\" to stoop."
  },
  {
    "file": "No_Rom_Selected (by MissMuffin)(2019).ch8",
    "sha1": "4cb8bc4ddcfd23822c4a38990ac7e4225a323cec",
    "platform": "chip8",
    "title": "No_Rom_Selected",
    "release": "2019",
    "authors": ["MissMuffin"]
  },
  {
    "file": "Nonogram (Verisimilitudes)(2021).ch8",
    "sha1": "de259351c65f790af035a4607a508c366bf4eaf2",
    "platform": "chip8",
    "title": "Nonogram",
    "release": "2021",
    "authors": ["Verisimilitudes"]
  },
  {
    "file": "Nyan Cat (Kouzerumatsu)(2022).xo8",
    "sha1": "04e18ff4ae42e3056c502e0c99d4740ecea65966",
    "platform": "xochip",
    "title": "Nyan Cat",
    "release": "2022",
    "authors": ["Kouzerumatsu"]
  },
  {
    "file": "Octo Bird (by Cody Hoover)(2016).ch8",
    "sha1": "3450e0d92e0bbf8e9d3065fd088cd6dfa5f9441d",
    "platform": "chip8",
    "title": "Octo Bird",
    "release": "2016",
    "authors": ["Cody Hoover"],
    "description": "\nOcto Bird - by Cody Hoover (2016)\n---------------------------------\n\nAnother \"Flappy Bird\" clone.\n\n\nControls:\n---------\nPress \"5\" to flap/restart a new game."
  },
  {
    "file": "Octo Crawl (by taqueso)(2016).xo8",
    "sha1": "e2cf46c544bee2ef8a8b21dba1c583d5121b1b96",
    "platform": "xochip",
    "title": "Octo Crawl",
    "release": "2016",
    "authors": ["taqueso"]
  },
  {
    "file": "Octo Lander (Private Butts)(2020).ch8",
    "sha1": "bcb80940a8ed339a97917025d67d3217d8b89717",
    "platform": "chip8",
    "title": "Octo Lander",
    "release": "2020",
    "authors": ["Private Butts"],
    "description": "\nOcto Lander\n===========\nby Private Butts (Octojam 7)\n\n\nAbout:\n------\nA flawed implementation of lunar lander for the chip-8 platform. It contains a single level,  \nand the ship seems to act pretty squirrely under some circumstances.\n\n\nControls:\n---------\nUse \"5/7/8/9\" to add thrust to your ship, and the \"D\" key resets the game. \n\nThank you for checking this out!\n"
  },
  {
    "file": "Octo Roads (by James Abbatiello)(2016).xo8",
    "sha1": "8603e177fcbb04a5b1a685c216380bee6a05b0f2",
    "platform": "xochip",
    "title": "Octo Roads",
    "release": "2016",
    "authors": ["James Abbatiello"]
  },
  {
    "file": "Octo Slam (by Dupersaurus)(2017).sc8",
    "sha1": "28e8f7b405d48647eb090a550ec679327c57f2f5",
    "platform": "schip",
    "title": "Octo Slam",
    "release": "2017",
    "authors": ["Dupersaurus"]
  },
  {
    "file": "Octo Slam-Home Run Derby (Jason DuPertuis)(2017).ch8",
    "sha1": "9dc674f4a7c8662671e9337421acea49e0447090",
    "platform": "chip8",
    "title": "Octo Slam-Home Run Derby",
    "release": "2017",
    "authors": ["Jason DuPertuis"],
    "description": "\nOcto Slam/Home Run Derby\n========================\n\nHit as many home runs as you can before you run out of outs. Recommended to run at 100 cycles/frame.\nBatter Controls\n\nSwing high 1\n\nSwing mid 2\n\nSwing low 3\n\nReset Z\n\nHit the solid border to score a run, hit the dotted border to hit an out. Combine swing timing and \nheight to hit a home run. Missing timing or height will result in a mis-hit.\nPitcher Controls (Coming Soon)\nPitch \tHeight \tKey\nFastball \tHigh \t1\n\tMid \tQ\n\tLow \tA\nChangeup \tHigh \t2\n\tMid \tW\n\tLow \tS\nCurve \tHigh \t3\n\tMid \tE\n\tLow \tD\nTODOs\n\n    Swap teams after a certain number of outs\n    Fine-tune hitting algorithm for a wider range of angles off the bat\n\n\n\n"
  },
  {
    "file": "Octo Space Program (rozisdead)(2020).xo8",
    "sha1": "838706ee2d7001e6e909360f9a02f48d81d3a0d6",
    "platform": "xochip",
    "title": "Octo Space Program",
    "release": "2020",
    "authors": ["rozisdead"],
    "description": "\nOcto Space Program\n==================\nby rozisdead (Octojam 7)\n\n\nAbout:\n------\nBuild ever bigger rockets and explore the solar system!\n\n\nControls:\n---------\n* 5/7/8/9 (or WASD) to build your rocket.\n* 6 to launch and select targets"
  },
  {
    "file": "OctoPi (TomR)(2021).xo8",
    "sha1": "23a08dc955d6afe95b9a4880b0e75d7fbf0b4dac",
    "platform": "xochip",
    "title": "OctoPi",
    "release": "2021",
    "authors": ["TomR"],
    "description": "8 Bit Pi created in Octo. OctoPi."
  },
  {
    "file": "OctoRoads (by abbeyj)(2017).sc8",
    "sha1": "733d41d4c367214cd177071ee6a783a46cf14bf4",
    "platform": "schip",
    "title": "OctoRoads",
    "release": "2017",
    "authors": ["abbeyj"]
  },
  {
    "file": "Octoamp.xo8",
    "sha1": "5634ce5f7f08fee69eec2327529c646d5f596be0",
    "platform": "xochip",
    "title": "Octoamp",
    "description": "About\n-----\nI did this to see how possible it would be to have audio and control in Chip8/Octo.\n\n\nControls\n--------\nMove with A and D, Use Command with E, Commands: Pause, Play, Lower Note Speed, Raise Note Speed, \nLower Pitch, Raise Pitch, and Reset Why Jingle Bells\n\nSimple score, easy to hear changes, drives you mad when debugging the game."
  },
  {
    "file": "Octofonts (by John Deeny)(2016).xo8",
    "sha1": "eb1a09cc11c73938f39ce8d52c8e06576dec3a32",
    "platform": "xochip",
    "title": "Octofonts",
    "release": "2016",
    "authors": ["John Deeny"]
  },
  {
    "file": "Octovore (by Pangasaurus Rex)(2015).sc8",
    "sha1": "1ff6e2a8920c5b48def34348df65226285f39ce9",
    "platform": "schip",
    "title": "Octovore",
    "release": "2015",
    "authors": ["Pangasaurus Rex"]
  },
  {
    "file": "Only the Good Die Neil Young (cishetkayfaber)(2020).ch8",
    "sha1": "8af7d183230de959a53ec84418b9e2609838d3fb",
    "platform": "chip8",
    "title": "Only the Good Die Neil Young",
    "release": "2020",
    "authors": ["cishetkayfaber"],
    "description": "\nOnly the Good Die Neil Young\n============================\nby cishetkayfaber (Octojam 7)\n\n\nAbout:\n------\nThe year is 197X, and the universe is under threat... a time-traveling shape-shifting, non-binary, and \nincredibly sexy threat to be precise.\n\nOnly one man.. Neil Young... can save us all.\n\n\nControls:\n---------\nUse \"4, 5, 6, 7, 8, and 9\" keys on your hex keypad to gather the power of the 6 scions to multiply the power \nof Neil until the 88 second ETA is up.\n\n\nHints:\n------\n* Maximum power number of each scion increases along with the power of the other scions.\n* Try making a Super Scion...\n* While the power of all scions are necessary in order to help Neil... ultimately, they may not all be a force \n  for good in the universe. Choose your scion power levels wisely.\n\n\n"
  },
  {
    "file": "PSX Boot Sim (by Shendo).ch8",
    "sha1": "5a2c897da9cc78f6d75123818e04db4cd1044b63",
    "platform": "chip8",
    "title": "PSX Boot Sim",
    "authors": ["Shendo"]
  },
  {
    "file": "Pancake Panic (by Aaron Williams)(2018).ch8",
    "sha1": "a7aba6032d4a01336eb0cf4f43ce28709ac451e6",
    "platform": "chip8",
    "title": "Pancake Panic",
    "release": "2018",
    "authors": ["Aaron Williams"],
    "description": "\nPancake8o\nA version of the pancake problem for CHIP 8 written in Octo.\n\nYou can play the game online. (http://johnearnest.github.io/Octo/index.html?key=4SIMsAHU)\n\nThis game was inspired by a mathematical problem posed by Jacob E. Goodman. He published \nthe problem under the pseudonym Harry Dweighter aka �Harried Waiter� and the backgound \nstory in this game paraphrases his original text. See this link for a discussion of the \noriginal problem and its interesting history.\n\nhttps://www.theguardian.com/science/blog/2013/nov/14/flipping-pancakes-mathematics-jacob-goodman\n\n\nThe first version of this game was submitted to OctoJam V. That version of the game is missing \nseveral important game play elements, but you can also try it out online.\n\nhttp://johnearnest.github.io/Octo/index.html?key=EUNzh3qY\n\n\n\n\n\n\n\n\n\n\n\n\n0x1D 0x28 0x04 0x01 0x04 0x03 0x02 0x01 0x05 0x06 0x07 0x08 0x04 0x02 0x03 0x01 0x02 0x04 0x05 0x06 0x07 0x08 0x04 0x03 0x02 0x04 0x03 0x01 0x05 0x06 0x07 0x08 0x04 0x03 0x03 0x02 0x04 0x01 0x05 0x06 0x07 0x08 0x05 0x03 0x04 0x03 0x05 0x02 0x01 0x06 0x07 0x08 0x05 0x04 0x04 0x03 0x01 0x05 0x02 0x06 0x07 0x08 0x06 0x07 0x04 0x06 0x02 0x05 0x01 0x03 0x07 0x08 0x07 0x08 0x06 0x03 0x05 0x01 0x07 0x04 0x02 0x08 0x08 0x09 0x01 0x06 0x05 0x08 0x03 0x07 0x02 0x04 0x08 0x01 0x08 0x07 0x06 0x05 0x04 0x03 0x02 0x01 0x05 0x01 0x03 0x02 0x01 0x05 0x04 0x06 0x07 0x08 0xA2 0x02 0x00 0xEE 0xA2 0x0C 0x00 0xEE 0xA2 0x16 0x00 0xEE 0xA2 0x20 0x00 0xEE 0xA2 0x2A 0x00 0xEE 0xA2 0x34 0x00 0xEE 0xA2 0x3E 0x00 0xEE 0xA2 0x48 0x00 0xEE 0xA2 0x52 0x00 0xEE 0xA2 0x5C 0x00 0xEE 0xA2 0x66 0x00 0xEE 0x80 0xB0 0x80 0x0E 0x80 0x0E 0xB2 0x70 0x22 0x9C 0xF0 0x65 0x89 0x00 0xF0 0x65 0x8C 0x00 0x8D 0xC0 0xF3 0x65 0xA3 0x08 0xF3 0x55 0x22 0x9C 0xF0 0x65 0xF0 0x65 0xF3 0x65 0xF3 0x65 0xA3 0x0C 0xF3 0x55 0x8A 0x90 0x7A 0xFF 0x00 0xEE 0x6B 0x00 0x22 0xA4 0x2C 0x1E 0x23 0x00 0x00 0xEE 0x22 0xA4 0x23 0x00 0x00 0xEE 0x23 0x00 0x22 0xD4 0x00 0xEE 0x4B 0x00 0x00 0xEE 0x23 0x00 0x7B 0xFF 0x22 0xA4 0x2C 0x1E 0x23 0x00 0x00 0xEE 0x23 0x00 0x7B 0x01 0x4B 0x09 0x00 0xEE 0x22 0xA4 0x2C 0x1E 0x23 0x00 0x00 0xEE 0x2A 0x3A 0x29 0xC6 0x2A 0x20 0x00 0xEE 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xA3 0x08 0x62 0x00 0x92 0x70 0x13 0x26 0xF0 0x65 0x72 0x01 0x13 0x1C 0x00 0xEE 0xA3 0x10 0x62 0x00 0x92 0x70 0x13 0x36 0xF0 0x65 0x72 0x01 0x13 0x2C 0x00 0xEE 0x23 0x18 0xF0 0x65 0x00 0xEE 0x23 0x28 0xF0 0x65 0x00 0xEE 0x23 0x18 0x80 0x80 0xF0 0x55 0x00 0xEE 0x23 0x28 0x80 0x80 0xF0 0x55 0x00 0xEE 0xA3 0x08 0xF3 0x65 0xA3 0x10 0xF3 0x55 0xA3 0x08 0xF3 0x65 0xF3 0x65 0xA3 0x14 0xF3 0x55 0x00 0xEE 0x23 0x54 0x64 0x00 0x85 0xA0 0x87 0x50 0x23 0x3E 0x88 0x00 0x87 0x40 0x23 0x44 0x45 0x00 0x13 0x82 0x74 0x01 0x75 0xFF 0x13 0x6E 0x00 0xEE 0x67 0x00 0x63 0x01 0x23 0x38 0x88 0x00 0x98 0x30 0x13 0x94 0x68 0x00 0x00 0xEE 0x77 0x01 0x73 0x01 0x97 0x90 0x13 0x9E 0x13 0x88 0x68 0x01 0x00 0xEE 0xFC 0xFC 0xFC 0xFC 0xFC 0xFC 0xFC 0x04 0x0E 0x15 0x04 0x04 0x04 0x04 0x04 0x04 0x15 0x0E 0x04 0x00 0x11 0x0A 0x00 0x00 0x00 0x01 0x01 0x03 0x03 0x07 0x07 0x0F 0x0F 0x1F 0x1F 0x3F 0x3F 0x7F 0x7F 0xFF 0xFF 0x00 0x00 0x80 0x80 0xC0 0xC0 0xE0 0xE0 0xF0 0xF0 0xF8 0xF8 0xFC 0xFC 0xFE 0xFE 0xFF 0xFF 0xEA 0x88 0xEA 0x8A 0x8A 0x00 0x00 0x00 0xC7 0xAC 0xA3 0xCE 0x80 0x80 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0x80 0x40 0x20 0x10 0x08 0x04 0x62 0x01 0x80 0x40 0x20 0x10 0x08 0x04 0x62 0x01 0x80 0x40 0x20 0x10 0x08 0x04 0x62 0x01 0x80 0x40 0x20 0x10 0x08 0x04 0x62 0x01 0x8C 0x46 0x23 0x11 0x88 0xC4 0x02 0x3F 0x8C 0x40 0x23 0x11 0x88 0x04 0x02 0x01 0x80 0x40 0x23 0x11 0xF8 0x04 0x06 0x01 0x80 0x40 0x23 0x11 0x88 0x04 0x02 0x01 0x80 0x40 0x23 0x11 0x88 0x04 0x02 0x3F 0x80 0x46 0x23 0x10 0x08 0xC4 0x02 0x01 0x8F 0xC6 0x23 0x10 0x08 0xC4 0x62 0x01 0x8F 0xC6 0x23 0x10 0x08 0xC4 0x62 0x01 0x8F 0xC6 0x23 0x10 0x08 0xC4 0x62 0x01 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xF0 0xFF 0x80 0x40 0x20 0x11 0x80 0x7F 0xF0 0xFF 0x80 0x40 0x20 0x11 0x80 0x7F 0xFF 0xFF 0x80 0x40 0x20 0x11 0x80 0x7F 0xE0 0x7F 0x80 0x40 0x20 0x11 0x80 0x7F 0xE0 0x7F 0x8C 0x46 0x23 0x11 0x8C 0x7F 0xFF 0xFF 0x8C 0x40 0x23 0x11 0x8C 0x7F 0xF9 0xFF 0x80 0x40 0x23 0x11 0x8F 0xFF 0xF9 0xFF 0x80 0x40 0x23 0x11 0x8C 0x7F 0xFF 0xFF 0x80 0x40 0x23 0x11 0x8C 0x7F 0xC0 0x3F 0x80 0x46 0x23 0x11 0x80 0x7F 0xC0 0x3F 0x8F 0xC6 0x23 0x11 0x80 0x7F 0xFF 0xFF 0x8F 0xC6 0x23 0x11 0x80 0x7F 0x80 0x1F 0x8F 0xC6 0x23 0x11 0x80 0x7F 0x80 0x1F 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0x3C 0x3C 0x00 0x7E 0x7E 0x00 0x18 0x18 0x0C 0x6E 0x76 0x38 0x1C 0x0C 0x18 0x18 0x60 0x6C 0x6C 0x6C 0x6C 0x60 0x18 0x18 0x0C 0x1C 0x38 0x76 0x6E 0x0C 0x18 0x18 0x7E 0x7E 0x00 0x3C 0x3C 0x00 0x18 0x18 0x30 0x38 0x1C 0x6E 0x77 0x3B 0xD8 0xC0 0x00 0x03 0x1B 0xDB 0xDB 0x1B 0x03 0x00 0xC0 0xD8 0x3B 0x77 0x6E 0x1C 0x38 0x30 0x18 0x18 0x00 0x3C 0x3C 0x00 0x7E 0x7E 0x00 0x01 0x01 0x00 0x02 0x02 0x00 0x04 0x04 0x00 0x08 0x08 0x00 0x10 0x10 0x00 0x00 0x80 0x80 0x00 0x40 0x40 0x00 0x20 0x20 0x00 0x10 0x10 0x00 0x08 0x08 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xE8 0x00 0x08 0x00 0x84 0x00 0x00 0x20 0x4E 0x30 0x6E 0x31 0x07 0x19 0x4C 0x07 0x49 0x58 0x89 0x5B 0x84 0xAD 0x94 0x2C 0x49 0x60 0x89 0x61 0x04 0xB1 0x18 0x23 0x49 0x30 0x69 0x31 0x04 0x99 0x0C 0x2E 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x04 0x00 0x00 0x00 0x00 0x08 0x21 0x00 0x74 0xCE 0x72 0x40 0xEE 0x38 0x38 0x38 0xC5 0x29 0x4A 0x41 0x29 0x48 0x25 0x60 0x35 0x29 0x4A 0x41 0x29 0x48 0x25 0x18 0xE4 0xCE 0x71 0xC0 0xE9 0x38 0x25 0x70 0x00 0x08 0x40 0x40 0x00 0x00 0x00 0x00 0x00 0x08 0x41 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x00 0x00 0x00 0x05 0xE3 0xB8 0xCE 0x93 0x1C 0x3A 0x98 0x75 0x94 0xA5 0x12 0xA5 0xB0 0x4B 0x2C 0x95 0x94 0xA5 0x12 0xE6 0x0C 0x4A 0x30 0x95 0xE3 0xA4 0xCE 0x93 0x38 0x3A 0x18 0x75 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x14 0x44 0x00 0x00 0x10 0x02 0x00 0x00 0x70 0x88 0xCA 0x67 0x38 0x38 0xF3 0x1C 0x95 0xDD 0x6C 0xB4 0x90 0x62 0x25 0xB0 0x94 0x89 0x88 0xC4 0x90 0x1A 0x46 0x0C 0x74 0x88 0xC8 0x64 0x88 0x72 0xF3 0x39 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xE0 0x00 0x00 0x08 0x09 0x00 0x00 0x00 0x46 0x03 0x99 0x5C 0x1D 0xC6 0x78 0x00 0x49 0x06 0x25 0x88 0x09 0x2B 0x54 0x00 0x49 0x01 0xA5 0x08 0x09 0x2C 0x54 0x00 0x46 0x07 0x19 0x04 0x05 0x26 0x54 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xE0 0x00 0x02 0x00 0x00 0x08 0x00 0x00 0x40 0x75 0x3B 0x80 0xEE 0x38 0x00 0x00 0x40 0x96 0x4A 0x41 0x29 0x48 0x00 0x00 0x40 0x94 0x4A 0x41 0x29 0x48 0x00 0x00 0xE0 0x74 0x3B 0x80 0xE9 0x38 0x00 0x00 0x00 0x10 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x60 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x2A 0x00 0x00 0x00 0x00 0x40 0x00 0x00 0x48 0xE0 0x71 0xDC 0x67 0x49 0x8E 0x00 0xEA 0x90 0x4A 0x52 0x89 0x52 0xD8 0x00 0x4A 0x90 0x4A 0x52 0x89 0x73 0x06 0x00 0x4A 0xE0 0x71 0xD2 0x67 0x49 0x9C 0x00 0x00 0x80 0x40 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x40 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x20 0x00 0x00 0x90 0x00 0x20 0x00 0x00 0x4A 0x67 0x81 0xDC 0x60 0x73 0x38 0x00 0xEC 0x95 0x40 0x92 0xB0 0x24 0xA4 0x00 0x48 0x95 0x40 0x92 0xC0 0x24 0xA4 0x00 0x48 0x65 0x40 0x52 0x60 0x13 0x39 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x20 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x20 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x88 0x00 0x00 0x04 0x20 0x00 0x04 0x00 0xDA 0x41 0xCC 0x74 0x07 0x12 0x71 0xC7 0xAA 0x42 0x52 0x94 0x2C 0x12 0xC5 0x29 0x8A 0x42 0x52 0x94 0x23 0x12 0x35 0x29 0x89 0xC1 0xCC 0x74 0x2E 0x0E 0xE5 0x27 0x00 0x40 0x40 0x00 0x00 0x00 0x00 0x01 0x01 0x81 0x80 0x00 0x00 0x00 0x00 0x06 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x48 0x00 0x20 0x00 0x00 0x20 0x54 0x00 0xEE 0x30 0x46 0x54 0xC7 0x70 0x91 0xC7 0x49 0x58 0xEB 0x55 0x6C 0x21 0xD5 0x2C 0x49 0x60 0x4C 0x29 0x83 0x20 0x95 0x23 0x29 0x30 0x46 0x28 0xCE 0x10 0x95 0xCE 0x00 0x00 0x00 0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x20 0x00 0x00 0x01 0x00 0x02 0x00 0x20 0x46 0x50 0x31 0xCD 0xC0 0x77 0x39 0xA4 0xE9 0x60 0x5A 0x51 0x20 0xC2 0x4A 0x28 0x49 0x40 0x62 0x51 0x20 0x32 0x4A 0x38 0x46 0x40 0x31 0xCD 0x20 0xE1 0x39 0xA5 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x90 0x00 0x00 0x70 0x00 0x40 0x84 0x00 0x93 0xAA 0xA4 0x4A 0xA6 0x0E 0xEE 0x65 0xF4 0xB3 0x24 0x4A 0xAB 0x52 0x94 0xB6 0x94 0xA2 0x24 0x49 0x4C 0x52 0x94 0xC4 0x93 0xA2 0x1C 0x71 0x46 0x4E 0x92 0x64 0x00 0x00 0x04 0x00 0x00 0x02 0x00 0x00 0x00 0x00 0x18 0x00 0x00 0x0C 0x00 0x00 0x60 0x86 0x89 0x89 0x66 0x00 0xFF 0x02 0x67 0x52 0x52 0x51 0x00 0xFF 0x00 0x53 0x64 0x44 0x43 0x00 0xFF 0x20 0x27 0xAC 0xA3 0x2E 0x00 0xFF 0x80 0x86 0x8B 0x8C 0xE6 0x00 0x49 0x4A 0x53 0x21 0x10 0x90 0xD0 0x10 0x90 0x00 0x0F 0xFF 0x7F 0xE3 0xC3 0xC0 0x00 0x00 0x0F 0xFF 0x7F 0xFB 0xC3 0xC0 0x00 0x00 0x00 0xF0 0x78 0x7B 0xC3 0xC0 0x00 0x00 0x00 0xF0 0x7F 0xFB 0xFF 0xC0 0x00 0x00 0x00 0xF0 0x7F 0xE0 0xFF 0x00 0x00 0x00 0x00 0xF0 0x79 0xF8 0x3C 0x00 0x00 0x00 0x00 0xF0 0x78 0x78 0x3C 0x00 0x00 0x00 0x00 0xF0 0x78 0x78 0x3C 0x00 0x00 0x7F 0x83 0xFF 0x1F 0xE3 0xFF 0xDE 0x1E 0xFF 0xEF 0xFF 0x7F 0xFB 0xFF 0xDF 0x9E 0xE1 0xEF 0x00 0x78 0x78 0x3C 0x1F 0xFE 0xFF 0xEF 0x3F 0x7F 0xF8 0x3C 0x1F 0xFE 0xFF 0xEF 0x3F 0x7F 0xF8 0x3C 0x1E 0x7E 0xE1 0xEF 0x0F 0x78 0x78 0x3C 0x1E 0x1E 0xE1 0xEF 0xFF 0x78 0x7B 0xFF 0xDE 0x1E 0xE1 0xE3 0xFF 0x78 0x7B 0xFF 0xDE 0x1E 0x00 0x07 0x87 0x87 0xF8 0x78 0x78 0x00 0x00 0x07 0x87 0x9F 0xFE 0x78 0x78 0x00 0x00 0x07 0x87 0x9E 0x1E 0x78 0x78 0x00 0x00 0x07 0xFF 0x9E 0x1E 0x78 0x78 0x00 0x00 0x01 0xFE 0x1E 0x1E 0x78 0x78 0x00 0x00 0x00 0x78 0x1E 0x1E 0x78 0x78 0x00 0x00 0x00 0x78 0x1F 0xFE 0x7F 0xF8 0x00 0x00 0x00 0x78 0x07 0xF8 0x1F 0xE0 0x00 0x00 0x0F 0x03 0xDF 0xFE 0x78 0x78 0x00 0x00 0x0F 0x03 0xDF 0xFE 0x7E 0x78 0x00 0x00 0x0F 0x03 0xC1 0xE0 0x7F 0xF8 0x00 0x00 0x0F 0x33 0xC1 0xE0 0x7F 0xF8 0x00 0x00 0x0F 0xFF 0xC1 0xE0 0x79 0xF8 0x00 0x00 0x0F 0xFF 0xC1 0xE0 0x78 0x78 0x00 0x00 0x0F 0xCF 0xDF 0xFE 0x78 0x78 0x00 0x00 0x0F 0x03 0xDF 0xFE 0x78 0x78 0x00 0x65 0x00 0x62 0x00 0x92 0x70 0x19 0x8C 0x72 0x01 0x75 0x04 0x19 0x82 0x82 0x90 0x42 0x08 0x19 0x98 0x72 0x01 0x75 0x04 0x19 0x8E 0x00 0xEE 0x64 0x12 0x29 0x7E 0x75 0x01 0x63 0x02 0xA3 0xB9 0x62 0x00 0x92 0x80 0x19 0xB0 0x72 0x01 0xF3 0x1E 0x19 0xA6 0xD4 0x52 0x74 0x08 0xA3 0xCB 0x62 0x00 0x92 0x80 0x19 0xC2 0x72 0x01 0xF3 0x1E 0x19 0xB8 0xD4 0x52 0x00 0xEE 0x81 0x90 0x71 0xFF 0x29 0xCE 0x00 0xEE 0x64 0x12 0x67 0x00 0x29 0x7E 0x67 0x00 0xA3 0x08 0x62 0x00 0xF0 0x65 0x92 0x70 0x19 0xE4 0x72 0x01 0x19 0xDA 0x88 0x00 0x29 0x9A 0x97 0x10 0x19 0xF0 0x77 0x01 0x19 0xD6 0x00 0xEE 0x64 0x12 0x67 0x00 0x29 0x7E 0x87 0x10 0xA3 0x08 0x62 0x00 0xF0 0x65 0x92 0x70 0x1A 0x08 0x72 0x01 0x19 0xFE 0x88 0x00 0x29 0x9A 0x47 0x00 0x1A 0x14 0x77 0xFF 0x19 0xFA 0x00 0xEE 0xFD 0x29 0x60 0x32 0x61 0x12 0xD0 0x15 0x00 0xEE 0xA3 0xDD 0x60 0x2C 0x61 0x0A 0xD0 0x17 0xA3 0xE4 0x70 0x08 0xD0 0x17 0x2A 0x16 0x00 0xEE 0x2A 0x16 0x7D 0xFF 0x2A 0x16 0x00 0xEE 0x64 0x0A 0x67 0x00 0x29 0x7E 0xA3 0xA9 0xD4 0x54 0x67 0x01 0xA3 0xAD 0x97 0xA0 0x1A 0x54 0x77 0x01 0x75 0x04 0xD4 0x54 0x1A 0x48 0x75 0x04 0xA3 0xB1 0xD4 0x54 0x00 0xEE 0x4A 0x01 0x00 0xEE 0x4A 0x00 0x00 0xEE 0x64 0x0A 0x87 0xA0 0x29 0x7E 0xA3 0xB1 0xD4 0x54 0x75 0xFC 0xA3 0xB5 0xD4 0x54 0x7A 0xFF 0x00 0xEE 0x88 0x90 0x9A 0x80 0x00 0xEE 0x78 0xFF 0x9A 0x80 0x00 0xEE 0x64 0x0A 0x87 0xA0 0x29 0x7E 0xA3 0xB5 0xD4 0x54 0x75 0x04 0xA3 0xB1 0xD4 0x54 0x7A 0x01 0x00 0xEE 0x81 0xA0 0x29 0xCE 0x23 0x68 0x81 0xA0 0x29 0xF2 0x00 0xEE 0x00 0xE0 0xA3 0xEB 0x2C 0xBC 0x61 0x32 0x2C 0xF4 0x60 0x32 0x63 0x11 0x61 0x05 0xA4 0xEB 0xD0 0x36 0xA4 0xF3 0xD0 0x36 0x2C 0xF4 0xA4 0xF3 0xD0 0x36 0xA4 0xFB 0xD0 0x36 0x2C 0xF4 0xA4 0xFB 0xD0 0x36 0xA5 0x03 0xD0 0x36 0x2C 0xF4 0xA5 0x03 0xD0 0x36 0xA5 0x0B 0xD0 0x36 0x2C 0xF4 0x61 0x1E 0x2C 0xF4 0x61 0x05 0xA5 0x0B 0xD0 0x38 0xA5 0x13 0xD0 0x38 0x2C 0xF4 0xA5 0x13 0xD0 0x38 0xA5 0x1B 0xD0 0x38 0x2C 0xF4 0xA5 0x1B 0xD0 0x38 0xA5 0x23 0xD0 0x38 0x2C 0xF4 0xA5 0x23 0xD0 0x38 0xA5 0x2B 0xD0 0x38 0x2C 0xF4 0x60 0x00 0x30 0x01 0x1B 0x3E 0x61 0x32 0x2C 0xF4 0x64 0x2E 0x65 0x37 0x66 0x10 0x67 0x10 0x77 0x08 0x61 0x02 0x68 0x80 0xA5 0x33 0xD4 0x68 0xA5 0x3B 0xD4 0x78 0xA5 0x43 0xD5 0x68 0xA5 0x4B 0xD5 0x78 0x74 0x01 0x75 0x01 0x78 0xFF 0x48 0x00 0x1B 0x3E 0x1B 0x22 0xF6 0x0A 0x36 0x00 0x1B 0x46 0x1B 0x3E 0x00 0xE0 0x00 0xEE 0x00 0xE0 0xA5 0x53 0x2C 0xBC 0xF6 0x0A 0x36 0x00 0x1B 0x58 0x1B 0x50 0x00 0xE0 0x00 0xEE 0x00 0xE0 0xA6 0x53 0x2C 0xBC 0xF6 0x0A 0x36 0x00 0x1B 0x6A 0x1B 0x62 0x00 0xE0 0x00 0xEE 0x00 0xE0 0xA7 0x53 0x2C 0xBC 0xF6 0x0A 0x36 0x00 0x1B 0x7C 0x1B 0x74 0x00 0xE0 0x00 0xEE 0x00 0xE0 0x60 0x10 0x61 0x00 0xA8 0x53 0xD0 0x17 0x70 0x08 0xA8 0x5A 0xD0 0x17 0x70 0x08 0xA8 0x61 0xD0 0x17 0x70 0x08 0xA8 0x68 0xD0 0x17 0x60 0x29 0x70 0x01 0x61 0x0B 0x71 0x01 0x62 0x01 0xF2 0x29 0xD0 0x15 0x61 0x12 0x71 0x01 0x62 0x02 0xF2 0x29 0xD0 0x15 0x61 0x19 0x71 0x01 0x62 0x03 0xF2 0x29 0xD0 0x15 0x6B 0x0A 0x22 0xA4 0x29 0xC6 0x2A 0x3A 0x61 0x14 0x2D 0x00 0x2C 0x68 0x36 0xFF 0x1C 0x12 0x61 0x19 0x2D 0x00 0x36 0xFF 0x1C 0x12 0x2C 0x68 0x36 0xFF 0x1C 0x12 0x61 0x32 0x2D 0x00 0x36 0xFF 0x1C 0x12 0x2C 0x84 0x36 0xFF 0x1C 0x12 0x61 0x32 0x2D 0x00 0x36 0xFF 0x1C 0x12 0x2C 0xA0 0x36 0xFF 0x1C 0x12 0x61 0x19 0x2D 0x00 0x36 0xFF 0x1C 0x12 0x2C 0xA0 0x36 0xFF 0x1C 0x12 0x61 0x32 0x2D 0x00 0x36 0xFF 0x1C 0x12 0x1B 0xCA 0xF6 0x0A 0x36 0x00 0x1C 0x1A 0x1C 0x12 0x00 0xE0 0x00 0xEE 0x00 0xE0 0x60 0x2C 0x70 0xE6 0x61 0x08 0xA8 0x6F 0xD0 0x15 0x70 0x08 0xA8 0x74 0xD0 0x15 0x70 0x08 0xA8 0x79 0xD0 0x15 0xFB 0x29 0x60 0x2C 0x61 0x08 0xD0 0x15 0xF6 0x0A 0x36 0x00 0x1C 0x46 0x1C 0x3E 0x00 0xE0 0x00 0xEE 0x00 0xE0 0xA8 0x7E 0x2C 0xD8 0xF6 0x0A 0x36 0x00 0x1C 0x58 0x1C 0x50 0x00 0xE0 0x00 0xEE 0x00 0xE0 0xA8 0xFE 0x2C 0xD8 0x1C 0x62 0x00 0xE0 0x00 0xEE 0xA3 0xA2 0x60 0x29 0x61 0x0B 0xD0 0x17 0x61 0x05 0x2C 0xF4 0x2A 0x5C 0x61 0x05 0x2C 0xF4 0xA3 0xA2 0x60 0x29 0x61 0x0B 0xD0 0x17 0x00 0xEE 0xA3 0xA2 0x60 0x29 0x61 0x12 0xD0 0x17 0x61 0x05 0x2C 0xF4 0x2A 0x98 0x61 0x05 0x2C 0xF4 0xA3 0xA2 0x60 0x29 0x61 0x12 0xD0 0x17 0x00 0xEE 0xA3 0xA2 0x60 0x29 0x61 0x19 0xD0 0x17 0x61 0x05 0x2C 0xF4 0x2A 0x78 0x61 0x05 0x2C 0xF4 0xA3 0xA2 0x60 0x29 0x61 0x19 0xD0 0x17 0x00 0xEE 0x00 0xE0 0x60 0x00 0x61 0x00 0x62 0x01 0xD0 0x11 0xF2 0x1E 0x70 0x08 0x40 0x40 0x71 0x01 0x40 0x40 0x60 0x00 0x31 0x20 0x1C 0xC4 0x00 0xEE 0x00 0xE0 0x60 0x00 0x61 0x00 0x62 0x01 0xD0 0x11 0xF2 0x1E 0x70 0x08 0x40 0x40 0x71 0x02 0x40 0x40 0x60 0x00 0x31 0x20 0x1C 0xE0 0x00 0xEE 0xF1 0x15 0xF2 0x07 0x42 0x00 0x1C 0xFE 0x1C 0xF6 0x00 0xEE 0xF1 0x15 0x2D 0x12 0x36 0xFF 0x1D 0x10 0xF2 0x07 0x42 0x00 0x1D 0x10 0x1D 0x02 0x00 0xEE 0x66 0xFF 0x60 0x00 0xE0 0xA1 0x86 0x00 0x36 0xFF 0x1D 0x26 0x70 0x01 0x40 0x10 0x1D 0x26 0x1D 0x16 0x00 0xEE 0x2A 0xA4 0x2B 0x4A 0x2B 0x5C 0x2B 0x6E 0x2B 0x80 0x22 0xCA 0xF6 0x0A 0x46 0x07 0x22 0xE0 0x46 0x09 0x22 0xF0 0x46 0x08 0x22 0xDA 0x46 0x01 0x2A 0x5C 0x46 0x03 0x2A 0x78 0x36 0x02 0x1D 0x6C 0x2A 0x98 0x2A 0x32 0x23 0x84 0x38 0x01 0x1D 0x60 0x61 0x1E 0x2C 0xF4 0x22 0xF0 0x1D 0x6C 0x3D 0x00 0x1D 0x6C 0x61 0x1E 0x2C 0xF4 0x2C 0x4A 0x22 0xD4 0x4B 0x09 0x2C 0x5C 0x1D 0x34\n"
  },
  {
    "file": "Patrick's CHIP-8 Challenge (by Tobias V. Langhoff)(2019).ch8",
    "sha1": "67ee534ad376d89f0d5d78a99c006a847e28c016",
    "platform": "chip8",
    "title": "Patrick's CHIP-8 Challenge",
    "release": "2019",
    "authors": ["Tobias V. Langhoff"],
    "description": "\nPatrick's CHIP-8 Challenge - by Tobias V. Langhoff (2019)\n---------------------------------------------------------\n\nRemove all 28 squares from the board in a never-ending series of randomized puzzles.\n\nPATRICK�S CHIP-8 CHALLENGE is fun for all ages. Are you ready for the challenge?\n\n\nINSTRUCTIONS:\n-------------\nThe object of the game is to move Patrick around the board and remove all 28 squares. \nSquares with symbols on them will remove extra squares (as indicated by the symbols), \nand can make the puzzles trickier, but also reduce the number of steps needed.\n\n\nCONTROLS:\n---------\nPatrick can move to any adjacent square, even diagonally. If you�re using an ASCII \nkeyboard rather than a COSMAC VIP hexadecimal keyboard, the following keys are used \nfor movement:\n\nQ W E\nA   D\nZ X C\n\n\nHISTORY:\n--------\nThe original Patrick's Challenge was an unfinished text adventure for the Commodore 64, \ncreated by Reldni Productions. In June of 1996, Patrick's Challenge for Windows 95 was \nreleased. It was a puzzle game, and bore no resemblance to the original Commodore game. \nIn 1998, Troy Scott and Reldni released the sequel, Patrick's Challenge II, which this \nfanmade game is a port of.\n\n"
  },
  {
    "file": "Patterns (SystemLogoff)(2019).ch8",
    "sha1": "4a4c47e886d576c8e5172d797a276601084004bb",
    "platform": "chip8",
    "title": "Patterns",
    "release": "2019",
    "authors": ["SystemLogoff"]
  },
  {
    "file": "Patterns (by Bjorn Kempen)(2015).xo8",
    "sha1": "66c15e550c9cda39b50220c49d22578dabbfe319",
    "platform": "xochip",
    "title": "Patterns",
    "release": "2015",
    "authors": ["Bjorn Kempen"]
  },
  {
    "file": "Pich8-Logo (Philw07)(2020).sc8",
    "sha1": "e5564c1662d3f144507782784ae4e2f79eaf66d7",
    "platform": "schip",
    "title": "Pich8-Logo",
    "release": "2020",
    "authors": ["Philw07"]
  },
  {
    "file": "Pixlar (by Ethan Pini)(2019).ch8",
    "sha1": "693ba52f822c2e2713c5329ae77ff3271e5b954f",
    "platform": "chip8",
    "title": "Pixlar",
    "release": "2019",
    "authors": ["Ethan Pini"]
  },
  {
    "file": "Pizza Topping Panic! (by Tom Rintjema)(2019).xo8",
    "sha1": "ccec955da264cd92fdbb18c4971419497513ae42",
    "platform": "xochip",
    "title": "Pizza Topping Panic!",
    "release": "2019",
    "authors": ["Tom Rintjema"]
  },
  {
    "file": "Planet of the Eights (Comrat-2016).ch8",
    "sha1": "6dde2db154ea508431d38b43a0f8b4a641e0439e",
    "platform": "chip8",
    "title": "Planet of the Eights",
    "authors": ["Comrat-2016"],
    "description": "\nPlanet of the Eights - by Comrat (2016)\n---------------------------------------\nOctoJam 3\n\n\nThe last 32-bit register is trying to survive on the terrible planet of the Eights using air balloon.\n\n\nControls:\n---------\nUse 5/7/8/9 (WASD) keys to control air balloon.\n\nIf you will reach the earth - i will die\n    \nPress \"8\" to start a game."
  },
  {
    "file": "Pong (center-line)(unknown author)(19xx).ch8",
    "sha1": "a60611339661e3ab2d8af024ad1da5880a6f8665",
    "platform": "chip8",
    "title": "Pong",
    "release": "19xx",
    "authors": ["center-line"],
    "description": "\nPong (center-line) - by ??? (unknown author)(19xx)\n--------------------------------------------------\n\nPlayer 1: 1 to go UP and 4 to go DOWN.\nPlayer 2: C to go UP and D to go DOWN.\n\n"
  },
  {
    "file": "Prads Demo (by Pradipna Nepal)(2010).ch8",
    "sha1": "f6ee978a1dfded9262f08dc95bfb3071c5767e78",
    "platform": "chip8",
    "title": "Prads Demo",
    "release": "2010",
    "authors": ["Pradipna Nepal"]
  },
  {
    "file": "Private Eye [TCNJ S.572.37].ch8",
    "sha1": "3a840c33442ad9e912df1fa2aa61833bf571af34",
    "platform": "chip8",
    "title": "Private Eye",
    "authors": ["TCNJ S.572.37"],
    "description": "\nPrivate Eye [TCNJ S.572.37] - by Joyce Weisbecker ?? (197x)\n-----------------------------------------------------------\n\nNOTE: Was this made by Joyce Weisbecker because it looks very much as \"Sequence Shoot\".\n       \n\nThis one is a simple shooter. Just try to shoot the big moving white square.\nIf you are successful to shot it, you get 10 points.\n\n\nControls:\n---------\n3 = Shoot Upward\n6 = Shoot Strait\n9 = Shoot Downward\n\n"
  },
  {
    "file": "Replicator (by Bjorn Kempen)(2015).xo8",
    "sha1": "642e6174ac7b2bccb7d0845eb5f18d2defbe98b4",
    "platform": "xochip",
    "title": "Replicator",
    "release": "2015",
    "authors": ["Bjorn Kempen"]
  },
  {
    "file": "Robot (unknown author)(20xx).sc8",
    "sha1": "dd6ef80cadef1e7b42f71ad99573b1af2299e27d",
    "platform": "schip",
    "title": "Robot",
    "release": "20xx",
    "images": ["Robot_SCHIP__1.png"]
  },
  {
    "file": "Rocket (Jason DuPertuis)(2020).xo8",
    "sha1": "466ce147503c536b23a7548d6adf027c26d28df3",
    "platform": "xochip",
    "title": "Rocket",
    "release": "2020",
    "authors": ["Jason DuPertuis"],
    "description": "\nRocket - by Joseph Weisbecker (1978)\n------------------------------------\nfrom Byte Magazine Dec.1978\n\n\nAn enemy UFO will be constantly moving from left to right across the top of the screen.\nA single digit score will be displayed at the lower right. A rocket ship will appear at \na random horizontal position along the bottom edge of the display area. You can launch\nthis rocket by pressing \"F\" on the hexadecimal keyboard.\n\nThe rocket will then move vertically toward the top of the screen. When it reaches the\ntop or hits the target UFO it will be erased and a new rocket will appear at the bottom\nof the screen.\n\nAfter nine rockets have been launched the game ends and no new rockets will appear. If\nyou hit the UFO with a rocket the score will incremented by 1.\n\n\nControls:\n---------\nF = launch rocket\n\n"
  },
  {
    "file": "Rocket-70 (not-sure-70 rockets hack)(by Sly DC-2020).ch8",
    "sha1": "b5cc3bf3a5da556a33f2621be0f51c19e751292d",
    "platform": "chip8",
    "title": "Rocket-70",
    "authors": ["Sly DC-2020"]
  },
  {
    "file": "Rule 30 (Verisimilitudes)(2029).ch8",
    "sha1": "c8a3ccbdde2a289992077779cb02f1200cfed4bb",
    "platform": "chip8",
    "title": "Rule 30",
    "release": "2029",
    "authors": ["Verisimilitudes"]
  },
  {
    "file": "Rule 30 Improved (Verisimilitudes)(2019).ch8",
    "sha1": "fb6a79a1f42cd4539c3da2783d4f7f035d9b3a2c",
    "platform": "chip8",
    "title": "Rule 30 Improved",
    "release": "2019",
    "authors": ["Verisimilitudes"]
  },
  {
    "file": "RulerBrain (by Group 8 Team)(2019).ch8",
    "sha1": "7dc6605ed7b139330ee7e1dec33efba76486f4d7",
    "platform": "chip8",
    "title": "RulerBrain",
    "release": "2019",
    "authors": ["Group 8 Team"],
    "description": "Please note due to a bug in Octo the game only works in the Octo emulator \n(it's not our emulator because we tested it on a different emulator with \nthe same issue)\n\n\n\nMastermind is a puzzle game. computer will randomly generate 3 repeatable \nnumbers from 1 to 6, show as question marks  in the top of screen. Player \nneeds to guess what is correct number and correct order. Player has most \n5 chances to guess the answer, and input guess by use numbers in chip8 \nkeyboard. After input there will be hint in the right of the screen. \nIf it is a cycle, it means player put right answer in right box. if it \nis triangle,  it means right number put in wrong box. If it is X, it \nmeans this number does not in right answer. After 5 tries or player input \nright answer, questionmarks will show the answer in the top of screen. \n\nIf player wants to play this game again, press 9 on chip8 keyboard.\n\n\n======================================================================================\n\n\nCMPT 276 Spring 2019 Group 8 CHIP8 Project\n\nGroup Members: Yiming Cai, Richard Fu, Gurnoor Grewal, Peter Luong, Anuvrat Sharma\n\nThis project document describes the conditions and planning of the product produced \nby the CMPT 276 Surrey Spring 2019 Group 8 Team.\n\nTwo complete CHIP8 games:\n\n* An action shooter game called \"Shooter\" similar to \"Space Invaders\" with rules to \n  play in readme file.\n\n* A puzzle game called \"RulerBrain\" similar to \"Mastermind\" created with Octo with \n  rules to play in readme file.\n\n\n\n======================================================================================\n\nhttps://github.com/dpluong/chip-8\n\n"
  },
  {
    "file": "SK8 H8 1988 (by Team Out of Left Field)(2015).xo8",
    "sha1": "f12038dcd28ca71661162bfb6fc92a8826f7d6b9",
    "platform": "xochip",
    "title": "SK8 H8 1988",
    "release": "2015",
    "authors": ["Team Out of Left Field"]
  },
  {
    "file": "Safecracker.xo8",
    "sha1": "57b4b5fa3251dee9d6b588327cf5ff8d194d4a04",
    "platform": "xochip",
    "title": "Safecracker",
    "description": "You play a safecracker with 12 chances to guess a 4-digit passcode. Luckily for you, your tools and flaws \nin the safe will make it easier.\n\nIf you prefer to play with touch or mouse, tap or click the screen to bring up a Chip-8 keypad.\n\nRules\n\nYour current guess is the rightmost column of numbers.\n\nThe passcode will not use a digit more than once. If the currently selected passcode repeats digits, an \"X\" \nwill be displayed above it, and you won't be able to submit it. A valid passcode will display \"OK\" above it. \nDecreasing or increasing a digit past 0 or 9 will wrap around to the other side. \n\nAfter every guess, you will see feedback above it in the form of up to four dots:\n\n    Every dark dot represents a digit in the correct location\n    Every light dot represents a digit that is somewhere in the passcode, but currently in the wrong place\n    Fewer than four dots means that not all of the digits in your guess are in the passcode\n    0 dots mean that none of the digits you guessed are in the code\n\nAfter the 12th guess, the game will be over, and you will win or lose depending on whether your last guess was \ncorrect. You can also win earlier by deducing and submitting the correct passcode. \n\nAfter a game is over, you can press the submit key to start a new game.\n\nControls\n\nIf you prefer to play with touch or mouse, tap or click the screen to bring up a Chip-8 keypad. \nPC Keyboard Key(s)\tChip-8 Keypad Key(s)\tGame Action\nF\tE\tSubmit current passcode if valid (\"OK\" displayed above rightmost column)\n1, 2\t1, 2\tIncrement / decrement 1st digit\nQ, W\t4,5\tIncrement / decrement 2nd digit\nA, S\t7, 8\tIncrement / decrement 3rd digit\nZ, X\tA, 0\tIncrement / decrement 4th digit\n\nSadly,  sound has been omitted in the Octojam release version due to unexpected events during the time allotted \nfor development."
  },
  {
    "file": "Sand.xo8",
    "sha1": "ecfe1354f04a8bc60adb84637c97c7d8b6809097",
    "platform": "xochip",
    "title": "Sand",
    "description": "Invaders from space spoil the sands of our home. We must fight back! Control the mighty sandworm \nto destroy the invaders!\n\nSteer with a and d.\n\nBased on Mr Worm eats waffles by Scaevolus."
  },
  {
    "file": "Screenwipe (Andrew James)(2021).ch8",
    "sha1": "dcf6852e937aecedbe16bc93009624ef8590bce3",
    "platform": "chip8",
    "title": "Screenwipe",
    "release": "2021",
    "authors": ["Andrew James"]
  },
  {
    "file": "Scroll Pattern 1 (by Bjorn Kempen)(2015).xo8",
    "sha1": "66068809c482a30aa4475dc554a18d8d727d3521",
    "platform": "xochip",
    "title": "Scroll Pattern 1",
    "release": "2015",
    "authors": ["Bjorn Kempen"]
  },
  {
    "file": "Seconds Counter (by Michael Wales)(2014).ch8",
    "sha1": "ea4ec4c07c97e1ad77eb9bfe237d2a1578795fbf",
    "platform": "chip8",
    "title": "Seconds Counter",
    "release": "2014",
    "authors": ["Michael Wales"]
  },
  {
    "file": "Seconds Counter (by Michael Wales)(2014).sc8",
    "sha1": "51a31cc51414b4dd6c5c54081574f915e6f53744",
    "platform": "schip",
    "title": "Seconds Counter",
    "release": "2014",
    "authors": ["Michael Wales"]
  },
  {
    "file": "Serpinski (by Sergey Naydenov)(2010).sc8",
    "sha1": "29f83328069205a1cdb7020846cca34d6988c83c",
    "platform": "schip",
    "title": "Serpinski",
    "release": "2010",
    "authors": ["Sergey Naydenov"]
  },
  {
    "file": "Shooter (by Group 8 Team)(2019).ch8",
    "sha1": "100dea0037219d82a090e35eb93526ba4413ffe4",
    "platform": "chip8",
    "title": "Shooter",
    "release": "2019",
    "authors": ["Group 8 Team"],
    "description": "Goal: Shoot a bullet that hits the other enemy!\n\n\n\nThe walls impede your way, so shoot them to remove them!\n\n\n\nControls:\n\n\n\nPlayer 1:\n1 key: Move up\n\n4 key: Move left\n\n5 key: Move right\n\n7 key: Move down\n\n8 Key: Shoot\n\n\n\nPlayer 2:\n\nC key: Move up\n\n6 key: Move left\n\nD key: Move right\n\nE key: Move down\n\n9 Key: Shoot"
  },
  {
    "file": "Shooth3rd (by Beholder)(2016).ch8",
    "sha1": "e78144bb9bdf7b48b096e1cdd0f4db430bfd731e",
    "platform": "chip8",
    "title": "Shooth3rd",
    "release": "2016",
    "authors": ["Beholder"],
    "description": "\nShooth3rd - by Beholder (2016)\n------------------------------\nOctoJam 3\n\n\nYou play as the shooter on the left side of the screen trying to hit the target on the right side. \nYour goal is to hit the target while bouncing against obstacles as little as possible. Each time \nyou bounce against an obstacle you lose 1 point.\n\n4(Q) and 7(A) will move the shooter's position up and down.\n\n5(W) and 8(S) will change the bullet angle. There are 7 angles you can shoot from:\n\nAngle 0 moves the bullet twice on the Y axis then on the X axis.\n\nAngle 1 moves the bullet equally on both axis.\n\nAngle 2 moves the bullet twice on the X axis then on the Y axis.\n\nAngle 3 moves the bullet straight only on the X axis.\n\nAngle 4, 5 & 6 are the same as 0, 1 & 2 but with Y axis direction inverted.\n\n6(E) shoots.\n\n9(D) stops the bullet and reset the player so you can shoot again. That's needed when you're stuck \ninto an infinite loop.\n\n11(Z) will reset the level and re-generate a new set of random obstacles. This option is helpful \nin case the player believes the level is unbeatable.\n\nWhen you hit the target you advance to the next level. Each time you advance a level you gain 5 points. \nLevel 1 starts with 1 obstacle. Each new level adds 1 obstacle to a max of 9 per screen. When you beat \na level with 9 obstacles the target gets smaller and obstacles are reset to 1. There are 4 target sizes, \neach with 9 levels, adding to a total of 36 levels. There's a + sign object that changes the bullet \nangle to make it a bit more random. You win 1 point each time you hit the + sign. It's fun to shoot \nstraight at it :) Max score is 100, can you beat the game at 100? sounds quite impossible, but if you \ndo so you'll see a cat sprite as a reward!!! If you score 95 or higher you'll see a bunny. You can win \nor lose a max of 25 points per level. There's a known bug where if the bullet hits the frame above or \nbellow an obstacle... it will go past through it. I left it there in case players want to exploit this \nbug. Aaaannnddd because im lazy and don�t really wanna fix it :D\n\nThis game is meant to run at 7 cycles so it can run on a Cosmac VIP!\n"
  },
  {
    "file": "Shooth3rd II (by Beholder)(2018).ch8",
    "sha1": "41f2a4e7f372795e3d6ad657de8622c0169248db",
    "platform": "chip8",
    "title": "Shooth3rd II",
    "release": "2018",
    "authors": ["Beholder"],
    "description": "\nShooth3rd II - by Beholder (2018)\n---------------------------------\nOctoJam 5\n\n\nQ/A - move player 1 up/down\n\nW/S - changes the player 1 angle up/down\n\nR/F - move player 2 up/down\n\nE/D - changes the player 2 angle up/down\n\nZ - starts the game (shoots both guns)\n\nX - Reset the game\n\nC - Changes the level layout\n\nShooth3rd II + adds a few last minute changes:\n\n    Larger target and death square\n    If you hit the death square (bottom center) you die\n    Platform is now vertical and bocks both sides\n\nI tried using a lookup table for the death square and larger target. It's definitely slower, but adds some cool possibilities.\n\nI think this version is more fun to play. It's easier to hit the larger target. Before it would take quite some time. Plus, the addition of the death square allows both players to lose :) The vertical platform/barrier is way more interesting. It can block both target and death square.\n\nI do own an original Cosmac VIP and I plan to make a video of it running this game (just like I did with the original Shooth3rd). At the moment I don't have a monitor... so it might take a while.\n\nCheers!"
  },
  {
    "file": "Shooth3rd II plus (by Beholder)(2018).ch8",
    "sha1": "2498050e4f5645574daefaa8a679576374c55973",
    "platform": "chip8",
    "title": "Shooth3rd II plus",
    "release": "2018",
    "authors": ["Beholder"],
    "description": "\nShooth3rd II Plus - by Beholder (2018)\n--------------------------------------\nOctoJam 5\n\n\nQ/A - move player 1 up/down\n\nW/S - changes the player 1 angle up/down\n\nR/F - move player 2 up/down\n\nE/D - changes the player 2 angle up/down\n\nZ - starts the game (shoots both guns)\n\nX - Reset the game\n\nC - Changes the level layout\n\nShooth3rd II + adds a few last minute changes:\n\n    Larger target and death square\n    If you hit the death square (bottom center) you die\n    Platform is now vertical and bocks both sides\n\nI tried using a lookup table for the death square and larger target. It's definitely slower, but adds some cool possibilities.\n\nI think this version is more fun to play. It's easier to hit the larger target. Before it would take quite some time. Plus, the addition of the death square allows both players to lose :) The vertical platform/barrier is way more interesting. It can block both target and death square.\n\nI do own an original Cosmac VIP and I plan to make a video of it running this game (just like I did with the original Shooth3rd). At the moment I don't have a monitor... so it might take a while.\n\nCheers!"
  },
  {
    "file": "SierpChaos (by Marco Varesio)(2015).ch8",
    "sha1": "9be0cc119f8e3c18b7f0203c54b30c50b8f438a9",
    "platform": "chip8",
    "title": "SierpChaos",
    "release": "2015",
    "authors": ["Marco Varesio"]
  },
  {
    "file": "SierpChaos (fix)(by Marco Varesio)(2015).ch8",
    "sha1": "ec1824ccdcc6c3b4390004946e551d4aa2058820",
    "platform": "chip8",
    "title": "SierpChaos",
    "release": "2015",
    "authors": ["Marco Varesio"],
    "description": "Code correction done by Marcel van Tongeren:\n\nReplaced SHL V2, V0 with SHL V2 @20C, replaced SHR V3, V0 with SHR V3 @216 and SHR V4, V0 with SHR V4 @21A. \nAs Any SHL/SHR Vx, V0 on a VIP would shift V0 and store the result in Vx. Intention of the code is actually \nto shift value of Vx.\n"
  },
  {
    "file": "Simple Dodge (John Earnest)(2021).sc8",
    "sha1": "981e7029587172681765243b45445fcc382139b3",
    "platform": "schip",
    "title": "Simple Dodge",
    "release": "2021",
    "authors": ["John Earnest"],
    "description": "Simple Dodge by John Earnest (2021)\n-----------------------------------\n\nAn extremely minimalist interpretation of an asteroid-dodging shmup.\n\nUse 4 & 6 for direction (Left/Right).\nPress any key to restart."
  },
  {
    "file": "Simple Snek (John Earnest)(2021).ch8",
    "sha1": "7c680cd427c2d0eecde208ebbce667707c0f13a2",
    "platform": "chip8",
    "title": "Simple Snek",
    "release": "2021",
    "authors": ["John Earnest"],
    "description": "Simple Snek by John Earnest (2021)\n----------------------------------\n\nAn extremely minimalist interpretation of the perennial classic, Snake.\n\nUse 2, 4, 6 & 8 for direction.\nPress any key to restart."
  },
  {
    "file": "Singing Voice (sound)(unknown author)(201x).xo8",
    "sha1": "d4339dac64038f30130af02fbe73b57cd7d481a1",
    "platform": "xochip",
    "title": "Singing Voice",
    "release": "201x"
  },
  {
    "file": "Single Dragon (Bomber Section) (by David Nurser)(199x).sc8",
    "sha1": "6b6502b03183e492f8170172308df9876c29d1d9",
    "platform": "schip",
    "title": "Single Dragon",
    "release": "199x",
    "authors": ["David Nurser"],
    "description": "Greetings All...\n\nI have written the first part of a game called \"Single Dragon\"\nwhich is, if you didn't already guess, a spin off of \"Double Dragon\".\n\nThe only problem is that I didn't think that doing two degrees could be so\nmuch work, and lately it has ground to a halt (exam time ;[).\n\nI have included the ASCed directory of everything I have done so far,\nand am asking you to help me finish this great game off.\n\nHERE IS THE GAME STRATEGY\n\nStages 1-4   ::  Fight Scenes.\n                 Max of 3 enemys on screen @ once\n                 Enemys do not home in on your position in level #1\n                 A big guy to kill @ the end of stage 4\n                 after killing the big guy you jump into a helicopter and\n                      onto stage #5\n\nStage 5      ::  Helicopter Scene - landscape scrolls in from the right\n                 you can bomb ground lauched missiles etc (u get the pic)\n\nStage 6      ::  Car Scene, screen scrolls in from the top\n\nStage 7-10   ::  Fight Scenes of major proportions to finish off.\n\n\nSo, what have I already done?\n-> Stages 1-4 (no big guy @ end yet)\n-> 1/2 of stage 5\n\nAs you can see, I'm about half way through the game and will probably get more\ntime to finish it in about a month, but would really like some moral support\nand perhaps a helping hand.\n\nHOW WAS IT ALL WRITTEN ?\nThe bomber stage (a bit flickery at the moment) and all of the fight\nsequences were written in Super-Chip (Which of course you will need to have\nto run these stages).  All stages are linked by User-Rpl (Flags determine\nmovement between levels.  The introduction is in User-Rpl.  The Fading\nis courtesy of Mr.Meuller (I think...I hope - please correct me if I am wrong)\nwhich was written in System-Rpl.\n\nEventually, all this stuff will be contained in a library, and will be self\nuncompressing as you reach each stage (for those without RAM cards), using\nof course RFU (System-RPL).\n\n\nPlease take the time to have a brief look and tell me what yu think, what I\ncan do with it .... and most importantly ... WHO CAN GIVE ME A BIT OF A HAND\n(I will finish it, but I will surely finish it much faster with your aide)\n\nHere is what is in the directory:\n[INTRO] - speaks for itself - Introduction (1st half - haven't done the second\n                                        yet)\n[BOMB] - Schip Hex String for Bomber Section (what I have done so far)\n[ST1]  - Schip Hex String for Stages 1-2 (that all I'm going to post for the\n         moment ;])\n[DIE]  - The death sequence\n\nMANY THANKS go to my graphic designer Stuart Fisher, and to [Zoom] for\nhis patience...don't worry Zoom, I will finish it ;].\n\nEnjoy.\nDavid Nurser\nitb675nurser@redgum.qut.edu.au\n\n\nPerhaps the lack of response to Single Dragon is because you couldn't\nfigure out the keys...So far, only one person has expressed interest\n...and to tell the truth, it's rather depressing.\nI will gladly send anyone parts of it personally if they are still\nhaving problems downloading etc.\n\nKeys Are:\n[3] - Up\n[SPC] - Down\n[.] - Left\n[+] - Right\n[7] - Punch\n[8] - Kick\n\nHelicopter Scene:\n[8] - Up\n[2] = Down\n[4] = Left\n[6] = Right\n[5] = Bomb\n\nCaio\nDave. [Fish]\n\n",
    "images": ["Single_Dragon_Bomber_Section_SCHIP__1.png"]
  },
  {
    "file": "Single Dragon (Stages 1-2) (by David Nurser)(199x).sc8",
    "sha1": "d6cbd3af85b4c55b83c4e01f3a17c66fcebe9ccc",
    "platform": "schip",
    "title": "Single Dragon",
    "release": "199x",
    "authors": ["David Nurser"],
    "description": "Greetings All...\n\nI have written the first part of a game called \"Single Dragon\"\nwhich is, if you didn't already guess, a spin off of \"Double Dragon\".\n\nThe only problem is that I didn't think that doing two degrees could be so\nmuch work, and lately it has ground to a halt (exam time ;[).\n\nI have included the ASCed directory of everything I have done so far,\nand am asking you to help me finish this great game off.\n\nHERE IS THE GAME STRATEGY\n\nStages 1-4   ::  Fight Scenes.\n                 Max of 3 enemys on screen @ once\n                 Enemys do not home in on your position in level #1\n                 A big guy to kill @ the end of stage 4\n                 after killing the big guy you jump into a helicopter and\n                      onto stage #5\n\nStage 5      ::  Helicopter Scene - landscape scrolls in from the right\n                 you can bomb ground lauched missiles etc (u get the pic)\n\nStage 6      ::  Car Scene, screen scrolls in from the top\n\nStage 7-10   ::  Fight Scenes of major proportions to finish off.\n\n\nSo, what have I already done?\n-> Stages 1-4 (no big guy @ end yet)\n-> 1/2 of stage 5\n\nAs you can see, I'm about half way through the game and will probably get more\ntime to finish it in about a month, but would really like some moral support\nand perhaps a helping hand.\n\nHOW WAS IT ALL WRITTEN ?\nThe bomber stage (a bit flickery at the moment) and all of the fight\nsequences were written in Super-Chip (Which of course you will need to have\nto run these stages).  All stages are linked by User-Rpl (Flags determine\nmovement between levels.  The introduction is in User-Rpl.  The Fading\nis courtesy of Mr.Meuller (I think...I hope - please correct me if I am wrong)\nwhich was written in System-Rpl.\n\nEventually, all this stuff will be contained in a library, and will be self\nuncompressing as you reach each stage (for those without RAM cards), using\nof course RFU (System-RPL).\n\n\nPlease take the time to have a brief look and tell me what yu think, what I\ncan do with it .... and most importantly ... WHO CAN GIVE ME A BIT OF A HAND\n(I will finish it, but I will surely finish it much faster with your aide)\n\nHere is what is in the directory:\n[INTRO] - speaks for itself - Introduction (1st half - haven't done the second\n                                        yet)\n[BOMB] - Schip Hex String for Bomber Section (what I have done so far)\n[ST1]  - Schip Hex String for Stages 1-2 (that all I'm going to post for the\n         moment ;])\n[DIE]  - The death sequence\n\nMANY THANKS go to my graphic designer Stuart Fisher, and to [Zoom] for\nhis patience...don't worry Zoom, I will finish it ;].\n\nEnjoy.\nDavid Nurser\nitb675nurser@redgum.qut.edu.au\n\n\nPerhaps the lack of response to Single Dragon is because you couldn't\nfigure out the keys...So far, only one person has expressed interest\n...and to tell the truth, it's rather depressing.\nI will gladly send anyone parts of it personally if they are still\nhaving problems downloading etc.\n\nKeys Are:\n[3] - Up\n[SPC] - Down\n[.] - Left\n[+] - Right\n[7] - Punch\n[8] - Kick\n\nHelicopter Scene:\n[8] - Up\n[2] = Down\n[4] = Left\n[6] = Right\n[5] = Bomb\n\nCaio\nDave. [Fish]\n\n",
    "images": [
      "Single_Dragon_Stages_1-2_SCHIP__1.png",
      "Single_Dragon_Stages_1-2_SCHIP__2.png",
      "Single_Dragon_Bomber_Section_SCHIP__2.png"
    ]
  },
  {
    "file": "Skellespresso.xo8",
    "sha1": "7143cb2e8c895eccbc1d768417c932bde8337b94",
    "platform": "xochip",
    "title": "Skellespresso",
    "description": "It's time to make some coffee!\n\nControls:\n\n1-4: Move directly to a lane\n\nA/D: Move to left or right lane\n\nW/S: Switch coffee served\n\nE: Serve coffee!\n\nQ: Start game, and reset on a game over\n\nRecommended music: Smooth Jazz."
  },
  {
    "file": "Skipper (Jason DuPertuis)(2020).xo8",
    "sha1": "fdb2da9e06a07bb11dee8a7dc1a9589759a9c57d",
    "platform": "xochip",
    "title": "Skipper",
    "release": "2020",
    "authors": ["Jason DuPertuis"]
  },
  {
    "file": "Slippery Slope (by John Earnest)(2018).ch8",
    "sha1": "d73d48484a8fc60e8650f4228d6963a19a4de6c3",
    "platform": "chip8",
    "title": "Slippery Slope",
    "release": "2018",
    "authors": ["John Earnest"],
    "description": "\nSlippery Slope - by John Earnest (2018)\n---------------------------------------\nOctoJam 5\n\n\nThe ice we skate is getting pretty thin. The water's getting warm so you might as well swim.\n\n\n7/8/5/9 (ASWD) = move\n\n6 (E) resets the current level\n\nWhen you've finished the game, make your own levels:\n\nhttp://beyondloom.com/tools/slipedit.html"
  },
  {
    "file": "Smile (demo).ch8",
    "sha1": "a6ad3ff3a6e969f87535e9733850630e9d221e51",
    "platform": "chip8",
    "title": "Smile"
  },
  {
    "file": "Snafu (Shendo)(2010).ch8",
    "sha1": "97a65f7c877f923a93e7b423ad39187e91e938fd",
    "platform": "chip8",
    "title": "Snafu",
    "release": "2010",
    "authors": ["Shendo"],
    "description": "\n=====================\n \"Snafu\" for Chip8:\n=====================\n \n Author: Shendo\n Date: 2010\n\n========\n About:\n========\n\n Snafu is a clone of the Intellivision game by the same name.\n The goal of the game is to block your opponent.\n In order to win you need to score 10 points.\n\n===========\n Controls:\n===========\n\nTo move player (on a hexpad):\n\n5 to go UP\n7 to go Left\n8 to go Down\n9 to go right\n\n\n"
  },
  {
    "file": "Snake (Timo Triisa)(2014).ch8",
    "sha1": "0920bfcaf974a10621af7ef0e48929c86dd0df2e",
    "platform": "chip8",
    "title": "Snake",
    "release": "2014",
    "authors": ["Timo Triisa"],
    "description": "\nSnake - by Timo Triisa (2014)\n-----------------------------\nOcto-Ber Jam 1\n\n\nClassic Snake game without walls. \n\nUse 5, 7, 8 and 9 to move. \n\nPress any key to start over."
  },
  {
    "file": "Snake (by Henry Wang)(2019).ch8",
    "sha1": "fe25659856e1921ea629d3f8fce977c0cae57ff3",
    "platform": "chip8",
    "title": "Snake",
    "release": "2019",
    "authors": ["Henry Wang"],
    "description": "\nSnake - by Henry Wang (2019)\n----------------------------\nTeam CHIPOTLE\n\n\nSnake for the CHIP-8. \n\n\nControls:\n---------\n\"5\": \"UP\"\n\"7\": \"LEFT\"\n\"9\": \"DOWN\"\n\"8\": \"RIGHT\"\n\n"
  },
  {
    "file": "Snake (unfinished game)(by Tyson Decker)(2016).ch8",
    "sha1": "6881684726d8bf97379d8eb988a9cdfb373c1698",
    "platform": "chip8",
    "title": "Snake",
    "release": "2016",
    "authors": ["Tyson Decker"]
  },
  {
    "file": "Sneak Surround (TomSwan)(2020).ch8",
    "sha1": "7d9abc18f187fafeb6f799f42882ff6007d340ac",
    "platform": "chip8",
    "title": "Sneak Surround",
    "release": "2020",
    "authors": ["TomSwan"],
    "description": "\nSneak Surround\n==============\nby TomSwan (Octojam 7)\n\n\nAbout:\n------\nOriginally named \"Surround\" from my book Pips for VIPS I, published in 1979, the revised \"SneakSurround,\" \nwritten in Octo, is a new and challenging snake-like Chip8 game offering two turns on each of six levels \nof play.\n\nThe new program updates code that I wrote just before I became editor of the Viper newsletter -- converted \nto Octo for this entry. I was living in Taxco Mexico at the time, and had just also completed writing \nProgrammers Guide to the 1802.\n\nComments appreciated -- Please try my game! \n\n\nControls:\n---------\nUses \"5/7/8/9\" to direct the snake to eat the single-pixel targets. (Perhaps they are mice.) Avoid all \nobstructions. Hitting anything except a target including the snake's own tail loses. \nConsuming all targets on all levels and sub-levels wins. \n\nCan you survive through all six levels? Although easy on lower levels, higher levels are quite challenging \nbecause, on every level and sub-level, the hungry snake grows a little longer and a little faster as it \nfeeds on targets -- I mean mice!\n\n\nTIP:\n----\nRemember that the screen wraps around at the edges! \n\n\nNOTE:\n-----\nTargets are randomly placed using AI to ensure their separation from other objects making every game both \ndifferent and winnable!"
  },
  {
    "file": "Snoopy Cosmac picture (works with FNC).ch8",
    "sha1": "b7cfb02cfb357ab5bf7fb3069f730fb4bf5df5f0",
    "platform": "chip8",
    "title": "Snoopy Cosmac picture"
  },
  {
    "file": "Snoopy picture (by Marco Varesio)(2015).ch8",
    "sha1": "ef54d110d2ac9d4a172f523b011b05fe4caece5b",
    "platform": "chip8",
    "title": "Snoopy picture",
    "release": "2015",
    "authors": ["Marco Varesio"]
  },
  {
    "file": "Snow Daze (unknown author)(2015).sc8",
    "sha1": "332e892ad054cf182e1ca4c465b603b8261ccec9",
    "platform": "schip",
    "title": "Snow Daze",
    "release": "2015"
  },
  {
    "file": "Sokoban (by hap)(2006).sc8",
    "sha1": "c7c59b38129fdcec5bb0775a9a141b6ba936e706",
    "platform": "schip",
    "title": "Sokoban",
    "release": "2006",
    "authors": ["hap"],
    "description": "Sokoban, a port of Sokoban to SCHIP, by hap, April 11th, 2006.\nOriginal by Thinking Rabbit, 1982.\n\nI won't explain the concept of this game, you probably already know. The game\ncontains the original floors, all 50 of them, that have been verified against\nthe 1984 PC version.\n\nIt has been tested, and works fine on my CHIP8 emulator, Fish 'n' Chips,\ncomfortable gameplay is at about 1.2Khz. It has also been successfully tested\non HP48 SCHIP, using EMU48.\n\n\nHOW TO PLAY\n===========\n\n[x]=CHIP8 hexpad key\n{x}=key in a PC emulator that emulates it on 1234/qwer/asdf/zxcv\n\nTitlescreen:\nSelect a floor with [7]{a} and [9]{d}, and enter it with [a]{z}. The floor will\nnow be drawn onto the screen.\n\nGame:\nMove with [5]{w}, [8]{s}, [7]{a}, [9]{d}. You can undo moves up to 57 times\nwith [a]{z}. To restart, hold [0]{x}, and to exit to the titlescreen, restart\nbefore making a move.\n\n\nCREDITS\n=======\n\nFloors were converted to textfiles, these are available all over the internet.\nThanks to whoever converted them in the first place, as I used them to, erm,\nreconvert them. Note that I found some floors containing errors while comparing\nagainst screenshots made from the original Sokoban, though maybe they were\nintentionally changed(?)\n",
    "images": ["Sokoban_SCHIP__1.png", "Sokoban_SCHIP__2.png"]
  },
  {
    "file": "Space Defense! (Jim South-2014).ch8",
    "sha1": "107366630b4e0449add7ab00f93cce65f38f9713",
    "platform": "chip8",
    "title": "Space Defense!",
    "authors": ["Jim South-2014"],
    "description": "\nSpace Defense! - by Jim South (2014)\n------------------------------------\nIron Pencil Games\n\n\nSummary\n-------\nDefend your planet from alien invaders by blowing them to bits.\nDon�t let any ships get past you or it�s game over!\n\n\nControls\n--------\n5 and 8 move up and down, press 6 to fire.\n\n\nCredits\n-------\nCreated by Jim South, with special thanks to John Earnest.\n\nContact Jim South (jim -at- ironpencil.com) with any questions or comments about the game.\n\nSPACE DEFENSE! was made using Octo, a CHIP-8 emulator designed by John Earnest.\n\nIf you liked my game, please consider donating to or participating in Extra Life. It is a 24-hour gaming \nmarathon to raise money for Children�s Miracle Network hospitals.\nGo to www.extra-life.org for more information. Thank you."
  },
  {
    "file": "Space Explorer [TCNJ S.572.2, 3].ch8",
    "sha1": "4200636c4d2a4495d10d6348049d21b887e8d1be",
    "platform": "chip8",
    "title": "Space Explorer",
    "authors": ["TCNJ S.572.2"],
    "description": "\nSpace Explorer [TCNJ S.572.2, 3] - by ??? (unknown author)(197x)\n----------------------------------------------------------------\n\n** PLEASE NOTE THAT THIS MANUAL IS NOT FINISHED **\n\nPress \"5\" to start/select enemy, then you have 250 seconds to play before ...\n\n\nTo explore:\n-----------\n1 = up/left\n2 = up\n3 = up/right\n4 = left\n6 = right\n7 = down/left\n8 = down\n9 = down/right\n\n\n\nC = -1\nD = -2\nE = -3\n\nA= return to normal space\n0 = to shoot\n\n"
  },
  {
    "file": "Space Racer (by William Donnely)(2017).ch8",
    "sha1": "d11e76793c231cdce513c09f0511202ed076834d",
    "platform": "chip8",
    "title": "Space Racer",
    "release": "2017",
    "authors": ["William Donnely"],
    "description": "\nSpace Racer - by William Donnely (2017)\n---------------------------------------\nOctoJam 4\n\n\n'Space Racer' is based on the classic 2-player 'Space Race' video game. It is in \nCHIP-8 32x64 format. \n\nAlthough it is written in Standard CHIP-8, it won't run well on the old COSMAC Elf, \nVIP, or Studio II and similar computers and game consoles as-is. To work well, it \nneeds a Scroll Screen call-to-subroutine, which is not (yet) supported by Octo. But \nit can be modified as such to work on the old machines, at which point it should be \nplayable. \n\nIt would be nice if Octo supported Call-To-Subroutine Machine Language functionality \n(I suggest RCA CDP 1802 emulation). Or, at the very least, an \"Add-On Subroutine Pack\" \nsimulation, that gives us additional features, like a Scroll Screen Left/Right X1, X2 \nand Up/Down Y1, Y2 call, and even Non-XOR Set/Reset Pixel, XOR and Non-XOR X1, Y1 to \nX2, Y2 Draw/Clear Line, Non-XOR Display Sprite, and possibly some other nice features \nlike that. (these are the routines I will/would write if I could) Maybe next year.\n\n\n\nControls:\n---------\n5 = Up\n7 = Left\n8 = Down\n9 = Right\n\n"
  },
  {
    "file": "Spacefight 2091 (by Carsten Soerensen)(1992).sc8",
    "sha1": "a05844df3305738e4030512f0063db2fe4f3bd11",
    "platform": "schip",
    "title": "Spacefight 2091",
    "release": "1992",
    "authors": ["Carsten Soerensen"],
    "description": "\t\t\t\t\t\t\tAarhus, DK\n\t\t\t\t\t\t\t16/9-92\n\n\nSpaceFight2091  - The doc\n\nOk, here's a little Super-Chip game for all you mad S-Chip-freaks out there!\n\n\n\n\nPURPOSE:\n\nThe purpose of the game is.... TO WIN (say what?)\n  In order to complete this quite difficult task your body (yes only your body\nand not your mind (this remark shows that I believe that the body merely serves\nas a tool for the brain)) have been warped through 87 different time-warps\ndue to some foolish scientists who didn't know what they were doing. This\nresulted in a rather big waste of resources but that's of course another story.\nWhen you finally arrive you can't recognize anything and two weird-looking\ndudes tell you that this is the year 2091!!! Frightening eh?\n  You are of course not very happy about your situation partly because you only\nhave 25 dollars in your wallet and the prizes have gone up about 30000% but\nmainly because IBM and the fucking PC clones have completely taken over all of\nthe computer-market resulting in the Amiga's death!\n  In a Holo-BiDirectional-FullDuplex-TV-store you see a newsflash concerning\nsome evil aliens about to invade the good ol' EARTH. Scientists think that they\nare being drawn towards the Earth due to the massive pollution the PC's cause.\nHowever if people had bought Amiga's instead (which don't pollute) they would\nhave been no aliens now!\n  This is your call! You sneak into a Warp-Transporter without a ticket and you\nend up at NASA where you get to talk to the boss and you tell him : \"OK you\nlisten to me you scumbag! I wanna get into a spacecraft, get up there and KICK\nSOME ALIEN BUTT!\". \"But why?\" the boss says. \"Personal motives\" you answer. If\nyou can save the Amigas existence you're ready to do anything!\n  You get the newest spacecraft (ZX-81) and you take off!!! TO SAVE THE AMIGA!\n  Battle you way through the 6 (increasingly harder) levels!!!\n\n\n\n\nCONTROLLING THE ZX-81\n\n  Though being very advanced the ZX-81 is extremely easy to control:\n\n  HexPad    Amiga    HP    Function\n\n    3         /      9      LEFT\n    C         *      /      RIGHT\n    A         1      0      FIRE\n\n\n\n\nABOUT THE GAME\n\n  It was written because I wanted to test my newly written S-Chip assembler for\nthe Amiga. It only took me 2 days to make this game (I'm so proud of myself!).\nI know that some of the code could have been programmed smarter (or smaller!)\nbut then again it was my first attempt so get off my back!\n\n  SourceSize: about 30 k\n  AsmSize:    2840 bytes\n  783 bytes of graphics and 200 bytes of buffers, reducing the codesize to\n  1857 bytes\n\nContact me for anything concerning CHIP like ideas for more games...\n\nSlammer\nCarsten Soerensen\nKronhjortevej 4\nDK-8270  Hoejbjerg\nDenmark\n\nE-Mail: u920659@daimi.aau.dk\n\n",
    "images": [
      "Spacefight_2091_SCHIP__1.png",
      "Spacefight_2091_SCHIP__2.png",
      "Spacefight_2091_SCHIP__3.png"
    ]
  },
  {
    "file": "Spoong (by SupSuper)(2018).ch8",
    "sha1": "318c6359405f8b1512b325c53eb119a6f9d57aef",
    "platform": "chip8",
    "title": "Spoong",
    "release": "2018",
    "authors": ["SupSuper"],
    "description": "\nSpoong - by SupSuper (2018)\n---------------------------\nOctoJam 5\n\n\nTwo-player Halloween Pong. Made in one hour because I'm bad with deadlines.\n\n\nControls:\n---------\nPress any key to start.\n\nPlayer 1: 4 / 7\nPlayer 2: D / E\n"
  },
  {
    "file": "Starfield (by Joel Yliluoma)(2015).ch8",
    "sha1": "c314300d1630a479678167e4e786cce2c17831cd",
    "platform": "chip8",
    "title": "Starfield",
    "release": "2015",
    "authors": ["Joel Yliluoma"]
  },
  {
    "file": "Stars  (by Sergey Naydenov)(2010).sc8",
    "sha1": "a4c8e14b43dc75bc960a42a5300f64dc6e52cf32",
    "platform": "schip",
    "title": "Stars",
    "release": "2010",
    "authors": ["Sergey Naydenov"]
  },
  {
    "file": "Static Organ (by TomR)(2015).xo8",
    "sha1": "085394b959f03a0e525b404d8a68a36e56d6446a",
    "platform": "xochip",
    "title": "Static Organ",
    "release": "2015",
    "authors": ["TomR"]
  },
  {
    "file": "Super Astro Dodge (by Revival Studios)(2008).sc8",
    "sha1": "c2a361700209116a300457eacbf33a8c40c01b83",
    "platform": "schip",
    "title": "Super Astro Dodge",
    "release": "2008",
    "authors": ["Revival Studios"],
    "description": "-----------------------------------------------------------------------------\n\t\t\t      /////////////////\n\t                      //////////////////\n        \t              ////          ////\n\t               \t      ////   ///////////\n\t                      ////  ///////////\n                              ////  ////\n                              ////  ///////////\n                              ////   //////////\n  \t     \t   \t\n  \t\t\t   www.revival-studios.com\n-----------------------------------------------------------------------------\nTitle\t\t:\tAstro Dodge\nAuthor\t\t:\tMartijn Wenting / Revival Studios\nGenre\t\t:\tGame\nSystem\t\t:\tChip8 / SuperChip8\nDate\t\t:\t18/12/2008\nProduct ID\t:\tRS-C8003\n-----------------------------------------------------------------------------\n\nAll the contents of this package are (c)Copyright 2008 Revival Studios.\n\nThe contents of the package may only be spread in its original form, and may not be\npublished or distributed otherwise without the written permission of the authors.\n\nDescription:\n------------\nAstro Dodge is an arcade game for the Chip8 and SuperChip8 systems.\nBoth versions of the game are included in this package.\n \nYour goal is to make your way through the asteroids field and dodge the asteroids, scoring points for each asteroid you are able to dodge.\nButton 2,4,6,8 will move your ship, button 5 will start the game.\n\nRunning the game(s):\n--------------------\nThe CHIP8 version of the game has been programmed to be compatible with original hardware like the Cosmac VIP and Telmac 1800.\nUse the Megachip emulator or any other Chip8/SuperChip compatible emulator to run the game(s).\n\nCredits:\n--------\nProgramming and Graphics by: Martijn Wenting\n\nDistribution:\n-------------\nThis package can be freely distributed in its original form.\nIf you would like to include this game in your rom package, please let me know.\n\nWatch out for more releases soon!\n\n\n\tMartijn Wenting / Revival Studios\n\n"
  },
  {
    "file": "Super Block (by Joshua Barretto)(2019).ch8",
    "sha1": "68b6f9336c1bdc4dcaf7fca78c3a719894bdd376",
    "platform": "chip8",
    "title": "Super Block",
    "release": "2019",
    "authors": ["Joshua Barretto"],
    "description": "\nSuper Block - by Joshua Barretto (2019)\n---------------------------------------\n\nTo need to explore all the levels and if you drop out of the screen,\nyou return to the original starting point instead of dying.\n\n\nControl (hexpad):\n-----------------\n5 = go JUMP (press again to kae a double jump)\n7 = go LEFT\n9 = go RIGHT\n6 = to change level\n\n\nManual made by Sly DC.\n\n\n\nhttps://github.com/zesterer/super-block\n\nPlay online:\nhttp://johnearnest.github.io/Octo/index.html?key=yRH33CPo"
  },
  {
    "file": "Super Etch-a-sketch (KrzysztofJeszke)(2020).sc8",
    "sha1": "f505bdc0b1f2da3cc4a69e3baaba8c3bf5303692",
    "platform": "schip",
    "title": "Super Etch-a-sketch",
    "release": "2020",
    "authors": ["KrzysztofJeszke"]
  },
  {
    "file": "Super Gem Catcher (by Dakota Hernandez)(2018).sc8",
    "sha1": "c8375d6a626ea21532cde178a7a0a22b7e511414",
    "platform": "schip",
    "title": "Super Gem Catcher",
    "release": "2018",
    "authors": ["Dakota Hernandez"]
  },
  {
    "file": "Super Maze (by David Winter)(199x).sc8",
    "sha1": "e6d910b7c9f9680df462662ce16336ebcb0eab1e",
    "platform": "schip",
    "title": "Super Maze",
    "release": "199x",
    "authors": ["David Winter"],
    "description": "SuperMaze, by David Winter\n\nDrawing a random maze like this one consists in drawing random diagonal\nlines. There are two possibilities: right-to-left line, and left-to-right\nline. Each line is composed of a 4*4 bitmap. As the lines must form non-\ncircular angles, the two bitmaps won't be '/' and '\\'. The first one\n(right line) will be a little bit modified. See at the end of this source.\n\nThe maze is composed of 16 lines (as the bitmaps are 4 pixels high), each\nline consists of 32 bitmaps.\nBitmaps are drawn in random mode. We choose a random value (0 or 1).\nIf it is 1, we draw a left line bitmap. If it is 0, we draw a right one.\n"
  },
  {
    "file": "Super Octo Track X-O (by Blastron)(2015).xo8",
    "sha1": "6e556d92f30a75e7fa8016891438ae082ef33ad4",
    "platform": "xochip",
    "title": "Super Octo Track X-O",
    "release": "2015",
    "authors": ["Blastron"]
  },
  {
    "file": "Super Particle Demo (by zeroZshadow)(2008).sc8",
    "sha1": "f11793f86baae9f5f0c77e5d7aa216c2180c3d07",
    "platform": "schip",
    "title": "Super Particle Demo",
    "release": "2008",
    "authors": ["zeroZshadow"],
    "description": "This is my particledemo for the Chip-8, SuperChip and MegaChip8.\nWorks on real hardware as well as emulators\n\nEnjoy!\n\n  zeroZshadow"
  },
  {
    "file": "Super Sierp Chaos (by Marco Varesio)(2015).sc8",
    "sha1": "0663449e1cc8d79ee38075fe86d6b9439a7e43d7",
    "platform": "schip",
    "title": "Super Sierp Chaos",
    "release": "2015",
    "authors": ["Marco Varesio"]
  },
  {
    "file": "Super Trip8 Demo (by Revival Studios)(2008).sc8",
    "sha1": "480b4dfa0918d034aea0bf8d8ef5b5a55e94b50b",
    "platform": "schip",
    "title": "Super Trip8 Demo",
    "release": "2008",
    "authors": ["Revival Studios"],
    "description": "-----------------------------------------------------------------------------\n\t\t\t      /////////////////\n\t                      //////////////////\n        \t              ////          ////\n\t               \t      ////   ///////////\n\t                      ////  ///////////\n                              ////  ////\n                              ////  ///////////\n                              ////   //////////\n  \t     \t   \t\n  \t\t\t   www.revival-studios.com\n-----------------------------------------------------------------------------\nTitle\t\t:\tTrip8 / SuperTrip8 demo\nAuthor\t\t:\tMartijn Wenting / Revival Studios\nGenre\t\t:\tDemo\nSystem\t\t:\tChip-8 / SuperChip8\nDate\t\t:\t14/10/2008\nProduct ID\t:\tRS-C8004\n-----------------------------------------------------------------------------\n\nAll the contents of this package are (c)Copyright 2008 Revival Studios.\n\nThe contents of the package may only be spread in its original form, and may not be\npublished or distributed otherwise without the written permission of the authors.\n\nDescription:\n------------\nThe Trip8/SuperTrip8 demo are demo's for the Chip-8 and SuperChip8 systems. The demo consists of an intro, 3D vectorballs, and 4 randomized dot-effects.  \n\nWriting a demo for the original Chip-8 interpreter was a real pain, since your framerate basically drops in half for every sprite you need to draw. So even clearing and redrawing a few dots will cause the framerate to drop to near zero :) Originally the demo was going to be bigger and there were much more graphical effects programmed/prototyped, but a lot of these effects turned out to be too much for the original unoptimized Chip-8 interpreters to handle. \n\nRunning the Demo:\n-----------------\nUse the Megachip emulator or any other Chip-8/SuperChip compatible emulator to run the slideshow.\n\nCredits:\n--------\nProgramming/Graphics/Design by: Martijn Wenting\n\nDistribution:\n-------------\nThis package can be freely distributed in its original form.\nIf you would like to include this slideshow in your rom package, please let me know.\n\nWatch out for more releases soon!\n\n\n\tMartijn Wenting / Revival Studios\n\n"
  },
  {
    "file": "SuperWorm V3 (by RB)(1992).sc8",
    "sha1": "f8008875a4b35dc7188eeca2a05535116371eaf0",
    "platform": "schip",
    "title": "SuperWorm V3",
    "release": "1992",
    "authors": ["RB"],
    "description": "-----------------------------------------------------------------------------\n\t\t\t      /////////////////\n\t                      //////////////////\n        \t              ////          ////\n\t               \t      ////   ///////////\n\t                      ////  ///////////\n                              ////  ////\n                              ////  ///////////\n                              ////   //////////\n  \t     \t   \t\n  \t\t\t   www.revival-studios.com\n-----------------------------------------------------------------------------\nTitle\t\t:\tSuperWorm V4\nAuthor\t\t:\tRB (Original game)\n\t\t \tUpdates and fixes by: Martijn Wenting / Revival Studios\nGenre\t\t:\tGame\nSystem\t\t:\tSuperChip8\nDate\t\t:\t10/08/2007 \nProduct ID\t:\tRS-C8001\n-----------------------------------------------------------------------------\n\nAll the contents of this package are (c)Copyright 2007 Revival Studios.\nOriginal game: SuperWorm is (c)Copyright 1992 RB\n\nThe contents of the package may only be spread in its original form, and may not be\npublished or distributed otherwise without the written permission of the authors.\n\nDescription:\n------------\nSuperWorm V4 is an update of the Chip8/SuperChip8 game: Worm3 by RB.\nIt includes several speed fixes and a new control system.\n\nRunning the game:\n-----------------\nUse the Megachip emulator or any other SuperChip compatible emulator to run the game.\n\nCredits:\n--------\nOriginal game by: RB\nUpdates and fixes by: Martijn Wenting\n\nDistribution:\n-------------\nThis package can be freely distributed in its original form.\nIf you would like to include this game in your rom package, please let me know.\n\nWatch out for more releases soon!\n\n\n\tMartijn Wenting / Revival Studios\n\n"
  },
  {
    "file": "SuperWorm V4 (by RB & Revival Studios)(2007).sc8",
    "sha1": "2d415bf1f31777b22ad73208c4d1ad27d5d4f367",
    "platform": "schip",
    "title": "SuperWorm V4",
    "release": "2007",
    "authors": ["RB & Revival Studios"]
  },
  {
    "file": "TMNT-NES (sound)(unknown author)(201x).xo8",
    "sha1": "8fd0212f4b8b491e8eb260e995313bdb210b1d6b",
    "platform": "xochip",
    "title": "TMNT-NES",
    "release": "201x"
  },
  {
    "file": "Tank Warfare (unknown author)(197x).ch8",
    "sha1": "9441cd611eb019217621a11ebeba15b499bbd31e",
    "platform": "chip8",
    "title": "Tank Warfare",
    "release": "197x"
  },
  {
    "file": "Tank-Viper (Demo).ch8",
    "sha1": "63458c204bd24234a33d263d965ea8d16dd5c9e8",
    "platform": "chip8",
    "title": "Tank-Viper",
    "description": "\nTank! - by RectusSA (2018)\n--------------------------\nOctoJam 5\n\n\nA two player game where you fire shells at each other.\n\n\nControls:\n---------\n5/8 - Change the shot power.\n\n7/9 - Change the shot angle.\n\nE - Fire!\n\n\nhttp://www.awfuljams.com/octojam-v/games/tank"
  },
  {
    "file": "Tapeworm.xo8",
    "sha1": "9c05f5295282abfd89483790191ea59f9d031de5",
    "platform": "xochip",
    "title": "Tapeworm",
    "description": "Tapeworm\n\n    Eat food or die\n    Bigger worms move faster\n    Don't eat yourself\n\nKnown issue(s)\n\n    Color scheme and graphics need polish\n    Speed and shrink rate need tuning\n\nMade in OctoDE"
  },
  {
    "file": "Team Chipotle Intro (by Ethan Pini)(2019).ch8",
    "sha1": "54d892ef1ac3ac2d2ff2b58d8662d0374eb77cdd",
    "platform": "chip8",
    "title": "Team Chipotle Intro",
    "release": "2019",
    "authors": ["Ethan Pini"]
  },
  {
    "file": "Tetris (Verisimilitudes)(2020).ch8",
    "sha1": "6194da2a89a3f431674d7323bf30f5ffe2f7190d",
    "platform": "chip8",
    "title": "Tetris",
    "release": "2020",
    "authors": ["Verisimilitudes"],
    "description": "                               TETRIS\n                          by Fran Dachille\n\nThis is my first release of the famous Tetris game on the HP48S. I was\ninspired by the lack enjoyable games for our favorite handheld.  [Not since the\nGoodies Disks have been available!  -jkh-]  This game, though it lacks some of\nthe whistles and bangs of fancy versions, performs on par with quality arcade\nversions (nota bene -> SPEED).  At my college, every person who picks up my\ncalculator is immediately hooked for hours.\n\nThis version is written for the CHIP48 game interpreter (c)\ncopyright 1990 Andreas Gustafsson.  \n\nThe 4 key is left rotate, 5 - left move, 6 - right move, 1\n- drop, ENTER - restart, DROP - end.  After every 5 lines, the speed\nincreases slightly and peaks at 45 lines.\n\nThere is room for improvement in this version.  Notably, background\npictures, a pause key (for now, hold ON), two rotate keys, various\nstarting skill levels, a B version which starts with randomn blocks,\nfinishing graphics, and high scores, just to name a few.\n\nIn order for improvements, I need to know if there is reasonable\ndemand.  If this game is worth playing for hours upon hours, please let\nme know.  If you wish to support the improvements, want future versions,\nand want to see other games ported to the HP48S, send $5.00 to:\n\n          FRAN DACHILLE\n          WEBB INSTITUTE\n          GLEN COVE, NY 11542\n\n"
  },
  {
    "file": "The Maze (Ian Schert)(2020).ch8",
    "sha1": "fa1b7ad92e0dd498a1c0b1d9bfc7296f3b96fca8",
    "platform": "chip8",
    "title": "The Maze",
    "release": "2020",
    "authors": ["Ian Schert"],
    "description": "\nThe Maze - by Ian Schert (2020)\n-------------------------------\nhttps://github.com/Schnert0/The-Maze\n\n\nWelcome to \"The Maze\"\n---------------------\n* explore a huge world! over 120 screens to traverse!\n* collect all 33 tokens hidden across the world!\n* go through collecting how you see fit\n\ncan you escape \"The Maze?\"\n\n\nCONTROLS:\n---------\n\nKey \tDirection\n-----------------\n5 \tUP\n7 \tLeft\n8 \tDown\n9 \tRight\n\n"
  },
  {
    "file": "The Rude Street (by SystemLogoff)(2019).sc8",
    "sha1": "d84494c47c5f63cf32fea555e8938c27941c2869",
    "platform": "schip",
    "title": "The Rude Street",
    "release": "2019",
    "authors": ["SystemLogoff"]
  },
  {
    "file": "Thom8s Was Alone (jusion)(2014).ch8",
    "sha1": "f274bf62145ba9f7740aab9d83e5b15db8047a1d",
    "platform": "chip8",
    "title": "Thom8s Was Alone",
    "release": "2014",
    "authors": ["jusion"],
    "description": "\nThom8s Was Alone - by jusion (2014)\n-----------------------------------\n\nAvoid spikes at all costs.\n\n\nControls:\n---------\n5 = Jump\n7 = Left\n9 = Right\n\n\n\n\nPlay online:\nhttps://johnearnest.github.io/Octo/index.html?gist=e526f976df887806f9d3"
  },
  {
    "file": "Tic-Tac-Toe (fix)[David Winter].ch8",
    "sha1": "40329847cb898f9b34a6aea1095be0a1be0b4546",
    "platform": "chip8",
    "title": "Tic-Tac-Toe",
    "authors": ["David Winter"],
    "description": "This version does not have the Fx55/Fx65 (load_store_quirk) issue (where score won't increment)\n"
  },
  {
    "file": "Tick-Tack-Toe (fix)(by Joseph Weisbecker)(1977).ch8",
    "sha1": "8c404dc15f854456cafe9b22fcdbaf16830ffde5",
    "platform": "chip8",
    "title": "Tick-Tack-Toe",
    "release": "1977",
    "authors": ["Joseph Weisbecker"],
    "description": "\nTick-Tack-Toe (fix) - by Joseph Weisbecker (1977)\n-------------------------------------------------\nCosmac VIP CDP18S711 Book - Page 46 (VIP-311)\n\n\nThis program uses the CHIP-8 INTERPRETER at 0000-01FF. You are \"O\", VIP is \"X\". \nYou move first. Press key 1-9 to put your \"O\" into a square. Squares are in the \nsame positions as keys 1-9. VIP then puts an \"X\" into an empty square. \n\nIf you get three \"O\" 's in a row you win the game. If VIP gets three \"X\" 's in a \nrow you lose the game. The game is a draw when all squares are filled without \ngetting 3 in a row. You can beat VIP because it is programmed to make a mistake \nonce in a while. \n\n\n"
  },
  {
    "file": "Tower of Hanoi (by Joel Yliluoma)(2015).ch8",
    "sha1": "80ffa819cfa42f2f5f9f836b67c666d01a915970",
    "platform": "chip8",
    "title": "Tower of Hanoi",
    "release": "2015",
    "authors": ["Joel Yliluoma"],
    "description": "\nTower of Hanoi - by Joel Yliluoma (2015)\n----------------------------------------\n\nTo pick up a piece from a tower to another, press and hold \"1\" for Tower 1, press and hold \"2\" for\nTower 2, press and hold \"3\" for Tower 3. to move a pices from a tower to another, press \"4 to go \nleft and press \"6\" to go right.\n"
  },
  {
    "file": "Traffic (by Christian Kosman)(2018).sc8",
    "sha1": "1f386e1ae47957dec485d3e4034dff706d316d15",
    "platform": "schip",
    "title": "Traffic",
    "release": "2018",
    "authors": ["Christian Kosman"]
  },
  {
    "file": "Truck Simul8or (by Bjorn Kempen)(2015).xo8",
    "sha1": "018e6da9937173b1ac44d4261e848af485dcd305",
    "platform": "xochip",
    "title": "Truck Simul8or",
    "release": "2015",
    "authors": ["Bjorn Kempen"]
  },
  {
    "file": "Turm8 (Tobias V. Langhoff)(2020).sc8",
    "sha1": "175bbb8b3b671c13ff6d9f5b80e31218956e7281",
    "platform": "schip",
    "title": "Turm8",
    "release": "2020",
    "authors": ["Tobias V. Langhoff"],
    "description": "\nTurm8\n=====\nby Tobias V. Langhoff (octojam 7)\n\n\nAbout:\n------\nThis is a collection of cellular automata called \"turmites\", implemented in Octo for SUPER-CHIP on the \nHP 48 graphing calculators.\n\nA \"turmite\" (also known as \"TurNing machine\") is a type of two-dimensional Turing machine. It consists \nof an ant that moves over a grid of pixels. Depending on the current pixel's color (limited to two colors \nin this implementation) and the ant's internal state, it can rotate, change its state, and/or change the \ncolor of the pixel before moving. From these simple rules, interesting patterns and behaviors emerge.\n\n\nControls:\n---------\n* \"5/7/8/9\" to move in menu.\n* \"B\" = Select\n* \"F\" and \"E\" = adjust speed\n* \"A\" = return to menu\n\n"
  },
  {
    "file": "Turtle (by Ian J Sikes)(2016).xo8",
    "sha1": "0268a789a6c1e281b6fc472c41bbdd00a40e2850",
    "platform": "xochip",
    "title": "Turtle",
    "release": "2016",
    "authors": ["Ian J Sikes"]
  },
  {
    "file": "U-Boat (by Michael Kemper)(1994).sc8",
    "sha1": "7321e1bbe885a749b2ca875d1f49fb6c01f54f91",
    "platform": "schip",
    "title": "U-Boat",
    "release": "1994",
    "authors": ["Michael Kemper"],
    "description": " Subject:  U-BOAT v1.0  (c)1994 Michael D. Kemper\nReleased:  v1.0 - 8/8/94\nRequires:  S-CHIP interpreter which can be found on Joseph Horn's\n           goodies disk 3.\n\nThis game is based on a game that I used to play back in the early 80's\non an Apple ][.  I believe the name of the program was \"Depth Charge.\"\nUnfortunately I don't know who was responsible for programming it.\n\nThe premise of the game is fairly simple.  You are the Captain of a sub\nhunting destroyer, and your objective is to sink as many enemy U-Boats as\nyou can.  Your only weapon against the U-Boats is your ship's supply of\ndepth charges.  You have an unlimited supply of charges but, due to the\namount of time it takes your second rate crew to reload, you may only have\nfour charges in the water at any given time.\n\nThe subs that you are hunting appear at random depths and have one of\nthree random velocities (stopped, ahead half, or ahead full).\nThere are six enemy subs visible at any one time.  When one of these\nsubs is destroyed, another will appear at a different location.\n\nThe keys used are as follows:\n\n     [1]     ship's speed full stop\n     [2]     ship's speed ahead half\n     [3]     ship's speed ahead full\n     [-]     drop depth charge\n     [/]     abort game\n     [+/-]   toggle sound\n     [<-]    exit program\n     [Enter] restart program\n\nScoring for the game is based on the depth of the sub, multiplied by one\nplus it's velocity.  For example:\nIf a sub is at a depth of 50, and he is stopped then he is worth 50 points.\nA sub at the same depth of 50, but moving at 1/2 speed is worth 100 points.\nA sub at a depth of 50, but moving at full speed is worth 150 points.\n\nThe time limit for the game is about 2.5 minutes.  At about 1:45 into the\ngame a warning buzzer goes off and an almost empty hourglass is displayed\nby your score to let you know that the game is about over.\n\nOnce the game is over your score, the high score, the number of charges\ndropped, the number of subs hit, and your hit percentage are displayed.\n\nA good game is about 2800 or so, and a really good game is around 3500.  I\nhaven't had a whole lot of time to play it, but my high is 3551.\n\n----------------------------------------------------------------------------\n\nThanks to Erik Bryntse for his S-CHIP interpreter, which was an extension\nto Andreas Gustafsson's CHIP-48 interpreter.  Thanks also to Christian\nEgeberg for his CHIPPER v2.11 assembler.  A big thanks to Joseph Horn for\ncollecting various HP48 programs and utilities.  His goodies files are just\nabout my only source of information on this fascinating calculator.\n\nIf there are any questions, comments or criticism's they can be emailed\nto mikek@access.mountain.net\n\nThis game is freeware, and may be distributed freely as long as this doc\nfile remains with it, and both the doc and program remain unchanged.  If\nyou find that you become wildly addicted to U-BOAT and can't sleep at\nnight knowing that I didn't receive any compensation for writing it then\nby all means send me enough to allow you to get your z's.\n\n============================================================================\nDisclaimer:\n     This program uses \"Super-Chip\" which makes use of undocumented\n     low-level features of the HP48 calculator, and may or may not\n     cause loss of data, excessive battery drainage, and/or damage to\n     the calculator hardware.  The author takes no responsibility\n     whatsoever for any damage caused by the use of this program.\n============================================================================",
    "images": ["U-Boat_SCHIP__1.png", "U-Boat_SCHIP__2.png"]
  },
  {
    "file": "VIP Demo (unknown author)(197x).ch8",
    "sha1": "7e46d8b67ccc71be45591089d2ec187f7ca8883e",
    "platform": "chip8",
    "title": "VIP Demo",
    "release": "197x",
    "description": "Hagley Museum and Library: Sarnoff/RCA Collection -Joseph A. Weisbecker's archived manuscripts and materials -Accession 2464 -Box Number AVD B41\n"
  },
  {
    "file": "VIP Demo - King Kong (unknown author)(197x).ch8",
    "sha1": "e60257f0718aa6aab249667bd90af598d21b97bc",
    "platform": "chip8",
    "title": "VIP Demo - King Kong",
    "release": "197x",
    "description": "Hagley Museum and Library: Sarnoff/RCA Collection -Joseph A. Weisbecker's archived manuscripts and materials -Accession 2464 -Box Number AVD B41\n"
  },
  {
    "file": "Videah Logo (by Ruairidh Carmichael)(2015).ch8",
    "sha1": "738c6a6ef6a285c3cdd708960413c0a3b1682c7e",
    "platform": "chip8",
    "title": "Videah Logo",
    "release": "2015",
    "authors": ["Ruairidh Carmichael"]
  },
  {
    "file": "WAVE Logo.xo8",
    "sha1": "738f8dd1aa53e5043ee9b45521b0af118c3970ee",
    "platform": "xochip",
    "title": "WAVE Logo",
    "description": "I made this for the WAVE Scratch Emulation Project as a default CHIP-8 ROM when you haven't \nimported any CHIP-8 ROMS yourself.\n\nScratch Project Link for WAVE v0.6: https://scratch.mit.edu/projects/590231890/"
  },
  {
    "file": "Walking Dog (by John Earnest)(2015).ch8",
    "sha1": "7171deb1dabdf37d7f87507a11d4c07d11690b97",
    "platform": "chip8",
    "title": "Walking Dog",
    "release": "2015",
    "authors": ["John Earnest"]
  },
  {
    "file": "Warshaws Revenge (by Ethan Pini)(2019).ch8",
    "sha1": "c9eb637f750e7ca11e5ab1f30b7a69db475e5e23",
    "platform": "chip8",
    "title": "Warshaws Revenge",
    "release": "2019",
    "authors": ["Ethan Pini"],
    "description": "\nWarshaws Revenge - by Ethan Pini (2019)\n---------------------------------------\n\nThis fun shooter is the antithesis to the great crash of '83.\nA \"Yar's Revenge\" Atari 2600 game clone.\n\n\nControl (hexpad):\n-----------------\n5 = go UP  \n7 = go LEFT\n8 = go DOWN\n9 = go RIGHT\nB = Shoot\n\n\n\nManual made by Sly DC.\n\n\n\nhttps://github.com/eth-p/uni-chip8/blob/master/module/chip-roms/warshaws_revenge.asm\n\n"
  },
  {
    "file": "Whack-A-Mole (unfinished game).ch8",
    "sha1": "cda3f758c2566c2067cfe6dd984747f6d24ca759",
    "platform": "chip8",
    "title": "Whack-A-Mole"
  },
  {
    "file": "Worm (rstein)(2020).ch8",
    "sha1": "2d6369d3e2ecfe3f180a5c4b8ad3513efacfd04f",
    "platform": "chip8",
    "title": "Worm",
    "release": "2020",
    "authors": ["rstein"],
    "images": ["Worm_SCHIP__1.png", "Worm_SCHIP__2.png"],
    "description": "\nWorm\n====\nby rstein (octojam 7)\n\n\nAbout:\n------\nI recently wrote a Chip-8 Interpreter and while researching i stumbled upon the Octojam and decided to \nwrite a game for it. As i am really creative it is a snake clone. This is supposed to run without waiting \nfor vsync after every sprite draw (vblank option in octo), as my interpreter didn't do this when i wrote \nthe game.\n\n\nControls:\n---------\nMovement is \"5/7/8/9\" and to start a new game press \"6\" at the end screen.\n\n\n\n"
  },
  {
    "file": "Worms demo (unknown author)(xxxx).sc8",
    "sha1": "709328365147967f434d1bf78430e9ec160cc24f",
    "platform": "schip",
    "title": "Worms demo"
  },
  {
    "file": "XOTrackerDemov0.1.1.xo8",
    "sha1": "4d223e2919e0f2463f2561d836015c6cd6c18eeb",
    "platform": "xochip",
    "title": "XOTrackerDemov0",
    "description": "To show a bit extensive use of XO-CHIP new audio capability, as music driver, as well as an utility \nto make ease of creating musics with 52 predefined samples, and 12 user definable samples.\n\nInterface control:\n\n    Press 4 for XO-Tracker main title\n    Press R for a simplistic Tracker Interface\n    Press F for synthesia view\n    Press V to reveal the song's cover image\n\nSong control:\n\n    Press 1 and 3 to switch song, 2 to pause/resume song\n    Press Q, A, to seek through song by frame. (Q page up, A page down)\n    Press Z, X, C, to control tickrate. (Z lower, C higher, X reset)\n\nThere are two songs included in this demo, which would be used on \"Tsukite The Bananafox\" game. The \noverworld theme is originally written for XO-Tracker, while the main theme was covered from:\n\nAs a side note, this program took over 3584 bytes for main program codes. There's no editor in-program \nimplemented, hence the main focus here is the source code you can tinker with. Open this link on new window \nand drag this cartridge to the new window page.\n\nThe reason to use my fork of Octo is the piano keys in Tool Box > Audio Tools, which come in handy for this.\n\nWhen you done with everything, you can put the data to the clean version of the music driver here or to be \nused on your own program."
  },
  {
    "file": "YAS (by Marco Varesio)(2015).ch8",
    "sha1": "2f34cace9cda8f04829b0cd0b39a3a1726fd4193",
    "platform": "chip8",
    "title": "YAS",
    "release": "2015",
    "authors": ["Marco Varesio"]
  },
  {
    "file": "You're Correct Horse ((sound)(unknown author)(201x).xo8",
    "sha1": "2e87573b0fe9a49123bbb86d8384d00a302dc2e4",
    "platform": "xochip",
    "title": "You're Correct Horse",
    "release": "201x"
  }
]
